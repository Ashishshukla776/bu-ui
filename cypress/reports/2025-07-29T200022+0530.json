{
  "stats": {
    "suites": 47,
    "tests": 199,
    "passes": 139,
    "pending": 32,
    "failures": 28,
    "testsRegistered": 199,
    "passPercent": 69.84924623115577,
    "pendingPercent": 16.08040201005025,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-07-29T14:00:34.482Z",
    "end": "2025-07-29T14:30:22.429Z",
    "duration": 1787947
  },
  "results": [
    {
      "uuid": "57089e0d-71b8-4268-836f-d78b62e53022",
      "title": "",
      "fullFile": "cypress\\e2e\\auth\\login.js",
      "file": "cypress\\e2e\\auth\\login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a9ffb5b9-a2c2-415e-b598-e724f5090003",
          "title": "Test case for login",
          "fullFile": "cypress\\e2e\\auth\\login.js",
          "file": "cypress\\e2e\\auth\\login.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Pass invalid email",
              "fullTitle": "Test case for login Pass invalid email",
              "timedOut": null,
              "duration": 2846,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(\"abc.xyzgmail.com\");\n  cy.get('.MuiFormHelperText-root').should(\"contain\", \"Please provide proper username\");\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Please enter a valid email.\");",
              "err": {},
              "uuid": "f63290b8-2da0-43ac-9695-3d6dd8bad81b",
              "parentUUID": "a9ffb5b9-a2c2-415e-b598-e724f5090003",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass wrong email",
              "fullTitle": "Test case for login Pass wrong email",
              "timedOut": null,
              "duration": 1027,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(\"abc@xyx.com\");\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"user not found.\");",
              "err": {},
              "uuid": "17e322f0-9c01-4fcf-99b3-125d815ef478",
              "parentUUID": "a9ffb5b9-a2c2-415e-b598-e724f5090003",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass invalid password",
              "fullTitle": "Test case for login Pass invalid password",
              "timedOut": null,
              "duration": 1318,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(Cypress.env(\"email\"));\n  cy.get(\"@password\").type(132134344);\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Invalid username or password.\");",
              "err": {},
              "uuid": "131be6d2-275d-41b3-9354-fb87f18c548f",
              "parentUUID": "a9ffb5b9-a2c2-415e-b598-e724f5090003",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass wrong password",
              "fullTitle": "Test case for login Pass wrong password",
              "timedOut": null,
              "duration": 1442,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(Cypress.env(\"email\"));\n  cy.get(\"@password\").type(\"AAsdf1234\");\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Invalid username or password.\");",
              "err": {},
              "uuid": "ae020ecb-9b07-40c8-a671-f1514495d3d4",
              "parentUUID": "a9ffb5b9-a2c2-415e-b598-e724f5090003",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass the valid email in upper-case",
              "fullTitle": "Test case for login Pass the valid email in upper-case",
              "timedOut": null,
              "duration": 2794,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let email = Cypress.env(\"email\").toUpperCase();\ncy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(email);\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.wait(\"@loginApi\").then(({\n  response\n}) => {\n  if (response.body.result === \"session_exists\") {\n    cy.get('[role=\"presentation\"] .MuiDialog-container .MuiPaper-root button').contains(\"Ok\").click();\n  }\n});\ncy.get('[aria-label=\"User Profile\"] > .MuiButtonBase-root').click();\ncy.get('.MuiPaper-root .MuiTypography-root').contains(\"Sign out\").click();",
              "err": {},
              "uuid": "b4624e16-6e40-4d95-8ffd-80db5cb6a1bc",
              "parentUUID": "a9ffb5b9-a2c2-415e-b598-e724f5090003",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f63290b8-2da0-43ac-9695-3d6dd8bad81b",
            "17e322f0-9c01-4fcf-99b3-125d815ef478",
            "131be6d2-275d-41b3-9354-fb87f18c548f",
            "ae020ecb-9b07-40c8-a671-f1514495d3d4",
            "b4624e16-6e40-4d95-8ffd-80db5cb6a1bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9427,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8e1428c9-081a-4e2e-9cca-0fd5454b6da0",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\allSoftware.js",
      "file": "cypress\\e2e\\one\\allSoftware.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "823604d7-dc45-44a0-bccf-9174e939fde5",
          "title": "Test case for allSoftware",
          "fullFile": "cypress\\e2e\\one\\allSoftware.js",
          "file": "cypress\\e2e\\one\\allSoftware.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Asset : Lead Management Software(lms)",
              "fullTitle": "Test case for allSoftware Asset : Lead Management Software(lms)",
              "timedOut": null,
              "duration": 7718,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let lmsDes = 'Efficiently manage and assign lead information.';\ncy.Modules(`#lms ${one.moduleNameID}`, _helper.modules.lms, `#lms ${one.moduleDescID}`, lmsDes, `#lms ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.lms);",
              "err": {},
              "uuid": "cf10bb62-084d-43f4-abb4-ecb5174efdec",
              "parentUUID": "823604d7-dc45-44a0-bccf-9174e939fde5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Customer relationship management Software(crm)",
              "fullTitle": "Test case for allSoftware Asset : Customer relationship management Software(crm)",
              "timedOut": null,
              "duration": 3302,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let crmDes = 'Drive sales success, build stronger client relationships, and grow revenue with our CRM.';\ncy.Modules(`#crm  ${one.moduleNameID}`, _helper.modules.crm, `#crm  ${one.moduleDescID}`, crmDes, `#crm  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.crm);",
              "err": {},
              "uuid": "3230b832-c784-40a1-aacd-ca91e551709a",
              "parentUUID": "823604d7-dc45-44a0-bccf-9174e939fde5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Approval Management Software(cnf)",
              "fullTitle": "Test case for allSoftware Asset : Approval Management Software(cnf)",
              "timedOut": null,
              "duration": 4824,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let aprDes = 'The approver can approve public and private data as required.';\ncy.Modules(`#cnf  ${one.moduleNameID}`, _helper.modules.apr, `#cnf  ${one.moduleDescID}`, aprDes, `#cnf ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.apr);",
              "err": {},
              "uuid": "3641bac8-3dc8-4a3d-a0d3-5631f92e4977",
              "parentUUID": "823604d7-dc45-44a0-bccf-9174e939fde5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Buopso Form",
              "fullTitle": "Test case for allSoftware Asset : Buopso Form",
              "timedOut": null,
              "duration": 3742,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let formsDes = 'Build your form as required and gather the form data.';\ncy.Modules(`#forms  ${one.moduleNameID}`, _helper.modules.buForms, `#forms  ${one.moduleDescID}`, formsDes, `#forms  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.buForms);",
              "err": {},
              "uuid": "65ba7536-2bd6-46c3-a405-0ea981fb1eb6",
              "parentUUID": "823604d7-dc45-44a0-bccf-9174e939fde5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Task Management",
              "fullTitle": "Test case for allSoftware Asset : Task Management",
              "timedOut": null,
              "duration": 4680,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let taskDes = 'Task management system. Manage task records and assign tasks to the user.';\ncy.Modules(`#task  ${one.moduleNameID}`, _helper.modules.taskManagement, `#task  ${one.moduleDescID}`, taskDes, `#task  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.taskManagement);",
              "err": {},
              "uuid": "2256d5da-c948-4ea1-b399-c01774c6c416",
              "parentUUID": "823604d7-dc45-44a0-bccf-9174e939fde5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Invoice",
              "fullTitle": "Test case for allSoftware Asset : Invoice",
              "timedOut": null,
              "duration": 3746,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let InvoiceDes = 'Invoice for customers and manage payment and ledger history.';\ncy.Modules(`#invoice ${one.moduleNameID}`, _helper.modules.invoice, `#invoice  ${one.moduleDescID}`, InvoiceDes, `#invoice ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.invoice);",
              "err": {},
              "uuid": "b7527525-7540-494c-bf44-51a507e2cbd1",
              "parentUUID": "823604d7-dc45-44a0-bccf-9174e939fde5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf10bb62-084d-43f4-abb4-ecb5174efdec",
            "3230b832-c784-40a1-aacd-ca91e551709a",
            "3641bac8-3dc8-4a3d-a0d3-5631f92e4977",
            "65ba7536-2bd6-46c3-a405-0ea981fb1eb6",
            "2256d5da-c948-4ea1-b399-c01774c6c416",
            "b7527525-7540-494c-bf44-51a507e2cbd1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28012,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8cedbc7a-7c30-4647-980c-053bec323868",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\addUser.js",
      "file": "cypress\\e2e\\one\\myAccount\\addUser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "219bb6ee-6bd1-4cd7-8cb6-4dd17821beae",
          "title": "Add User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\addUser.js",
          "file": "cypress\\e2e\\one\\myAccount\\addUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test with a valid unique Valid email",
              "fullTitle": "Add User functionality test Test with a valid unique Valid email",
              "timedOut": null,
              "duration": 8135,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('[placeholder=\"Email id\"]').type(uniqueEmail);\ncy.contains(\"Select permission template\").click();\ncy.wait(\"@getTemplate\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let teplateName = response.body.result.values.map(ele => ele.label);\n  // cy.log(teplateName)\n  cy.wrap(teplateName).as(\"templates\");\n  if (response.body.result.values.length > 0) {\n    cy.assetDropdownSel(teplateName[0]).should(\"have.text\", teplateName[0]);\n  }\n  customElements;\n});\ncyGet(\"@templates\").then(response => {\n  templateLabel = response;\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\n// cy.pause()\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.requestSuccess);",
              "err": {},
              "uuid": "96d8c764-12ae-4f32-a81d-b2190f26bce7",
              "parentUUID": "219bb6ee-6bd1-4cd7-8cb6-4dd17821beae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with a invalid email",
              "fullTitle": "Add User functionality test Test with a invalid email",
              "timedOut": null,
              "duration": 4004,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let randomString_1 = Math.random().toString(36).substring(2, 11);\nlet uniqueEmail_1 = `testuser${randomString_1}example.com`;\ncy.get('[placeholder=\"Email id\"]').type(uniqueEmail_1);\ncy.contains(\"Select permission template\").click();\ncy.get('[data-testid=\"chipinput-chip-nkx7xamrs\"]').trigger('mouseover');\ncy.wait(500);\ncy.get('.MuiTooltip-tooltip').should('have.text', 'Email is not valid.');",
              "err": {},
              "uuid": "58cbd574-d48c-4d31-95b8-f8ecd1e849a6",
              "parentUUID": "219bb6ee-6bd1-4cd7-8cb6-4dd17821beae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with a Exist email",
              "fullTitle": "Add User functionality test Test with a Exist email",
              "timedOut": null,
              "duration": 3235,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"Email id\"]').type(uniqueEmail);\ncy.contains(\"Select permission template\").click();\ncy.get('[data-testid=\"chipinput-chip-nkx7xamrs\"]').trigger('mouseover');\ncy.get('.MuiTooltip-tooltip').should('have.text', 'User already exist.');\ncy.get(lead.typeBtn).contains(\"Save\").should(\"be.disabled\");",
              "err": {},
              "uuid": "c7ef3a57-d3fc-49c0-83ba-6fd1d3364592",
              "parentUUID": "219bb6ee-6bd1-4cd7-8cb6-4dd17821beae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test For addTemplate from Add user page",
              "fullTitle": "Add User functionality test Test For addTemplate from Add user page",
              "timedOut": null,
              "duration": 3661,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//  cy.componentLabel(lead.formLabel, \"Select permission template\", \"button\").click()\ncy.get('[data-testid=\"button-typography-8x5inumxs\"]').first().click(); //select the template\n// cy.assetDropdownSel(templateLabel[0]).click()\ncy.get('[data-testid=\"dropdown-footer\"]').contains('Add template').click(); // add new template\n// cy.contains('Add template').click();\ncy.url().should('eq', `${Cypress.env(\"url\")}/template`);\ncy.contains('Create').should('be.visible').should('not.be.disabled').click();",
              "err": {},
              "uuid": "1d6e46c8-e59e-48af-8a68-47fc9176506f",
              "parentUUID": "219bb6ee-6bd1-4cd7-8cb6-4dd17821beae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96d8c764-12ae-4f32-a81d-b2190f26bce7",
            "58cbd574-d48c-4d31-95b8-f8ecd1e849a6",
            "c7ef3a57-d3fc-49c0-83ba-6fd1d3364592",
            "1d6e46c8-e59e-48af-8a68-47fc9176506f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19035,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "acfc932e-de79-4de1-9e91-3ad9502c9cba",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
      "file": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7be1dd3d-aa5e-47cd-87ff-0111d3a957f5",
          "title": "Manage User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
          "file": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check system default required field should be already required and should not be changeable  ",
              "fullTitle": "Manage User functionality test Check system default required field should be already required and should not be changeable  ",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.get('[placeholder=\"search....\"]').type(uniqueTemplateName);\ncy.get('table> tbody').children(\"tr\").contains(uniqueTemplateName).next().click();\ncy.get(\"#edit\").click();\ncy.wait(1000);\ncy.get('input[placeholder=\"Enter template name\"]').clear().type(uniqueTemplateNameupdated);\ncy.get('[role=\"list\"] [type=\"button\"]').click();\ncy.wait('@getPipelines', {\n  timeout: 10000\n}).then(interception => {\n  const responseBody = interception.response.body;\n  const leadName = responseBody.result.values[0].label;\n  cy.get(`${lead.chooseOptions} > :nth-child(2)`).click();\n  cy.contains(leadName).click();\n  cy.get('[data-testid=\"recordaccesstable-tablebody-circtrpwp\"] > [data-testid=\"ownershiprow-tablerow-6gy8mx6fe\"] > :nth-child(4) > [data-testid=\"ownershiprow-checkbox-y6wgiibo8\"] > .PrivateSwitchBase-input');\n  cy.get('[data-testid=\"ownershiprow-tablecell-jgp2w36xa\"] button').eq(1).click();\n  cy.wait(\"@tempFieldsList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const fieldLabel = response.body.result.values.map(ele => ele.label);\n    const fieldId = response.body.result.values.map(ele => ele.id);\n    cy.log(fieldLabel[0]);\n    cy.get('input[placeholder=\"Search...\"]').type(fieldLabel[0]);\n    cy.get(`[data-rbd-draggable-id=\"${fieldId[0]}\"] > .MuiGrid-root > :nth-child(2) > :nth-child(1) button`).click();\n    cy.contains('Required').should('have.class', 'Mui-disabled');\n    cy.get('[data-testid=\"bupopper-dialogactions-0zh9xps0l\"]').find('[data-testid=\"Cancel\"]').click();\n    cy.get('#send').click();\n    cy.get(lead.typeBtn).contains(\"Save\").click();\n  });\n  // })\n});",
              "err": {},
              "uuid": "aebdd0f9-e4e1-4577-b74c-c56d50afd113",
              "parentUUID": "7be1dd3d-aa5e-47cd-87ff-0111d3a957f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "c7151163-da08-4d27-9b42-2b7be5cedd10",
              "title": "Add Template",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify the selected software and available softwares on the Create Template page",
                  "fullTitle": "Manage User functionality test Add Template Verify the selected software and available softwares on the Create Template page",
                  "timedOut": null,
                  "duration": 5937,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncyGet(globalSel.createtestid).contains(\"Create\").click();\ncy.wait(\"@modulePermission\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const [firstModule, ...availableModules] = response.body.result.add;\n  cyGet(`[data-testid=\"permissionsoftwarelist-typography-ftrzexyr7\"]`).should(\"contain.text\", \"Selected software\");\n  cyGet(`[data-testid=\"permissionsoftwarelist-menulist-aafxej4yj\"]`).first().find('[data-testid=\"permissionsoftwarelist-typography-zackmqq0q\"]').should('contain.text', formatModuleName(firstModule)); // e.g. Lead Management\n  availableModules.forEach(module => {\n    cyGet('[data-testid=\"permissionsoftwarelist-menulist-2qkcm4j30\"]').find(`[data-testid=\"permissionsoftwarelist-typography-86cpoqkhp\"]`).should('contain.text', formatModuleName(module));\n  });\n});",
                  "err": {},
                  "uuid": "f8ab5b7a-23f3-434f-b38b-912ea7c9a3c5",
                  "parentUUID": "c7151163-da08-4d27-9b42-2b7be5cedd10",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Add user template",
                  "fullTitle": "Manage User functionality test Add Template Add user template",
                  "timedOut": null,
                  "duration": 9548,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncyGet(globalSel.createtestid).contains(\"Create\").click();\n// Fill template name\nbutextField(`[data-testid=\"index-textfield-fm1l89cxe\"]`, `label`).contains(\"Template name\");\nbutextField(`[data-testid=\"index-textfield-fm1l89cxe\"]`, `input[placeholder=\"Enter template name\"]`).type(uniqueTemplateName);\n// Open dropdown and select pipeline\nbudropdown(`[data-testid=\"managepermission-stack-m3in09ace\"] > :first`, `[data-testid=\"button-typography-8x5inumxs\"]`, `Select Pipeline`);\ncy.wait(\"@getPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pipelines = response.body.result.values.map(ele => ele.label);\n  const firstPipeline = pipelines[0];\n  // Search if more than 5 pipelines\n  if (pipelines.length > 5) {\n    buSearchbox(globalSel.search, firstPipeline);\n  }\n  budropdownOption(firstPipeline).first().click();\n  // Verify ownership permissions UI\n  cyGet('[data-testid=\"ownershiprow-iconbutton-ph6ah241c\"]').click();\n  cy.contains('thead', 'Permission');\n  cy.contains('thead', 'Owner only');\n  cy.contains('thead', 'Everything');\n  cy.contains('thead', 'Select fields');\n  cy.contains('tr', firstPipeline);\n  // View permission should be checked and disabled\n  cy.contains('tr', 'View').find('input[type=\"checkbox\"]').eq(0).should('be.checked').and('be.disabled');\n  // Save\n  buSaveButton().click();\n});",
                  "err": {},
                  "uuid": "6c07dccc-065b-43dd-ba04-20e7d4c82c0f",
                  "parentUUID": "c7151163-da08-4d27-9b42-2b7be5cedd10",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f8ab5b7a-23f3-434f-b38b-912ea7c9a3c5",
                "6c07dccc-065b-43dd-ba04-20e7d4c82c0f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15485,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "caefb21b-d789-4a5b-b90f-7a8abb179141",
              "title": "Assign and Edit Template",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Assign Template to user",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Assign Template to user",
                  "timedOut": null,
                  "duration": 15189,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageUsers`);\ncy.wait(\"@userGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _user, _user2;\n  user = response.body.result.values.find(ele => ele.role === \"std\");\n  if (!user) {\n    this.skip();\n  }\n  cy.intercept('GET', `**/crew/users//${user.id}`).as('getUserById');\n  cyGet(`[data-testid=\"activitybar-textfield-8eiuz4v4a\"] input`).type((_user = user) === null || _user === void 0 ? void 0 : _user.label);\n  onesecondWait();\n  cy.contains('tr', (_user2 = user) === null || _user2 === void 0 ? void 0 : _user2.label).find(`[data-testid=\"Action\"]`).click();\n  cyGet(\"#edit\").click({\n    force: true\n  });\n  twosecondWait();\n  cy.wait(\"@getUserById\").then(({\n    response\n  }) => {\n    const assignedTemplate = response.body.result.profile.template.label;\n    cyGet(`[data-testid=\"chipinput-iconbutton-ycchky4nm\"]`).click();\n    cy.wait(\"@getTempalte\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalTemplates = response.body.result.pages.totalRecords;\n      const templates = response.body.result.values.map(ele => ele.label);\n      if (assignedTemplate === \"No template\") {\n        userTemplate = templates[0];\n        if (totalTemplates > 5) {\n          buSearchbox(globalSel.search, userTemplate);\n        }\n        budropdownOption(userTemplate, `[data-testid=\"buchip-chip-5r51zm55o\"]`).click();\n      } else {\n        userTemplate = templates.find(ele => ele !== assignedTemplate);\n        if (totalTemplates > 5) {\n          buSearchbox(globalSel.search, userTemplate);\n        }\n        budropdownOption(userTemplate, `[data-testid=\"buchip-chip-5r51zm55o\"]`).click();\n      }\n      twosecondWait();\n      buSaveButton().click();\n      cyGet('.MuiSnackbarContent-message').should(\"contain.text\", \"User Permissions Updated\");\n      logout();\n      // cy.clearCookies();\n    });\n  });\n});",
                  "err": {},
                  "uuid": "387a775e-cf04-449d-ab47-08c12fb45c82",
                  "parentUUID": "caefb21b-d789-4a5b-b90f-7a8abb179141",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to create a record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to create a record.",
                  "timedOut": null,
                  "duration": 17247,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user3;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const create = recordPermission.create;\n  setPermissionOnRoleSwitch(create, false, \"Create\", 0);\n  // Login with standard user\n  cy.login((_user3 = user) === null || _user3 === void 0 ? void 0 : _user3.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Create Lead\"]`).should(\"not.be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "e958932e-3c56-405f-8308-bafd31239174",
                  "parentUUID": "caefb21b-d789-4a5b-b90f-7a8abb179141",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to import the record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to import the record.",
                  "timedOut": null,
                  "duration": 14946,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user4;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const imp = recordPermission.import;\n  setPermissionOnRoleSwitch(imp, false, \"Import\", 0);\n  // Login with standard user\n  cy.login((_user4 = user) === null || _user4 === void 0 ? void 0 : _user4.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Import\"]`).should(\"not.be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "76f24e6c-5630-4cbd-aea5-3bb8afd83624",
                  "parentUUID": "caefb21b-d789-4a5b-b90f-7a8abb179141",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to activity of record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to activity of record.",
                  "timedOut": null,
                  "duration": 17920,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user5;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const activity = recordPermission.activity;\n  setPermissionOnRoleSwitch(activity, false, \"Activity\", 0);\n  // Login with standard user\n  cy.login((_user5 = user) === null || _user5 === void 0 ? void 0 : _user5.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"buelementgroup-box-n1f8dc7ag\"] [aria-label=\"Split view\"]`).click();\n  cyGet(`[data-testid=\"communicationbar-box-951cbwqi4\"]`).find(`[aria-label=\"Activities\"]`);\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "6e1bf66e-4a59-4c80-ae7b-73cb358e2d46",
                  "parentUUID": "caefb21b-d789-4a5b-b90f-7a8abb179141",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to Whatsapp.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to Whatsapp.",
                  "timedOut": null,
                  "duration": 20245,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user6;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const wa = recordPermission.wa;\n  setPermissionOnRoleSwitch(wa, false, \"Whatsapp\", 0);\n  // Login with standard user\n  cy.login((_user6 = user) === null || _user6 === void 0 ? void 0 : _user6.email);\n  // twosecondWait()\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"buelementgroup-box-n1f8dc7ag\"] [aria-label=\"Split view\"]`).click();\n  cyGet('[data-testid=\"communicationbar-box-951cbwqi4\"]').find(`[aria-label=\"Whatsapp\"]`);\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "24536bd0-2e14-4a10-ab15-aadd65521eee",
                  "parentUUID": "caefb21b-d789-4a5b-b90f-7a8abb179141",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has not permission to create a record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has not permission to create a record.",
                  "timedOut": null,
                  "duration": 16012,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user7;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const create = recordPermission.create;\n  setPermissionOnRoleSwitch(create, true, \"Create\", 0);\n  // Login with standard user\n  cy.login((_user7 = user) === null || _user7 === void 0 ? void 0 : _user7.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Create Lead\"]`).should(\"be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "3d43419c-94bd-4a32-87bb-bd33436f51cb",
                  "parentUUID": "caefb21b-d789-4a5b-b90f-7a8abb179141",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has not permission to import the record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has not permission to import the record.",
                  "timedOut": null,
                  "duration": 15590,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user8;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const imp = recordPermission.import;\n  setPermissionOnRoleSwitch(imp, true, \"Import\", 0);\n  // Login with standard user\n  cy.login((_user8 = user) === null || _user8 === void 0 ? void 0 : _user8.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Import\"]`).should(\"be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "0109f99f-b0b1-4b27-b514-0a7d661a02c3",
                  "parentUUID": "caefb21b-d789-4a5b-b90f-7a8abb179141",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "387a775e-cf04-449d-ab47-08c12fb45c82",
                "e958932e-3c56-405f-8308-bafd31239174",
                "76f24e6c-5630-4cbd-aea5-3bb8afd83624",
                "6e1bf66e-4a59-4c80-ae7b-73cb358e2d46",
                "24536bd0-2e14-4a10-ab15-aadd65521eee",
                "3d43419c-94bd-4a32-87bb-bd33436f51cb",
                "0109f99f-b0b1-4b27-b514-0a7d661a02c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 117149,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "cbd471f4-8cf9-402a-b970-afbe90d54a3d",
              "title": "Delete TemPlate functionality",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete Template",
                  "fullTitle": "Manage User functionality test Delete TemPlate functionality Delete Template",
                  "timedOut": null,
                  "duration": 5793,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let msg1 = \"Delete template\";\nlet msg2 = \"Are you sure you want to delete this Template ?\";\ncy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncy.wait(\"@templateGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const unAssignedTemplate = response.body.result.values.filter(ele => ele.assignedTo.length === 0);\n  if (unAssignedTemplate.length > 0) {\n    cyGet(`[data-testid=\"templatelist-textfield-e9dj43sha\"] input`).type(unAssignedTemplate[0].label);\n    cy.contains('tr', unAssignedTemplate[0].label).find(`[data-testid=\"Action\"]`).click();\n    cyGet(\"#delete\").click();\n    buCaption(`[role=\"dialog\"]`, `#customized-dialog-title p`, msg1, `[role=\"dialog\"] [data-testid=\"deletetemplate-typography-5sxlboqg8\"]`, msg2);\n    cyGet(`[data-testid=\"Delete\"]`).click();\n  } else {\n    cy.log(`Teplate not available for delete`);\n  }\n});",
                  "err": {},
                  "uuid": "f18d2342-c982-49a1-a852-6b7f48b6e292",
                  "parentUUID": "cbd471f4-8cf9-402a-b970-afbe90d54a3d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Assigned Tempale should not be delete",
                  "fullTitle": "Manage User functionality test Delete TemPlate functionality Assigned Tempale should not be delete",
                  "timedOut": null,
                  "duration": 6403,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncy.wait(\"@templateGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const assignedTemplate = response.body.result.values.filter(ele => ele.assignedTo.length > 0);\n  if (assignedTemplate.length > 0) {\n    cyGet(`[data-testid=\"templatelist-textfield-e9dj43sha\"] input`).type(assignedTemplate[0].label);\n    cy.contains('tr', assignedTemplate[0].label).find(`[data-testid=\"Action\"]`).click();\n    cy.get(\"#delete\").should(\"have.attr\", \"aria-disabled\", \"true\");\n  } else {\n    cy.log(`Teplate not available for delete`);\n  }\n});",
                  "err": {},
                  "uuid": "763158b4-5c41-4a64-8f2c-f624f58ed509",
                  "parentUUID": "cbd471f4-8cf9-402a-b970-afbe90d54a3d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f18d2342-c982-49a1-a852-6b7f48b6e292",
                "763158b4-5c41-4a64-8f2c-f624f58ed509"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12196,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [
            "aebdd0f9-e4e1-4577-b74c-c56d50afd113"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "576dbf23-458c-4fd9-99a4-128266567a62",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\manageUser.js",
      "file": "cypress\\e2e\\one\\myAccount\\manageUser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9bc8fcc5-f097-4f20-9f4f-648c98748213",
          "title": "search User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\manageUser.js",
          "file": "cypress\\e2e\\one\\myAccount\\manageUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Search user by search user functionality on second page",
              "fullTitle": "search User functionality test Search user by search user functionality on second page",
              "timedOut": null,
              "duration": 7432,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@userList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const userName = response.body.result.values.filter(ele => ele.status > 0);\n  const user = userName.slice(-1)[0];\n  cy.get('[placeholder=\"search....\"]').type(user.label);\n  cy.wait(\"@userList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    expect(response.body.result.values[0]).has.property(\"label\", user.label);\n  });\n});",
              "err": {},
              "uuid": "9bd5680b-cd92-457f-8092-6961cb86a134",
              "parentUUID": "9bc8fcc5-f097-4f20-9f4f-648c98748213",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9bd5680b-cd92-457f-8092-6961cb86a134"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7432,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "229724e4-169e-4f28-925b-0efce4f9b260",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\profile.js",
      "file": "cypress\\e2e\\one\\myAccount\\profile.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a16abc40-0949-4069-9207-4d02080cfa1b",
          "title": "Verify My Profile Page",
          "fullFile": "cypress\\e2e\\one\\myAccount\\profile.js",
          "file": "cypress\\e2e\\one\\myAccount\\profile.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update user name and verify with profile",
              "fullTitle": "Verify My Profile Page Update user name and verify with profile",
              "timedOut": null,
              "duration": 7821,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const UpdatedUsername = faker.person.fullName();\ncyGet(\"#name-label\").should(\"have.text\", \"Name *\");\ncyGet('input#name').should(\"have.attr\", \"required\");\ncyGet('input#name').clear().type(UpdatedUsername);\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\ncy.reload();\ncy.wait(500);\ncy.contains(`${UpdatedUsername}'s Profile`).should('be.visible');",
              "err": {},
              "uuid": "85316742-c84a-4f67-ba0b-06f7a4d2e51d",
              "parentUUID": "a16abc40-0949-4069-9207-4d02080cfa1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User name should be required",
              "fullTitle": "Verify My Profile Page User name should be required",
              "timedOut": null,
              "duration": 1379,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('input[placeholder=\"Name\"]').clear();\ncy.get('#name-helper-text').should('have.text', \"Field is required!\");",
              "err": {},
              "uuid": "ac295daa-6af6-42f6-83a8-e629227d5a31",
              "parentUUID": "a16abc40-0949-4069-9207-4d02080cfa1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify email Address",
              "fullTitle": "Verify My Profile Page Verify email Address",
              "timedOut": null,
              "duration": 1921,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.componentLabel('#email-label', \"Email address\", \"input\").should(\"have.value\", Cypress.env(\"email\"));",
              "err": {},
              "uuid": "71a737bc-18e2-4944-8385-a299751efd8a",
              "parentUUID": "a16abc40-0949-4069-9207-4d02080cfa1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Mobile number",
              "fullTitle": "Verify My Profile Page Update Mobile number",
              "timedOut": null,
              "duration": 3253,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#mobile-label').should(\"have.text\", \"Mobile number *\");\n// cy.get('#mobile').should(\"have.attr\", \"required\");\ncy.get('#mobile').clear().type(faker.string.numeric(10));\ncy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");",
              "err": {},
              "uuid": "e08f0bcb-1926-4b53-a54e-f1f083bc93cb",
              "parentUUID": "a16abc40-0949-4069-9207-4d02080cfa1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Mobile number should be in mobile number format",
              "fullTitle": "Verify My Profile Page Mobile number should be in mobile number format",
              "timedOut": null,
              "duration": 2610,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#mobile').clear();\ncy.get('#mobile').type('wesfd');\ncy.get('#mobile-helper-text').should('have.text', \"Mobile number is not valid\");\ncy.get('.MuiSnackbarContent-message').should('have.text', \"Invalid mobile\");",
              "err": {},
              "uuid": "f5c6cabe-421e-4614-a69d-e55a4fea0cc4",
              "parentUUID": "a16abc40-0949-4069-9207-4d02080cfa1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that total listed user is equal to Total users",
              "fullTitle": "Verify My Profile Page Verify that total listed user is equal to Total users",
              "timedOut": null,
              "duration": 1224,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@usersList\").then(({\n  response\n}) => {\n  let totalCount = response.body.result.pages.totalRecords;\n  cy.get('[role=\"tabpanel\"] > :nth-child(1) > :nth-child(2) > :nth-child(1) > :nth-child(1) > :nth-child(2) ').contains(totalCount);\n});",
              "err": {},
              "uuid": "e1ffb7b6-a8de-4c7d-9fdd-9a8009c74481",
              "parentUUID": "a16abc40-0949-4069-9207-4d02080cfa1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85316742-c84a-4f67-ba0b-06f7a4d2e51d",
            "ac295daa-6af6-42f6-83a8-e629227d5a31",
            "71a737bc-18e2-4944-8385-a299751efd8a",
            "e08f0bcb-1926-4b53-a54e-f1f083bc93cb",
            "f5c6cabe-421e-4614-a69d-e55a4fea0cc4",
            "e1ffb7b6-a8de-4c7d-9fdd-9a8009c74481"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18208,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "00764bdb-6d2a-4ffa-8411-efcb5f6b1699",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e6082091-f613-4483-af43-a3e6a63b5b5d",
          "title": "Nevigate the setting page and create pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Pipeline name can't be blank",
              "fullTitle": "Nevigate the setting page and create pipeline Pipeline name can't be blank",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\nbutextField(pipelineSel.piptextfield, \"input\").click();\ncy.get('.MuiFormHelperText-root').should(\"contain\", `${messages.blankPip}.`);\nbuButton(globalSel.savetestid).should(\"be.disabled\").click({\n  force: true\n});\ncy.get('.MuiTooltip-tooltip').should(\"contain\", `${messages.blankPip}.`);",
              "err": {},
              "uuid": "8b67a121-9891-4214-90a7-dd251ed35d60",
              "parentUUID": "e6082091-f613-4483-af43-a3e6a63b5b5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline already exist ",
              "fullTitle": "Nevigate the setting page and create pipeline Pipeline already exist ",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let piplabel = response.body.result.values[0].label;\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\n  butextField(pipelineSel.piptextfield, \"input\").type(piplabel);\n});\ncy.get('.MuiFormHelperText-root').should(\"have.text\", messages.existsPip);\nbuButton(globalSel.savetestid).should(\"be.disabled\").click({\n  force: true\n});\ncy.get('.MuiTooltip-tooltip').should(\"contain\", messages.existsPip);",
              "err": {},
              "uuid": "1ddc478a-eae9-495c-ae14-4b531ca77511",
              "parentUUID": "e6082091-f613-4483-af43-a3e6a63b5b5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add new pipeline",
              "fullTitle": "Nevigate the setting page and create pipeline Add new pipeline",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\nbutextField(pipelineSel.piptextfield, \"input\").type(`${faker.commerce.product()}-${new Date().valueOf()}`);\nbuButton(globalSel.savetestid).should(\"not.be.disabled\").click();",
              "err": {},
              "uuid": "c9fd6d0d-8803-4bda-914b-a5b0c6a7deae",
              "parentUUID": "e6082091-f613-4483-af43-a3e6a63b5b5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should pipeline selectable",
              "fullTitle": "Nevigate the setting page and create pipeline Should pipeline selectable",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let pipelines = response.body.result.values;\n  let lastPip = pipelines[pipelines.length - 1].label;\n  // cy.log(`Total Pipelines: ${pipelines.length}`);\n  // cy.log(`Last Item: ${lastPip}`);\n  if (pipelines.length > 5) {\n    cy.get('[data-testid=\"pipeline-box-hlum28yao\"] > [data-testid=\"budropdown-box-ty1opau5a\"] > [data-testid=\"button-box-72cmtvy8r\"] > .MuiButtonBase-root > .MuiButton-icon > [data-testid=\"button-stack-alorzfaoj\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"]').click();\n    cy.get('[data-testid=\"searchbox-textfield-8k19ikenc\"]').type(lastPip);\n  } else {\n    cy.get('[data-testid=\"pipeline-box-hlum28yao\"] > [data-testid=\"budropdown-box-ty1opau5a\"] > [data-testid=\"button-box-72cmtvy8r\"] > .MuiButtonBase-root > .MuiButton-icon > [data-testid=\"button-stack-alorzfaoj\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"]').click();\n    cy.contains(lastPip).click();\n  }\n});",
              "err": {},
              "uuid": "c7cf19d2-d124-42e6-aa3c-fbca7cc84a02",
              "parentUUID": "e6082091-f613-4483-af43-a3e6a63b5b5d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "8b67a121-9891-4214-90a7-dd251ed35d60",
            "1ddc478a-eae9-495c-ae14-4b531ca77511",
            "c9fd6d0d-8803-4bda-914b-a5b0c6a7deae",
            "c7cf19d2-d124-42e6-aa3c-fbca7cc84a02"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "28a1e2dc-4ba5-4be1-8138-aac76d1711df",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "636e9b1f-0cf1-44ff-abcb-cdc307c52988",
          "title": "Nevigate the setting page and rename pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Rename pipeline",
              "fullTitle": "Nevigate the setting page and rename pipeline Rename pipeline",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "let editedPIpLabel = `${faker.commerce.product()}-${new Date().valueOf()}`;\ncy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  cy.get(\"#customized-dialog-title p\").should(\"have.text\", messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"label\").should(\"have.text\", messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").should(\"have.value\", pipLabel[0]);\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.existsPip1);\n  buButton(globalSel.renametestid).should(\"be.disabled\");\n  // Rename the pipeline name\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear().type(editedPIpLabel);\n  buButton(globalSel.renametestid).click();\n  cy.get('.MuiSnackbarContent-message').should(\"have.text\", messages.updated);\n});",
              "err": {},
              "uuid": "a2ee0b7f-ab5c-4f23-9d0b-b9a34ec86f4e",
              "parentUUID": "636e9b1f-0cf1-44ff-abcb-cdc307c52988",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline already exist",
              "fullTitle": "Nevigate the setting page and rename pipeline Pipeline already exist",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear().type(pipLabel[1]);\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.existsPip1);\n  buButton(globalSel.renametestid).should(\"be.disabled\").and(\"have.text\", \"Rename\");\n});",
              "err": {},
              "uuid": "88d829d0-1a2c-4a96-8cc7-78ffadd0f25a",
              "parentUUID": "636e9b1f-0cf1-44ff-abcb-cdc307c52988",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline name cant't be blank",
              "fullTitle": "Nevigate the setting page and rename pipeline Pipeline name cant't be blank",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear();\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.blankPip);\n  buButton(globalSel.renametestid).should(\"be.disabled\").and(\"have.text\", \"Rename\");\n});",
              "err": {},
              "uuid": "11dad3bd-9a9e-43da-9449-a5cffd9a1be1",
              "parentUUID": "636e9b1f-0cf1-44ff-abcb-cdc307c52988",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "a2ee0b7f-ab5c-4f23-9d0b-b9a34ec86f4e",
            "88d829d0-1a2c-4a96-8cc7-78ffadd0f25a",
            "11dad3bd-9a9e-43da-9449-a5cffd9a1be1"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bf0a04d6-4170-4886-ae92-a8de371d24d0",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "052336e5-0623-424a-a8d5-e3b0e8bf3a9f",
          "title": "Navigate the setting page and reorder pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reorder pipeline",
              "fullTitle": "Navigate the setting page and reorder pipeline Reorder pipeline",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const movements = 1;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\n// cy.get(\"#app-routes p\").contains(\"leads\")\n// cy.get('.MuiTypography-caption').contains(\"You can Create/ Rename/ Delete Pipeline for lead only.\")\ncy.wait(1000);\nbusimpledropdown(pipelineSel.options, messages.pipAction, globalSel.reorder, messages.reorderPip);\n// cy.get('.MuiPaper-root > :nth-child(2) > div > .MuiButtonBase-root').should(\"have.text\", \"Options\").click()\n// cy.get(\"#reorder\").click()\n// get the pipeline-id using intercept and wait method\ncy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let pipId = response.body.result.values.map(ele => ele.id);\n  cy.get(`[data-rbd-draggable-id=${pipId[0]}]`).as('item');\n  cy.get('@item').invoke('attr', 'data-rbd-drag-handle-draggable-id').as('item-id');\n  cy.get('@item').invoke('attr', 'tabindex').as('item-index').should('equal', '0');\n  // lift the element\n  cy.get('@item').focus().trigger('keydown', {\n    keyCode: 32\n  }).get('@item'); // need to re-query for a clone\n  cy.wrap(Array.from({\n    length: movements\n  })).each(() => {\n    cy.get('@item').trigger('keydown', {\n      keyCode: 40,\n      force: true\n    }).wait(1000);\n  });\n  // drop an element\n  cy.get('@item').trigger('keydown', {\n    keyCode: 32,\n    force: true\n  });\n  cy.get('@item-id').then(() => {\n    cy.get(`[data-rbd-draggable-id=${pipId[0]}]`).invoke('attr', 'tabindex');\n  });\n  // cy.get('#cancel').should(\"have.text\", \"Cancel\")\n  // cy.get(\"#save\").click()\n  buButton(globalSel.canceltestid).should(\"have.text\", \"Cancel\");\n  buButton(globalSel.savetestid).should(\"have.text\", \"Save\").click({\n    force: true\n  });\n});",
              "err": {},
              "uuid": "cf1f7e5c-79ff-40bd-9e86-4c0bb13c6589",
              "parentUUID": "052336e5-0623-424a-a8d5-e3b0e8bf3a9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "cf1f7e5c-79ff-40bd-9e86-4c0bb13c6589"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b1278760-b902-4d1e-a38c-f7580518df34",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "df4f3b7a-558a-450a-bd8a-3781342aa4eb",
          "title": "Stage functionality test for pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add new stage",
              "fullTitle": "Stage functionality test for pipeline Add new stage",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\nonesecondWait();\nbuButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\ncyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).type(stageName);\nonesecondWait();\nbuSaveButton().should(\"have.text\", \"Save\").click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);",
              "err": {},
              "uuid": "99328db6-004e-4865-a43c-e54bde620043",
              "parentUUID": "df4f3b7a-558a-450a-bd8a-3781342aa4eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage can't be empty.",
              "fullTitle": "Stage functionality test for pipeline Stage can't be empty.",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "buButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\nbuSaveButton().should(\"be.disabled\").trigger(\"mouseover\", {\n  force: true\n});\ncyGet(globalSel.tooltip).invoke('text').should('include', \"Stage can't be empty.\");",
              "err": {},
              "uuid": "4fcf72db-3c4f-494b-84dd-d92b4e7534d1",
              "parentUUID": "df4f3b7a-558a-450a-bd8a-3781342aa4eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage can't be duplicate.",
              "fullTitle": "Stage functionality test for pipeline Stage can't be duplicate.",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "buButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\ncy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stageName = response.body.result.values.map(ele => ele.label);\n  cyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).click().type(stageName[0]);\n});\nbuSaveButton().should(\"be.disabled\").trigger(\"mouseover\", {\n  force: true\n});\ncyGet(globalSel.tooltip).invoke('text').should('include', \"Duplicate stage name.\");",
              "err": {},
              "uuid": "88ae6f5b-0a5b-42ef-929e-a272a6f92ce1",
              "parentUUID": "df4f3b7a-558a-450a-bd8a-3781342aa4eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "edit stage",
              "fullTitle": "Stage functionality test for pipeline edit stage",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\ncyGet(`${globalSel.inputItemtextfield} input`).last().clear();\ncyGet(`${globalSel.inputItemtextfield} input`).last().type(stageName);\nbuSaveButton().should(\"have.text\", \"Save\").click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);",
              "err": {},
              "uuid": "96c80c9c-6971-4daf-89b4-e55ff4bf9414",
              "parentUUID": "df4f3b7a-558a-450a-bd8a-3781342aa4eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete stage",
              "fullTitle": "Stage functionality test for pipeline delete stage",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "let stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\nconst msg2 = \"Are you sure! Want to delete this Stage?\";\nbuButton(`[data-testid=\"Add a ${asset} Stage\"]`).click();\ncyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).click().type(stageName);\nbuSaveButton().should(\"have.text\", \"Save\").click();\nonesecondWait();\ncyGet(`${pipelineSel.stageDelIconBtn}`).last().click();\nbuCaption(globalSel.dialogTitle, globalSel.dialogTitleText, \"Delete Stage\", pipelineSel.deletestagecaption, msg2);\nbuButton(`[data-testid=\"Delete Stage\"]`).click();",
              "err": {},
              "uuid": "22b0ad56-38bb-4a6d-b5b1-6d6f10aef886",
              "parentUUID": "df4f3b7a-558a-450a-bd8a-3781342aa4eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage should not be deleted which contains record",
              "fullTitle": "Stage functionality test for pipeline Stage should not be deleted which contains record",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stageWithCount = response.body.result.values.find(ele => ele.count > 0 && ele.winChance != \"Won\");\n  if (!stageWithCount) {\n    this.skip();\n  }\n  const msg2 = `You need to move ${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.count} ${asset} to delete this stage.`;\n  cyGet(`[data-rbd-draggable-id=\"${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.id}\"] ${pipelineSel.stageDelIconBtn}`).click({\n    force: true\n  });\n  buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, delNmvStg, pipelineSel.deletestageConfirmatiion, msg2);\n  budropdown(globalSel.dialogContent, globalSel.fieldlabelBox, fieldLabel);\n  budropdownInput(`[data-testid=\"input-muiinput-t8mkcx347\"] input`, stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label);\n  buButton(`[data-testid=\"Move ${asset} and delete Stage\"]`).should(\"be.disabled\");\n});",
              "err": {},
              "uuid": "e8c9afae-7387-4c20-bf8e-9ee912833be4",
              "parentUUID": "df4f3b7a-558a-450a-bd8a-3781342aa4eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "move record and delete stage",
              "fullTitle": "Stage functionality test for pipeline move record and delete stage",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const values = response.body.result.values;\n  const length = values.length;\n  const stageWithCount = values.find(ele => ele.count > 0 && ele.winChance != \"Won\");\n  const msg2 = `You need to move ${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.count} ${asset} to delete this stage.`;\n  const moveRecordStage = values.find(ele => ele.label != (stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label) && ele.winChance != \"Won\");\n  const searchSelecor = `${globalSel.searchbox} ${globalSel.searchplaceholder}`;\n  if (!stageWithCount) {\n    this.skip();\n  }\n  cyGet(`[data-rbd-draggable-id=\"${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.id}\"] ${pipelineSel.stageDelIconBtn}`).click({\n    force: true\n  });\n  buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, delNmvStg, pipelineSel.deletestageConfirmatiion, msg2);\n  budropdownInput(`[data-testid=\"input-muiinput-t8mkcx347\"] input`, stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label, length, searchSelecor, moveRecordStage === null || moveRecordStage === void 0 ? void 0 : moveRecordStage.label, globalSel.dialogTitleText);\n  buButton(`[data-testid=\"Move ${asset} and delete Stage\"]`).click();\n});",
              "err": {},
              "uuid": "3ab19002-0a00-4556-af15-1c9b1fa67507",
              "parentUUID": "df4f3b7a-558a-450a-bd8a-3781342aa4eb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "99328db6-004e-4865-a43c-e54bde620043",
            "4fcf72db-3c4f-494b-84dd-d92b4e7534d1",
            "88ae6f5b-0a5b-42ef-929e-a272a6f92ce1",
            "96c80c9c-6971-4daf-89b4-e55ff4bf9414",
            "22b0ad56-38bb-4a6d-b5b1-6d6f10aef886",
            "e8c9afae-7387-4c20-bf8e-9ee912833be4",
            "3ab19002-0a00-4556-af15-1c9b1fa67507"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9bfc2924-ece1-4fdb-ab23-21760b371951",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3312510d-f350-4142-a78e-3a9c960c1b4b",
          "title": "Navigate the setting page and reorder stage",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reorder stage",
              "fullTitle": "Navigate the setting page and reorder stage Reorder stage",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const movements = 1;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\ncy.wait(\"@getStage\").then(({\n  response\n}) => {\n  const stageId = response.body.result.values.map(ele => ele.id);\n  expect(response.body.result.values).to.be.length.greaterThan(1);\n  if (stageId.length > 1) {\n    cyGet(`[data-rbd-draggable-id=${stageId[0]}]`).as('item');\n    cy.get('@item').invoke('attr', 'data-rbd-drag-handle-draggable-id').as('item-id');\n    cy.get('@item').invoke('attr', 'tabindex').as('item-index').should('equal', '0');\n    // lift the element\n    cy.get('@item').focus().trigger('keydown', {\n      keyCode: 32,\n      position: \"left\"\n    }).get('@item'); // need to re-query for a clone\n    cy.wrap(Array.from({\n      length: movements\n    })).each(() => {\n      cy.get('@item').trigger('keydown', {\n        keyCode: 40,\n        force: true\n      }).wait(1000);\n    });\n    // drop an element\n    cy.get('@item').trigger('keydown', {\n      keyCode: 32,\n      force: true\n    });\n    cy.get('@item-id').then(() => {\n      cyGet(`[data-rbd-draggable-id=${stageId[0]}]`).invoke('attr', 'tabindex');\n    });\n    buSaveButton().should(\"have.text\", \"Save\").click();\n    cyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);\n  } else {\n    cy.log(`Stage must be more than 1 but stage found: ${stageId.length}`);\n  }\n});",
              "err": {},
              "uuid": "61e5dd49-22e3-41aa-a7cb-d0775e96609c",
              "parentUUID": "3312510d-f350-4142-a78e-3a9c960c1b4b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "61e5dd49-22e3-41aa-a7cb-d0775e96609c"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3574a7c9-2076-4749-9de0-270352db9d1f",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a4bf9ec1-8d1f-439a-ae17-fc7b2e0b2392",
          "title": "Nevigate the setting page and delete pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete pipeline",
              "fullTitle": "Nevigate the setting page and delete pipeline Delete pipeline",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.pipelineData(module, asset).then(pipData => {\n  pipelineData = pipData;\n  const piplabel = pipelineData.map(ele => ele.label);\n  let msg1 = \"Delete Pipeline Confirmation\";\n  if (pipelineData.length == 1) {\n    busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    buButton(globalSel.deltestid).click();\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Last pipeline can't be deleted\");\n  } else {\n    const piplength = pipelineData.length;\n    const countZeroPip = pipelineData.find(ele => ele.count === 0);\n    if (!countZeroPip) {\n      cy.log(\"Pipeline not found for delete\");\n    }\n    let msg2 = `You are about to delete the project titled ${countZeroPip === null || countZeroPip === void 0 ? void 0 : countZeroPip.label}.`;\n    budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, piplabel[0], piplength, globalSel.search, countZeroPip === null || countZeroPip === void 0 ? void 0 : countZeroPip.label, globalSel.dialogTitleText);\n    busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    buButton(globalSel.deltestid).click();\n  }\n  ;\n});",
              "err": {},
              "uuid": "c74c86ec-2ea7-4546-88b0-0824f93096be",
              "parentUUID": "a4bf9ec1-8d1f-439a-ae17-fc7b2e0b2392",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline should not delete which contains record",
              "fullTitle": "Nevigate the setting page and delete pipeline Pipeline should not delete which contains record",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const pipcontainRecord = pipelineData.find(ele => ele.count > 0);\nif (pipelineData.length === 1) {\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n  buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n  buButton(globalSel.deltestid).click();\n  cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Last pipeline can't be deleted\");\n} else {\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipcontainRecord === null || pipcontainRecord === void 0 ? void 0 : pipcontainRecord.label, pipelineData.length, globalSel.search, pipcontainRecord === null || pipcontainRecord === void 0 ? void 0 : pipcontainRecord.label, globalSel.dialogTitleText);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n  buButton(globalSel.del).should(\"have.attr\", \"aria-disabled\", \"true\").trigger(\"mouseover\", {\n    force: true\n  });\n  cy.get('.MuiTooltip-tooltip').should(\"have.text\", \"Pipeline contains lead\");\n}\n;",
              "err": {},
              "uuid": "a0387f5f-5161-4497-8829-9abbfed3b284",
              "parentUUID": "a4bf9ec1-8d1f-439a-ae17-fc7b2e0b2392",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "c74c86ec-2ea7-4546-88b0-0824f93096be",
            "a0387f5f-5161-4497-8829-9abbfed3b284"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cb2be0ba-0985-4269-8100-0a9c56a5c27b",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0ffec04b-21e3-402b-ac59-24a38b5a69ca",
          "title": "Nevigate the setting page and create and update association fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create association field",
              "fullTitle": "Nevigate the setting page and create and update association fields Create association field",
              "timedOut": null,
              "duration": 16265,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(_fieldSel.default.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Association\", _globalSel.default.dialogTitleText);\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Group\");\ncyGet(`${_globalSel.default.muiInput} input[name=\"Select Group\"]`).should('be.disabled').and('have.value', \"System Fields\");\ncy.wait(\"@assetsPipeline\");\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  const apiLength = response.body.result.values.length;\n  const assetsPip = response.body.result.values.find(ele => ele.disable != true);\n  cyGet(`${_globalSel.default.withtitleinputlabel}`).contains(\"Select Asset\");\n  budropdown(_globalSel.default.dialogContent, `button ${_globalSel.default.buttonTypography}`, assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label, apiLength, _globalSel.default.search, assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label, _globalSel.default.dialogTitleText);\n  ascInput(`${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n  (0, _field.headingNsubheading)();\n  buradio(\"Single-selection\");\n  cyGet(`[data-testid=\"avatarinput-textfield-ojwxr8kdk\"] label`).contains(`${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n  cyGet(`[data-testid=\"avatarinput-textfield-ojwxr8kdk\"] input`).should(\"have.attr\", \"placeholder\", `Select ${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "ffb727af-7e0a-4d80-9595-0e19102736a0",
              "parentUUID": "0ffec04b-21e3-402b-ac59-24a38b5a69ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify dissabled aaset",
              "fullTitle": "Nevigate the setting page and create and update association fields Verify dissabled aaset",
              "timedOut": null,
              "duration": 4790,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(_fieldSel.default.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Association\", _globalSel.default.dialogTitleText);\ncy.wait(\"@assetsPipeline\");\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  const apiLength = response.body.result.values.length;\n  const assetspipLabels = response.body.result.values.map(ele => ele.label);\n  const disableassetsPip = response.body.result.values.find(ele => ele.disable === true);\n  const availablePip = response.body.result.values.find(ele => ele.disable !== true);\n  if (disableassetsPip) {\n    var _availablePip$label;\n    const assetDropdownContain = (_availablePip$label = availablePip.label) !== null && _availablePip$label !== void 0 ? _availablePip$label : `Select`;\n    budropdown(_globalSel.default.dialogContent, `button ${_globalSel.default.buttonTypography}`, assetDropdownContain);\n    if (apiLength > 5) buSearchbox(_globalSel.default.search, disableassetsPip === null || disableassetsPip === void 0 ? void 0 : disableassetsPip.label);\n    budropdownOption(disableassetsPip === null || disableassetsPip === void 0 ? void 0 : disableassetsPip.label, `[data-testid=\"virtuallist-listitembutton-w6znzg16f\"]`)\n    // .find(`[data-testid=\"virtuallist-listitembutton-w6znzg16f\"]`)\n    .should('have.attr', 'aria-disabled', 'true');\n  } else {\n    cy.log(\"Association field not available in bin\");\n  }\n});",
              "err": {},
              "uuid": "cd4e5d93-6058-42b2-8c35-3fb0613419b4",
              "parentUUID": "0ffec04b-21e3-402b-ac59-24a38b5a69ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit association field",
              "fullTitle": "Nevigate the setting page and create and update association fields Edit association field",
              "timedOut": null,
              "duration": 6559,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const totalPages = response.body.result.pages.totalNoOfPages;\n  const handleAscField = fieldData => {\n    const ascField = fieldData.values.find(ele => ele.prop === \"asc\");\n    cy.intercept(method.get, `**/fms/fields/${ascField.id}?*`).as(\"fieldDetail\");\n    (0, _field.searchNactionField)(ascField.label, _globalSel.default.edit, \"Edit\");\n    ascInput(ascField.label);\n    cy.wait(\"@fieldDetail\").then(({\n      response\n    }) => {\n      if (response.body.result.selection === \"multi\") {\n        (0, _utility.editMultiSelectionField)();\n      } else {\n        (0, _utility.editSingleSelectionField)();\n      }\n    });\n  };\n  if (totalPages === 1) {\n    handleAscField(response.body.result);\n  } else {\n    cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click();\n    cy.wait(\"@fieldGrid\").then(({\n      response\n    }) => {\n      handleAscField(response.body.result);\n    });\n  }\n});\nbuSaveButton().click();\ncyGet(_globalSel.default.SnackbarMessage).invoke('text').should('include', _messages.default.updated);",
              "err": {},
              "uuid": "2968f7a2-49df-4bb6-a446-248009b403cd",
              "parentUUID": "0ffec04b-21e3-402b-ac59-24a38b5a69ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ffb727af-7e0a-4d80-9595-0e19102736a0",
            "cd4e5d93-6058-42b2-8c35-3fb0613419b4",
            "2968f7a2-49df-4bb6-a446-248009b403cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27614,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d707ce86-ca0e-4ec0-9269-919a29cb4017",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8cd20678-c271-42e5-83f6-ce0fc86d4bcc",
          "title": "Nevigate the setting page and create and update association fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach Field",
              "fullTitle": "Nevigate the setting page and create and update association fields Attach Field",
              "timedOut": null,
              "duration": 12936,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"Attach field\"]').click();\ncy.wait(\"@availableFiels\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cy.log(JSON.stringify(response));\n  const availablefieldLabel = response.body.result.values.map(ele => ele.label);\n  buSearchbox(`${fieldSel.attachfieldstextfield} ${globalSel.searchplaceholder}`, availablefieldLabel[0]);\n  cyGet(`[data-testid=\"propertylist-formcontrollabel-z6t5ag0ev\"] input[type=\"checkbox\"]`).first().click();\n  cyGet(`[data-testid=\"propertylist-formcontrollabel-z6t5ag0ev\"] [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`).contains(availablefieldLabel[0]);\n  buButton('[data-testid=\"Attach\"]').click();\n  onesecondWait();\n  buSearchbox(`${fieldSel.searchBoxfieldGrid} ${globalSel.searchplaceholder}`, availablefieldLabel[0]);\n  cyGet(`table tbody tr [aria-label=\"${availablefieldLabel[0]}\"]`).contains(availablefieldLabel[0]);\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 4000ms: `cy.clear()` failed because this element:\n\n`<input aria-invalid=\"false\" id=\":r17:\" placeholder=\"Search...\" type=\"text\" class=\"MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedStart css-xbg602\" value=\"\">`\n\nis being covered by another element:\n\n`<div class=\"MuiBox-root css-185zo5g\" data-testid=\"attachfields-box-ydmm0jykb\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying after 4000ms: `cy.clear()` failed because this element:\n\n`<input aria-invalid=\"false\" id=\":r17:\" placeholder=\"Search...\" type=\"text\" class=\"MuiInputBase-input MuiOutlinedInput-input MuiInputBase-inputAdornedStart css-xbg602\" value=\"\">`\n\nis being covered by another element:\n\n`<div class=\"MuiBox-root css-185zo5g\" data-testid=\"attachfields-box-ydmm0jykb\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at ensureIsDescendent (https://api.butest.tech/__cypress/runner/cypress_runner.js:112861:68)\n    at ensureDescendents (https://api.butest.tech/__cypress/runner/cypress_runner.js:112912:5)\n    at ensureDescendentsAndScroll (https://api.butest.tech/__cypress/runner/cypress_runner.js:112918:14)\n    at ensureElIsNotCovered (https://api.butest.tech/__cypress/runner/cypress_runner.js:113049:5)\n    at runAllChecks (https://api.butest.tech/__cypress/runner/cypress_runner.js:113248:52)\n    at retryActionability (https://api.butest.tech/__cypress/runner/cypress_runner.js:113285:16)\n    at tryCatcher (https://api.butest.tech/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (https://api.butest.tech/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (https://api.butest.tech/__cypress/runner/cypress_runner.js:144102:68)\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:144043:14)\n    at tryCatcher (https://api.butest.tech/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://api.butest.tech/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://api.butest.tech/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://api.butest.tech/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://api.butest.tech/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (https://api.butest.tech/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at buSearchbox (webpack://bu-testing/./cypress/helpers/global.js:13:42)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/2_manageField/attachField.js:29:12)",
                "diff": null
              },
              "uuid": "20fb1573-7ccb-4175-92b0-d13413ea1759",
              "parentUUID": "8cd20678-c271-42e5-83f6-ce0fc86d4bcc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "20fb1573-7ccb-4175-92b0-d13413ea1759"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12936,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a4f8858c-a73c-47bc-b382-e95ed0464b32",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c74e006f-c1a5-4d19-9f47-87e090222c1f",
          "title": "Nevigate the setting page and verify the field components",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify and select Asset Pipeline",
              "fullTitle": "Nevigate the setting page and verify the field components Verify and select Asset Pipeline",
              "timedOut": null,
              "duration": 21177,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const moduleName = module.toUpperCase();\nconst selectedAsset = asset === \"deal\" ? `${assetName}s` : `${assetName}`;\nconst subHeadingText = `Fields store information about ${moduleName}`;\nbuCaption(globalSel.settinglayoutbox, fieldSel.captionHeading, \"Fields\", fieldSel.captionSubHeading, subHeadingText);\ncyGet('[data-testid=\"properties-typography-ug3bego54\"]').contains(\"Select Asset\");\ncy.wait(\"@assetPipeline\").then(({\n  response\n}) => {\n  let piplabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `${globalSel.buttonBox} button`, piplabel[0]);\n  cyGet(`[data-testid=\"${selectedAsset}\"] [data-testid=\"groupbaseitems-typography-rnufjql1q\"]`).should(\"contain.text\", selectedAsset);\n  budropdownOption(piplabel[1]).contains(piplabel[1]).click();\n  budropdown(globalSel.settinglayoutbox, `${globalSel.buttonBox} button`, piplabel[1]);\n});\ncyGet('#simple-tab-0 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"All fields\");\ncyGet('#simple-tab-1 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"Groups\");\ncyGet('#simple-tab-2 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"Deleted fields\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-testid=\"Contact\"] [data-testid=\"groupbaseitems-typography-rnufjql1q\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-testid=\"Contact\"] [data-testid=\"groupbaseitems-typography-rnufjql1q\"]`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/2_manageField/components.js:38:17)",
                "diff": null
              },
              "uuid": "5fccbc70-f135-425f-b189-ba54a91d6b4a",
              "parentUUID": "c74e006f-c1a5-4d19-9f47-87e090222c1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the group filter is working as expected",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the group filter is working as expected",
              "timedOut": null,
              "duration": 6869,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "recordCountOnPage(\"5\");\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All groups\");\ncy.wait(1000);\ncy.wait(\"@groupList\").then(({\n  response\n}) => {\n  let groupLabel = response.body.result.values.map(ele => ele.label);\n  budropdownOption(groupLabel[0]).contains(groupLabel[0]).click();\n  cy.wait(1000);\n  cyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(3)\").each($row => {\n    cy.wrap($row).contains(groupLabel[0]);\n  });\n});",
              "err": {},
              "uuid": "24469c7f-c57f-4fed-a6bd-494f878b4a9f",
              "parentUUID": "c74e006f-c1a5-4d19-9f47-87e090222c1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the field type filter should contains all field type",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the field type filter should contains all field type",
              "timedOut": null,
              "duration": 38612,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\nfieldTypeFilterSel(\"Single line text\");\nfieldTypeFilterSel(\"Number\");\nfieldTypeFilterSel(\"Email\");\nfieldTypeFilterSel(\"URL\");\nfieldTypeFilterSel(\"Owner\");\nfieldTypeFilterSel(\"Created By\");\nfieldTypeFilterSel(\"Basic Dropdown\");\nfieldTypeFilterSel(\"Colored dropdown\");\nfieldTypeFilterSel(\"Date field\");\nfieldTypeFilterSel(\"Time field\");\nfieldTypeFilterSel(\"Date and time field\");\nfieldTypeFilterSel(\"Stage\");\nfieldTypeFilterSel(\"Attachment\");\nfieldTypeFilterSel(\"Address\");\nfieldTypeFilterSel(\"Image\");\nfieldTypeFilterSel(\"Multi line text\");\nfieldTypeFilterSel(\"Checkbox\");\nfieldTypeFilterSel(\"Radio\");\nfieldTypeFilterSel(\"Rating\");\nfieldTypeFilterSel(\"Formula\");\nfieldTypeFilterSel(\"Unique Id\");\nfieldTypeFilterSel(\"Custom form\");\nfieldTypeFilterSel(\"Data source\");",
              "err": {},
              "uuid": "9d48ab7c-178a-4feb-943a-d6608866f1f5",
              "parentUUID": "c74e006f-c1a5-4d19-9f47-87e090222c1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the field type filter is working as expected",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the field type filter is working as expected",
              "timedOut": null,
              "duration": 11806,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "recordCountOnPage(\"5\");\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\ncy.wait(1000);\nbudropdownOption(\"Single line text\").contains(\"Single line text\").click();\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"Single line text\");\ncy.wait(1000);\ncyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(2)\").each($row => {\n  cy.wrap($row).contains(\"Single line text\");\n});\ncy.wait(1000);",
              "err": {},
              "uuid": "2f1b465f-5730-4d8e-95fa-2f8b478516a9",
              "parentUUID": "c74e006f-c1a5-4d19-9f47-87e090222c1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate used count with API",
              "fullTitle": "Nevigate the setting page and verify the field components Validate used count with API",
              "timedOut": null,
              "duration": 4608,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-0 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"All fields\").click();\nrecordCountOnPage(\"10\");\ncy.wait(\"@fieldGrid\");\ncy.wait(\"@fieldGrid\").then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.recordCount);\n  cyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(5)\").each(($row, index) => {\n    cy.wrap($row).contains(abc[index]);\n  });\n});",
              "err": {},
              "uuid": "94b68375-3d33-44e9-ba4a-cf29e6d63898",
              "parentUUID": "c74e006f-c1a5-4d19-9f47-87e090222c1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate attached count with API",
              "fullTitle": "Nevigate the setting page and verify the field components Validate attached count with API",
              "timedOut": null,
              "duration": 4393,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-0 > .MuiTypography-root').contains(\"All fields\").click();\nrecordCountOnPage(\"10\");\ncy.wait(\"@fieldGrid\");\ncy.wait(\"@fieldGrid\").then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.attachedCount);\n  let counts = abc.map(fields => {\n    let count = fields.count;\n    return count;\n  });\n  cyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(6)\").each(($row, index) => {\n    cy.wrap($row).contains(counts[index]);\n  });\n});",
              "err": {},
              "uuid": "35b6e446-0c42-4328-8ac7-212eb8a1ebb4",
              "parentUUID": "c74e006f-c1a5-4d19-9f47-87e090222c1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "24469c7f-c57f-4fed-a6bd-494f878b4a9f",
            "9d48ab7c-178a-4feb-943a-d6608866f1f5",
            "2f1b465f-5730-4d8e-95fa-2f8b478516a9",
            "94b68375-3d33-44e9-ba4a-cf29e6d63898",
            "35b6e446-0c42-4328-8ac7-212eb8a1ebb4"
          ],
          "failures": [
            "5fccbc70-f135-425f-b189-ba54a91d6b4a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 87465,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "43ad2014-ada2-4585-abdb-c5f783393eef",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1a106085-a9aa-4208-89d1-8a05249877f6",
          "title": "Navigate to setting page and create and update fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create URL field",
              "fullTitle": "Navigate to setting page and create and update fields Create URL field",
              "timedOut": null,
              "duration": 8972,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `URL-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"URL\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "d33ab3e7-22c1-491b-9087-5446cde0b0e9",
              "parentUUID": "1a106085-a9aa-4208-89d1-8a05249877f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit URL field",
              "fullTitle": "Navigate to setting page and create and update fields Edit URL field",
              "timedOut": null,
              "duration": 6601,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `URL-${new Date().valueOf()}`;\nsearchField(\"url\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);",
              "err": {},
              "uuid": "19581255-4460-41d4-ab55-c78fc169d49a",
              "parentUUID": "1a106085-a9aa-4208-89d1-8a05249877f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Mobile number field",
              "fullTitle": "Navigate to setting page and create and update fields Create Mobile number field",
              "timedOut": null,
              "duration": 6158,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Mobile-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Mobile number\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"none\", null, null, \"4-3-3\", globalSel.dialogTitleText);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "5dd80324-c0ab-4ef4-8162-2156fda04273",
              "parentUUID": "1a106085-a9aa-4208-89d1-8a05249877f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get phn field details through interception for edit phn field",
              "fullTitle": "Navigate to setting page and create and update fields Get phn field details through interception for edit phn field",
              "timedOut": null,
              "duration": 3984,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchField(\"phn\", null, 'Edit').then(fieldData => {\n  cy.wrap(fieldData).as(\"fieldData\");\n});\ncy.get(\"@fieldData\").then(res => {\n  field = res;\n});",
              "err": {},
              "uuid": "3b79d110-e66d-41a0-9c35-df3689ec7835",
              "parentUUID": "1a106085-a9aa-4208-89d1-8a05249877f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Mobile number field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Mobile number field",
              "timedOut": null,
              "duration": 7566,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Mobile-${new Date().valueOf()}`;\ncy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\nsearchField(\"phn\", field.label, 'Edit');\ncy.wait(\"@getFieldById\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const format = response.body.result.format;\n  labelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\n  budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, format, null, null, \"4-4-2\", globalSel.dialogTitleText);\n  preview(fieldLabel, `Enter ${fieldLabel}`);\n  buSaveButton().click();\n  cyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);\n});",
              "err": {},
              "uuid": "a01c8caf-de74-4cf3-9bbe-7e358671cc52",
              "parentUUID": "1a106085-a9aa-4208-89d1-8a05249877f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Number field",
              "fullTitle": "Navigate to setting page and create and update fields Create Number field",
              "timedOut": null,
              "duration": 6459,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Number-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Number\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\n// budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"none\", null, null, \"4-3-3\", globalSel.dialogTitleText);\nbutextField(globalSel.butextfield, \"#min\").type(2);\nbutextField(globalSel.butextfield, \"#max\").type(1000);\nbutextField(globalSel.butextfield, \"#decimal\").type(3);\n// cy.componentLabel(lead.formLabel, \"Min Number\", \"input\").type(2)\n// cy.componentLabel(lead.formLabel, \"Max Number\", \"input\").type(10)\n// cy.componentLabel(lead.formLabel, \"Decimal Points\", \"input\").type(2)\ncyGet('[data-testid=\"withtitle-inputlabel-9rg7j5v06\"]').contains(\"Max-3\");\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "201eabf8-370e-4248-8c5c-050f9c316891",
              "parentUUID": "1a106085-a9aa-4208-89d1-8a05249877f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Number field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Number field",
              "timedOut": null,
              "duration": 7717,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Number-${new Date().valueOf()}`;\nsearchField(\"num\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(globalSel.butextfield, \"#min\").clear().type(3);\nbutextField(globalSel.butextfield, \"#max\").clear().type(50000);\nbutextField(globalSel.butextfield, \"#decimal\").clear().type(2);\ncyGet('[data-testid=\"withtitle-inputlabel-9rg7j5v06\"]').contains(\"Max-3\");\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);",
              "err": {},
              "uuid": "bd2b5554-1bbe-44c4-9b33-b9871649ce36",
              "parentUUID": "1a106085-a9aa-4208-89d1-8a05249877f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Rating field",
              "fullTitle": "Navigate to setting page and create and update fields Create Rating field",
              "timedOut": null,
              "duration": 5124,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Rating-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Rating\", globalSel.dialogTitleText);\n// labelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\ncy.get('[data-testid=\"ratingfield-typography-34xvi9zqr\"]').contains(\"Type\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"Star\");\ncy.get('[data-testid=\"ratingfield-typography-lms2xp00s\"]').contains(\"Max\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"5\");\ncy.get('[data-testid=\"burating-formlabel-pfw5vth6c\"]').contains(fieldLabel);\ncy.get('[data-testid=\"burating-styledrating-i1n90l9jw\"] > label').click({\n  multiple: true,\n  force: true\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "d158ec43-f327-47d4-94ef-429501d5392b",
              "parentUUID": "1a106085-a9aa-4208-89d1-8a05249877f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Rating field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Rating field",
              "timedOut": null,
              "duration": 6316,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Rating-${new Date().valueOf()}`;\nsearchField(\"rtg\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\ncy.get('[data-testid=\"ratingfield-typography-34xvi9zqr\"]').contains(\"Type\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"Star\");\ncy.get('[data-testid=\"ratingfield-typography-lms2xp00s\"]').contains(\"Max\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"5\");\ncy.get('[data-testid=\"burating-formlabel-pfw5vth6c\"]').contains(fieldLabel);\ncy.get('[data-testid=\"burating-styledrating-i1n90l9jw\"] > label').click({\n  multiple: true,\n  force: true\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "f5d17e99-e93a-43a0-b0db-06fbab1bffee",
              "parentUUID": "1a106085-a9aa-4208-89d1-8a05249877f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create checkbox field",
              "fullTitle": "Navigate to setting page and create and update fields Create checkbox field",
              "timedOut": null,
              "duration": 5633,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fieldLabel = `Checkbox-${Date.now()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(fieldSel.fieldlabelbox).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Checkbox\", globalSel.dialogTitleText);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\n[\"Option 2\", \"Option 3\"].forEach((optionText, index) => {\n  buButton(globalSel.typBtn).contains(\"Add option\").click();\n  butextField(fieldSel.fieldOptionTextfield, `input[value = \"${optionText}\"]`).should(\"have.value\", optionText);\n});\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(`[data-testid^=\"bucheckboxgroup-formlabel\"]`).contains(fieldLabel);\n[\"Option 1\", \"Option 2\", \"Option 3\"].forEach(optionText => {\n  cyGet(checkboxWrapper).contains(optionText).should(\"have.attr\", \"aria-label\", optionText);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "addb336a-7e49-4643-aa58-d52a1ca0c377",
              "parentUUID": "1a106085-a9aa-4208-89d1-8a05249877f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit checkbox field",
              "fullTitle": "Navigate to setting page and create and update fields Edit checkbox field",
              "timedOut": null,
              "duration": 9572,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newLabel = `Checkbox-${Date.now()}`;\nconst newOption = `Option-${Date.now()}`;\nsearchField(\"chk\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(newLabel);\nbutextField(`${fieldSel.fieldOptionTextfield} :nth-child(1)`, `input`).first().clear().type(\"Edited Option 1\");\nbuButton(globalSel.typBtn).contains(\"Add option\").click();\ncy.get(fieldSel.fieldOptionTextfield).last().find(\"input\").clear().type(newOption);\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(checkboxWrapper).contains(\"Edited Option 1\").should(\"have.attr\", \"aria-label\", \"Edited Option 1\");\ncyGet(checkboxWrapper).contains(newOption).should(\"have.attr\", \"aria-label\", newOption);\nbuSaveButton().click();",
              "err": {},
              "uuid": "7e41b02b-ca75-4058-bfd1-bb9b5b5a8b03",
              "parentUUID": "1a106085-a9aa-4208-89d1-8a05249877f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create radio field",
              "fullTitle": "Navigate to setting page and create and update fields Create radio field",
              "timedOut": null,
              "duration": 6078,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Radio-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Radio\", globalSel.dialogTitleText);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\n[\"Option 2\", \"Option 3\"].forEach((optionText, index) => {\n  buButton(globalSel.typBtn).contains(\"Add option\").click();\n  butextField(fieldSel.fieldOptionTextfield, `input[value = \"${optionText}\"]`).should(\"have.value\", optionText);\n});\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(`[data-testid^=\"bucheckboxgroup-formlabel\"]`).contains(fieldLabel);\n[\"Option 1\", \"Option 2\", \"Option 3\"].forEach(optionText => {\n  cyGet(checkboxWrapper).contains(optionText).should(\"have.attr\", \"aria-label\", optionText);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "60c9f2a1-e390-474d-94f4-539c632bebf3",
              "parentUUID": "1a106085-a9aa-4208-89d1-8a05249877f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit radio field",
              "fullTitle": "Navigate to setting page and create and update fields Edit radio field",
              "timedOut": null,
              "duration": 7595,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newLabel = `Radio-${Date.now()}`;\nconst newOption = `Option-${Date.now()}`;\nsearchField(\"rad\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(newLabel);\nbutextField(fieldSel.fieldOptionTextfield, `:nth-child(1) input`).first().clear().type(\"Edited Option 1\");\nbuButton(globalSel.typBtn).contains(\"Add option\").click();\ncy.get(fieldSel.fieldOptionTextfield).last().find(\"input\").clear().type(newOption);\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(checkboxWrapper).contains(\"Edited Option 1\").should(\"have.attr\", \"aria-label\", \"Edited Option 1\");\ncyGet(checkboxWrapper).contains(newOption).should(\"have.attr\", \"aria-label\", newOption);\nbuSaveButton().click();",
              "err": {},
              "uuid": "d342f45f-5815-44f0-958b-b1ee9d83b042",
              "parentUUID": "1a106085-a9aa-4208-89d1-8a05249877f6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d33ab3e7-22c1-491b-9087-5446cde0b0e9",
            "19581255-4460-41d4-ab55-c78fc169d49a",
            "5dd80324-c0ab-4ef4-8162-2156fda04273",
            "3b79d110-e66d-41a0-9c35-df3689ec7835",
            "a01c8caf-de74-4cf3-9bbe-7e358671cc52",
            "201eabf8-370e-4248-8c5c-050f9c316891",
            "bd2b5554-1bbe-44c4-9b33-b9871649ce36",
            "d158ec43-f327-47d4-94ef-429501d5392b",
            "f5d17e99-e93a-43a0-b0db-06fbab1bffee",
            "addb336a-7e49-4643-aa58-d52a1ca0c377",
            "7e41b02b-ca75-4058-bfd1-bb9b5b5a8b03",
            "60c9f2a1-e390-474d-94f4-539c632bebf3",
            "d342f45f-5815-44f0-958b-b1ee9d83b042"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 87775,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8a508e67-3502-4d97-9c83-35c26f359633",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "35d5ca9d-91b1-4513-9ac9-c01777b5ff1e",
          "title": "Nevigate the setting page and test the data source fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create Single selction data source field",
              "fullTitle": "Nevigate the setting page and test the data source fields Create Single selction data source field",
              "timedOut": null,
              "duration": 18062,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let dsrcField = `Data source-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Dropdown\", globalSel.dialogTitleText);\nlabelNplaceholder(dsrcField, `Please select the values`);\ncy.get('[data-testid=\"datasourcefield-typography-zui6gbl8o\"]').should(\"have.text\", \"Link Asset\");\ncy.get(`${globalSel.dialogContent} [data-testid=\"buswitch-button-79w8xnphk\"]`).click();\ncy.wait(\"@assetsPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const getAssets = response.body.result.values.map(ele => ele.label);\n  const totalAsset = response.body.result.pages.totalRecords;\n  const getLeadAssets = response.body.result.values.find(ele => ele.group !== asset);\n  budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, getAssets[0], totalAsset, globalSel.search, getLeadAssets.label, globalSel.dialogTitleText);\n});\nheadingNsubheading();\nfiledSelection(\"Single-selection\", \"single\").should(\"be.checked\");\nbudropdown(globalSel.dialogContent, `label`, dsrcField);\ncyGet(`${globalSel.dialogContent} [data-testid=\"datasourcefield-box-6mghg71wb\"] [data-testid=\"budropdown-box-ty1opau5a\"] input`).should(\"have.attr\", \"placeholder\", `Please select the values`);\n// preview(dsrcField, `Please select the values`)\nbuSaveButton().click();",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Single line-1733230585603' within the element: <span.MuiTypography-root.MuiTypography-body1.MuiTypography-noWrap.css-wv3nvc> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Single line-1733230585603' within the element: <span.MuiTypography-root.MuiTypography-body1.MuiTypography-noWrap.css-wv3nvc> but never did.\n    at Context.eval (webpack://bu-testing/./cypress/helpers/global.js:43:13)",
                "diff": null
              },
              "uuid": "8f844b66-6b3f-48cf-8c05-ff6ef1acd74b",
              "parentUUID": "35d5ca9d-91b1-4513-9ac9-c01777b5ff1e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit label and placehoder ofdata source field",
              "fullTitle": "Nevigate the setting page and test the data source fields Edit label and placehoder ofdata source field",
              "timedOut": null,
              "duration": 2847,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const dsrcField = `Data source-${Date.now()}`;\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const totalPages = response.body.result.pages.totalNoOfPages;\n  const editDataSource = fieldData => {\n    cy.intercept(method.get, `**/fms/fields/${fieldData === null || fieldData === void 0 ? void 0 : fieldData.id}?*`).as(\"fieldDetail\");\n    searchNactionField(fieldData.label, '#edit', \"Edit\");\n    labelNplaceholder(dsrcField, `Please select the values`);\n    cy.wait(\"@fieldDetail\").then(({\n      response\n    }) => {\n      const destPip = response.body.result.catId.label;\n      cy.get(`[aria-label=${destPip}]`).parent().should(\"be.disabled\");\n      // headingNsubheading();\n      if (fieldData.selection === \"multi\") {\n        editMultiSelectionField();\n      } else {\n        editSingleSelectionField();\n      }\n    });\n  };\n  if (totalPages === 1) {\n    const dsrcFieldData = response.body.result.values.find(ele => ele.prop === \"dsrc\");\n    editDataSource(dsrcFieldData);\n  } else {\n    cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click(); // Move to last page\n    cy.wait(\"@fieldGrid\").then(({\n      response\n    }) => {\n      const dsrcFieldData = response.body.result.values.find(ele => ele.prop === \"dsrc\");\n      editDataSource(dsrcFieldData);\n    });\n  }\n});\nbudropdown(globalSel.dialogContent, `label`, dsrcField);\ncyGet(`${globalSel.dialogContent} [data-testid=\"datasourcefield-box-6mghg71wb\"] [data-testid=\"budropdown-box-ty1opau5a\"] input`).should(\"have.attr\", \"placeholder\", `Please select the values`);\n// preview(dsrcField, `Please select the values`)\nbuSaveButton().click();",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'label')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'label')\n    at editDataSource (webpack://bu-testing/./cypress/e2e/lms/setting/2_manageField/dsrcField.js:52:45)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/2_manageField/dsrcField.js:72:20)",
                "diff": null
              },
              "uuid": "fde92988-1725-4569-9ee1-da15036348bb",
              "parentUUID": "35d5ca9d-91b1-4513-9ac9-c01777b5ff1e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8f844b66-6b3f-48cf-8c05-ff6ef1acd74b",
            "fde92988-1725-4569-9ee1-da15036348bb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 20909,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e57dc870-1c84-4809-b9c6-1822b5867c50",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a0130a81-763f-429d-af53-f575d1414aff",
          "title": "Nevigate the setting page and test the date and time fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create date and time field with Calendar Type",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date and time field with Calendar Type",
              "timedOut": null,
              "duration": 12326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dtmField = `dateNtime-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date and Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dtmField, `Please select Date & Time`);\ncy.get('[role=\"dialog\"] [data-testid=\"buswitch-button-79w8xnphk\"]').should(\"have.attr\", \"aria-checked\", \"false\");\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Calendar Type\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"None\", null, null, \"Past Dates\", globalSel.dialogTitleText);\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\ncyGet(`[data-testid=\"buradiogroup-formlabel-ofdcw41bb\"]`).contains(\"Time Format\");\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).first().find(`input`).should(\"have.value\", \"24\");\n// cy.componentLabel(lead.formLabel, \"Time Format\", \"input[value='12']\").should(\"be.checked\").and(\"have.attr\", \"type\", \"radio\")\n// cy.get('.MuiFormGroup-root > :nth-child(2) > .MuiTypography-root').should(\"have.text\", \"12hrs\")\n// cy.componentLabel(lead.formLabel, \"Time Format\", \"input[value='24']\").should(\"have.attr\", \"type\", \"radio\").click()\n// cy.get('.MuiFormGroup-root > :nth-child(1) > .MuiTypography-root').should(\"have.text\", \"24hrs\")\npreviewDateField(dtmField, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "4de9dd82-d0b4-4596-b394-84de96055800",
              "parentUUID": "a0130a81-763f-429d-af53-f575d1414aff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date and time field with Date Range Selection",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date and time field with Date Range Selection",
              "timedOut": null,
              "duration": 11622,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const today = new Date();\nconst currentYear = today.getFullYear();\nconst currentDay = String(today.getDate());\nconst previousDate = new Date();\npreviousDate.setFullYear(previousDate.getFullYear() - 1);\nconst prevYear = previousDate.getFullYear();\nlet dtmField = `dateNtime-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date and Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dtmField, `Please select Date & Time`);\ncy.get('[role=\"dialog\"] button[role=\"switch\"]').click();\n// Choose Min Date\ncy.get('[placeholder= \"Min\"]').prev().find('button').click();\ndateDailogComponent(prevYear, \"1\");\ncy.get('.MuiPickersLayout-root > .MuiDialogActions-root > .MuiButtonBase-root').contains(\"OK\").click();\ncy.wait(250);\n// Choose Max Date\ncy.get('[placeholder= \"Max\"]').prev().find('button').click();\ndateDailogComponent(currentYear, currentDay);\ncy.get('.MuiPickersLayout-root > .MuiDialogActions-root > .MuiButtonBase-root').contains(\"OK\").click();\n// Calendar Type should be disabled when choose Date Range Selection\ncyGet(`[data-testid=\"withtitle-box-mp6w6v7ka\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).should(\"be.disabled\");\n// Restricte days\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\n// Choose date format\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(dtmField, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "4311f04f-e28f-4d27-93c0-9c077de74c45",
              "parentUUID": "a0130a81-763f-429d-af53-f575d1414aff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit date and time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit date and time field",
              "timedOut": null,
              "duration": 7977,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dtmFieldLabel = `dateNtime-${new Date().valueOf()}`;\nsearchField(\"dtm\", null, 'Edit');\nlabelNplaceholder(dtmFieldLabel, `Please select Date & Time`);\npreviewDateField(dtmFieldLabel, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "619ab9ca-7421-4cf5-88d2-abed3d7db438",
              "parentUUID": "a0130a81-763f-429d-af53-f575d1414aff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date field with Calendar Type",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date field with Calendar Type",
              "timedOut": null,
              "duration": 9565,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dateField = `Date-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dateField, `Please select Date`);\ncy.get('[role=\"dialog\"] [data-testid=\"buswitch-button-79w8xnphk\"]').should(\"have.attr\", \"aria-checked\", \"false\");\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Calendar Type\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"None\", null, null, \"Past Dates\", globalSel.dialogTitleText);\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\npreviewDateField(dateField, `Please select Date`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "4b6ecd09-f83c-4a63-953c-56d88a9f5b0e",
              "parentUUID": "a0130a81-763f-429d-af53-f575d1414aff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date field with Date Range Selection",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date field with Date Range Selection",
              "timedOut": null,
              "duration": 12331,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const today = new Date();\nconst currentYear = today.getFullYear();\nconst currentDay = String(today.getDate());\nconst previousDate = new Date();\npreviousDate.setFullYear(previousDate.getFullYear() - 1);\nconst prevYear = previousDate.getFullYear();\nlet dateField = `date-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dateField, `Please select Date`);\ncy.get('[role=\"dialog\"] button[role=\"switch\"]').click();\n// Choose Min Date\ncy.get('[placeholder= \"Min\"]').prev().find('button').click();\ndateDailogComponent(prevYear, \"1\");\ncy.wait(250);\n// Choose Max Date\ncy.get('[placeholder= \"Max\"]').prev().find('button').click();\ndateDailogComponent(currentYear, currentDay);\n// Calendar Type should be disabled when choose Date Range Selection\ncyGet(`[data-testid=\"withtitle-box-mp6w6v7ka\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).should(\"be.disabled\");\n// Restricte days\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\npreviewDateField(dateField, `Please select Date`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "c347c87b-a8d2-42e4-9ac9-e6ddff499c29",
              "parentUUID": "a0130a81-763f-429d-af53-f575d1414aff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit date field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit date field",
              "timedOut": null,
              "duration": 6605,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Date-${new Date().valueOf()}`;\nsearchField(\"dat\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Please select Date`);\npreviewDateField(fieldLabel, `Please select Date`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "b0275778-b59c-4166-bb1f-e660b1af10fa",
              "parentUUID": "a0130a81-763f-429d-af53-f575d1414aff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create time field",
              "timedOut": null,
              "duration": 4789,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let timeField = `Time-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(timeField, `Please select Time`);\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(timeField, `Please select Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "aca8f1dd-55a6-48b1-a07a-8cadf92dd2a6",
              "parentUUID": "a0130a81-763f-429d-af53-f575d1414aff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit time field",
              "timedOut": null,
              "duration": 6295,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Time-${new Date().valueOf()}`;\nsearchField(\"tim\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Please select Time`);\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(fieldLabel, `Please select Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "104d9d11-751e-468f-ab0a-318094d4e979",
              "parentUUID": "a0130a81-763f-429d-af53-f575d1414aff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4de9dd82-d0b4-4596-b394-84de96055800",
            "4311f04f-e28f-4d27-93c0-9c077de74c45",
            "619ab9ca-7421-4cf5-88d2-abed3d7db438",
            "4b6ecd09-f83c-4a63-953c-56d88a9f5b0e",
            "c347c87b-a8d2-42e4-9ac9-e6ddff499c29",
            "b0275778-b59c-4166-bb1f-e660b1af10fa",
            "aca8f1dd-55a6-48b1-a07a-8cadf92dd2a6",
            "104d9d11-751e-468f-ab0a-318094d4e979"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 71510,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e4e814e0-9b3b-4118-86c4-9a0089c44dc7",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a2b3a054-99ba-4123-9bd6-563e82a4342c",
          "title": "Nevigate the setting page and test the email fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Field name should be unique",
              "fullTitle": "Nevigate the setting page and test the email fields Field name should be unique",
              "timedOut": null,
              "duration": 7512,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const roleOfUser = response.body.result.user.role;\n  const manageProperties = response.body.result.settings.permission[asset].manageProperties;\n  if (roleOfUser === \"std\" && manageProperties === false) {\n    buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n  } else {\n    cy.wait(\"@fieldGrid\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const existingField = response.body.result.values.find(fld => {\n        var _fld$group;\n        return ((_fld$group = fld.group) === null || _fld$group === void 0 ? void 0 : _fld$group.scope) === \"public\";\n      });\n      buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n      labelNplaceholder(existingField === null || existingField === void 0 ? void 0 : existingField.label, `Please Enter ${existingField === null || existingField === void 0 ? void 0 : existingField.label}`);\n      cyGet(`#string_label-helper-text`).should(\"contain.text\", \"Field label already exists\");\n      buSaveButton().should(\"be.disabled\");\n    });\n  }\n  ;\n});",
              "err": {},
              "uuid": "6fe0f3b4-8430-42e8-9caf-1a6c3a2a031c",
              "parentUUID": "a2b3a054-99ba-4123-9bd6-563e82a4342c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Allow All",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Allow All",
              "timedOut": null,
              "duration": 4864,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fieldLabel = `Email-${new Date().valueOf()}`;\ncy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cy.wrap(response.body.result).as(\"appAuthResponse\");\n  const roleOfUser = response.body.result.user.role;\n  const manageProperties = response.body.result.settings.permission[asset].manageProperties;\n  if (roleOfUser === \"std\" && manageProperties === false) {\n    buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n  } else {\n    buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n    cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n    budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n    labelNplaceholder(fieldLabel, `Please Enter Email`);\n    cyGet('[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]').should(\"have.text\", \"Mode of Email\");\n    budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Allow All\");\n    preview(fieldLabel, `Please Enter Email`);\n    buSaveButton().click();\n  }\n  ;\n});\ncy.get(\"@appAuthResponse\").then(res => {\n  appAuthRes = res;\n});",
              "err": {},
              "uuid": "70d121ca-55d8-4305-9061-4902876816b0",
              "parentUUID": "a2b3a054-99ba-4123-9bd6-563e82a4342c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Allow some",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Allow some",
              "timedOut": null,
              "duration": 6758,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nconst roleOfUser = appAuthRes.user.role;\nconst manageProperties = appAuthRes.settings.permission[asset].manageProperties;\nif (roleOfUser === \"std\" && manageProperties === false) {\n  buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n} else {\n  buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n  cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n  budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n  emlComponentSel(label, \"Allow All\", \"Allow Some\", \"Select Domains\", \"gmail.com\");\n}\n;",
              "err": {},
              "uuid": "09aeed60-3902-43dc-afd9-c9e0727545f4",
              "parentUUID": "a2b3a054-99ba-4123-9bd6-563e82a4342c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit email field for Allow some Email domains",
              "fullTitle": "Nevigate the setting page and test the email fields Edit email field for Allow some Email domains",
              "timedOut": null,
              "duration": 11004,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  let assetPipId = response.body.result.values.map(ele => ele.id);\n  cy.wrap(assetPipId[0]).as(\"assetPipId\");\n});\ncy.get(\"@assetPipId\").then(response => {\n  assetPipelineId = response;\n});\nsearchField(\"eml\", null, 'Edit').then(field => {\n  cy.get('[data-testid=\"close-dialog\"]').click();\n  fieldId = field === null || field === void 0 ? void 0 : field.id;\n  cy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\n  searchField(\"phn\", field.label, 'Edit');\n  cy.wait(\"@getFieldById\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let modetype;\n    const mode = response.body.result.mode;\n    const exclude = response.body.result.excludes;\n    const updatedDomains = allowedMailDomain.filter(domain => !exclude.includes(domain));\n    if (mode === 1) {\n      modetype = \"Allow Some\";\n    } else if (mode === 0) {\n      modetype = \"Restrict Some\";\n    } else {\n      modetype = \"Allow All\";\n    }\n    emlComponentSel(label, modetype, \"Allow Some\", exclude[0], updatedDomains[0]);\n  });\n});",
              "err": {},
              "uuid": "a932edf5-cdca-4a9a-a2f1-c830993b9902",
              "parentUUID": "a2b3a054-99ba-4123-9bd6-563e82a4342c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Restrict some",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Restrict some",
              "timedOut": null,
              "duration": 7957,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nconst roleOfUser = appAuthRes.user.role;\nconst manageProperties = appAuthRes.settings.permission[asset].manageProperties;\nif (roleOfUser === \"std\" && manageProperties === false) {\n  buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n} else {\n  buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n  cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n  budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n  emlComponentSel(label, \"Allow All\", \"Allow Some\", \"Select Domains\", \"yahoo.com\");\n}\n;",
              "err": {},
              "uuid": "20bdecd1-36a0-45fd-b288-990037e4639f",
              "parentUUID": "a2b3a054-99ba-4123-9bd6-563e82a4342c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit email field for Restricted Email domains",
              "fullTitle": "Nevigate the setting page and test the email fields Edit email field for Restricted Email domains",
              "timedOut": null,
              "duration": 11217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nsearchField(\"eml\", null, 'Edit').then(field => {\n  cy.get('[data-testid=\"close-dialog\"]').click();\n  fieldId = field === null || field === void 0 ? void 0 : field.id;\n  cy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\n  searchField(\"phn\", field.label, 'Edit');\n  cy.wait(\"@getFieldById\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let modetype;\n    const mode = response.body.result.mode;\n    const exclude = response.body.result.excludes;\n    const updatedDomains = allowedMailDomain.filter(domain => !exclude.includes(domain));\n    if (mode === 1) {\n      modetype = \"Allow Some\";\n    } else if (mode === 0) {\n      modetype = \"Restrict Some\";\n    } else {\n      modetype = \"Allow All\";\n    }\n    emlComponentSel(label, modetype, \"Restrict Some\", exclude[0], updatedDomains[0]);\n  });\n});",
              "err": {},
              "uuid": "7526baa0-a225-493f-82f6-a20d74011905",
              "parentUUID": "a2b3a054-99ba-4123-9bd6-563e82a4342c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6fe0f3b4-8430-42e8-9caf-1a6c3a2a031c",
            "70d121ca-55d8-4305-9061-4902876816b0",
            "09aeed60-3902-43dc-afd9-c9e0727545f4",
            "a932edf5-cdca-4a9a-a2f1-c830993b9902",
            "20bdecd1-36a0-45fd-b288-990037e4639f",
            "7526baa0-a225-493f-82f6-a20d74011905"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49312,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d1c2bb50-ff2e-4d86-bd88-5f500015069b",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d604d763-6d04-496c-b321-977da7bff6d6",
          "title": "Nevigate the setting page and test the field group",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add new group",
              "fullTitle": "Nevigate the setting page and test the field group Add new group",
              "timedOut": null,
              "duration": 7609,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let groupName = `Group-${new Date().valueOf()}`;\ncy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.get(lead.typeBtn).contains(\"Add Group\").click();\ncy.get(lead.dialogTitle).should(\"have.text\", \"Create group\");\ncy.componentLabel(lead.formLabel, \"Create group\", \"input\").type(groupName);\ncy.get(\"#cancel\").should(\"have.text\", \"Cancel\");\ncy.get(\"#add\").click();",
              "err": {},
              "uuid": "f57c92f0-1acd-4c09-9f5d-5b91ce434f84",
              "parentUUID": "d604d763-6d04-496c-b321-977da7bff6d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Private group can't be edited and deleted",
              "fullTitle": "Nevigate the setting page and test the field group Private group can't be edited and deleted",
              "timedOut": null,
              "duration": 3063,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(\"@groupGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let privateGroup = response.body.result.values.find(ele => ele.scope === \"private\");\n  cy.contains(\"tr\", privateGroup === null || privateGroup === void 0 ? void 0 : privateGroup.label).find(`[aria-label=\"${privateGroup === null || privateGroup === void 0 ? void 0 : privateGroup.label}\"]`).should(\"contain.text\", privateGroup === null || privateGroup === void 0 ? void 0 : privateGroup.label);\n  cy.contains(\"tr\", privateGroup === null || privateGroup === void 0 ? void 0 : privateGroup.label).find(\"#actions\").click();\n  cyGet(\"#edit\").trigger(\"mouseover\", {\n    force: true\n  });\n  cyGet('.MuiTooltip-tooltip').contains(\"Private group can't be edited\");\n  cyGet('#edit > .MuiButtonBase-root ').should(\"have.attr\", \"aria-disabled\", \"true\");\n  cyGet(\"#delete\").trigger(\"mouseover\", {\n    force: true\n  });\n  cyGet('.MuiTooltip-tooltip').contains(\"Private group can't be deleted\");\n  cyGet('#delete > .MuiButtonBase-root ').should(\"have.attr\", \"aria-disabled\", \"true\");\n});",
              "err": {},
              "uuid": "06fd951f-2d3e-4aae-b0bc-c6888eb6b73b",
              "parentUUID": "d604d763-6d04-496c-b321-977da7bff6d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate assigned fields count with API",
              "fullTitle": "Nevigate the setting page and test the field group Validate assigned fields count with API",
              "timedOut": null,
              "duration": 4981,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(1000);\ncy.recordCountOnPage(\"5\");\ncy.wait(\"@groupGrid\").then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.assignedFields);\n  let counts = abc.map(fields => {\n    let count = fields.count;\n    return count === 0 ? \"--\" : count;\n  });\n  cyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(2)\").each(($row, index) => {\n    cy.wrap($row).contains(counts[index]);\n  });\n});",
              "err": {},
              "uuid": "c5ca8fbb-311f-4674-b7be-f869e2865231",
              "parentUUID": "d604d763-6d04-496c-b321-977da7bff6d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "group name should be unique",
              "fullTitle": "Nevigate the setting page and test the field group group name should be unique",
              "timedOut": null,
              "duration": 5019,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(\"@groupGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const group = response.body.result.values.filter(grp => grp.scope === \"public\");\n  cy.contains(`tr`, group[0].label).find(\"#actions\").click();\n  cyGet(\"#edit\").click();\n  cyGet(`[data-testid=\"title-dialog\"] p`).should(\"contain.text\", \"Rename group\");\n  cyGet(`[data-testid=\"butextfield-textfield-lrb6zu6xa\"] label`).contains(\"Rename group\").next().find(`input`).as(\"renameGroupInput\");\n  cy.get(\"@renameGroupInput\").should(\"have.value\", group[0].label);\n  cy.get(\"@renameGroupInput\").clear().type(group[1].label);\n  onesecondWait();\n  cy.wait(\"@groupExist\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    expect(response.body).has.property(\"message\", \"Group already exists.\");\n    // cyGet(\".MuiFormHelperText-root\").should(\"contain.text\", response.body.message)\n    cyGet(\"#add\").should(\"be.disabled\");\n  });\n});",
              "err": {},
              "uuid": "a9e6567c-b73b-463e-a8b3-e374628b976b",
              "parentUUID": "d604d763-6d04-496c-b321-977da7bff6d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Rename group",
              "fullTitle": "Nevigate the setting page and test the field group Rename group",
              "timedOut": null,
              "duration": 4762,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let groupName = `Group-${new Date().valueOf()}`;\ncyGet('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(\"@groupGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const group = response.body.result.values.find(grp => grp.scope === \"public\");\n  cy.log(JSON.stringify(group));\n  cy.contains(`tr`, group === null || group === void 0 ? void 0 : group.label).find(\"#actions\").click();\n  cyGet(\"#edit\").click();\n  cyGet(`[data-testid=\"butextfield-textfield-lrb6zu6xa\"] label`).contains(\"Rename group\").next().find(`input`).as(\"renameGroupInput\");\n  cy.get(\"@renameGroupInput\").should(\"have.value\", group === null || group === void 0 ? void 0 : group.label);\n  cy.get(\"@renameGroupInput\").clear().type(groupName);\n  cyGet(\"#cancel\").should(\"contain.text\", \"Cancel\");\n  cyGet(\"#add\").click();\n});",
              "err": {},
              "uuid": "998b3e1e-29f0-4bb2-9b57-3743933f3c85",
              "parentUUID": "d604d763-6d04-496c-b321-977da7bff6d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete group",
              "fullTitle": "Nevigate the setting page and test the field group Delete group",
              "timedOut": null,
              "duration": 5560,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let msg1 = \"Delete Group\";\nlet msg2 = \"Are you sure! want to delete this group?\";\ncy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(1000);\ncy.recordCountOnPage(\"5\");\ncyGet('[aria-label=\"pagination navigation\"] ul > :last').prev().click();\ncy.wait(\"@groupGrid\").then(({\n  response\n}) => {\n  const group = response.body.result.values.find(grp => grp.assignedFields.count === 0 && grp.scope === \"public\");\n  if (group) {\n    cy.contains(\"tr\", group.label).find(\"#actions\").click();\n    cyGet(\"#delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n  } else {\n    cy.log(`Either all groups contain the field, or no public groups are available: ${group}`);\n  }\n});",
              "err": {},
              "uuid": "ec3a110e-0111-4858-9937-4a818e83793f",
              "parentUUID": "d604d763-6d04-496c-b321-977da7bff6d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f57c92f0-1acd-4c09-9f5d-5b91ce434f84",
            "06fd951f-2d3e-4aae-b0bc-c6888eb6b73b",
            "c5ca8fbb-311f-4674-b7be-f869e2865231",
            "a9e6567c-b73b-463e-a8b3-e374628b976b",
            "998b3e1e-29f0-4bb2-9b57-3743933f3c85",
            "ec3a110e-0111-4858-9937-4a818e83793f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30994,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3f7ea20e-02e7-4c08-8095-1caf74c2334f",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c1a2998a-6c1d-4dec-966a-ef7b954152c7",
          "title": "Navigate to setting page and create and update fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create Multi line text field",
              "fullTitle": "Navigate to setting page and create and update fields Create Multi line text field",
              "timedOut": null,
              "duration": 11229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Multiline-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Multi line text\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${globalSel.butextfield}`, \"input\").type(3); // set min\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${globalSel.butextfield}`, \"input\").type(100); // set max\n// butextField(globalSel.butextfield, \"#max\").type(100)\ntextCaseFormat();\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"] > label`).should(\"have.text\", fieldLabel);\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"]`).find(\"textarea\").should(\"have.attr\", \"placeholder\", `Enter ${fieldLabel}`);\n// preview(fieldLabel, `Enter ${fieldLabel}`)\nbuSaveButton().click();\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.created);",
              "err": {},
              "uuid": "558baabe-d901-47e6-b3d0-fdc61cd6de20",
              "parentUUID": "c1a2998a-6c1d-4dec-966a-ef7b954152c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Multi line text field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Multi line text field",
              "timedOut": null,
              "duration": 12018,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Multiline-${new Date().valueOf()}`;\ncy.visit(`${Cypress.env(\"lmsUrl\")}/setting/properties`);\n// cy.wait(2000)\ncy.wait(\"@assetsPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let assetPipId = response.body.result.values.map(ele => ele.id);\n  cy.wrap(assetPipId[0]).as(\"assetPipId\");\n});\ncy.get(\"@assetPipId\").then(response => {\n  assetPipelineId = response;\n});\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\nfieldTypeFilterOnSetting(\"Multi line text\");\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"Multi line text\");\nsearchField(\"txa\", null, 'Edit');\n// cy.get(\"@mobileId\").then((response) => { mobFieldId = response?.id })\n// cy.get(\"@stageId\").then((response) => { stgFieldId = response?.id })\n// cy.get(\"@ownerId\").then((response) => { ownFieldId = response?.id })\n// cy.get('@fieldResp').then((response) => { fieldId = response?.id });\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${globalSel.butextfield}`, \"input\").clear().type(3); // edit min\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${globalSel.butextfield}`, \"input\").clear().type(150); // edit max\ntextCaseFormat();\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"] > label`).should(\"have.text\", fieldLabel);\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"]`).find(\"textarea\").should(\"have.attr\", \"placeholder\", `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", messages.updated);",
              "err": {},
              "uuid": "150a8014-4bf8-4819-8eeb-c74406df03dd",
              "parentUUID": "c1a2998a-6c1d-4dec-966a-ef7b954152c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "558baabe-d901-47e6-b3d0-fdc61cd6de20",
            "150a8014-4bf8-4819-8eeb-c74406df03dd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23247,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e342fb02-624a-4753-98f3-bb1734509ead",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
      "file": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0fa19353-2ea7-4e87-a090-a9149acef537",
          "title": "Nevigate the lead page and Test Header componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
          "file": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Header componet of lead management",
              "fullTitle": "Nevigate the lead page and Test Header componet Header componet of lead management",
              "timedOut": null,
              "duration": 6590,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\n    Company profile Icon and Name should be present\n    Action, Export, Import and Create lead button should be present\n    Pipeline-user Show and add icon should be present\n    List view, Kanban view and Chart view button should be present\n*/\n// Company profile Icon and Name\ncy.wait(\"@appAuth\").then(({\n  response\n}) => {\n  cy.get('#bu-layout h6').should(\"have.text\", response.body.result.company.label);\n});\n// Action button\ncyGet(`[data-testid=\"Action\"]`).should(\"contain.text\", \"Action\");\n// Export button\ncyGet(`[data-testid=\"Export\"]`).should(\"contain.text\", \"Export\");\n// Import Button\ncyGet(`[data-testid=\"Import\"]`).should(\"contain.text\", \"Import\");\n// Create record button\ncyGet(`[data-testid=\"Create ${assetName}\"]`).should(\"contain.text\", `Create ${assetName}`);\n// Pipeline-user Show and add icon\ncy.wait(\"@crewPipelines\").then(({\n  response\n}) => {\n  let userOnPip = response.body.result.values.length;\n  if (userOnPip > 4) {\n    let userInPlusIcon = response.body.result.pages.totalRecords - 3;\n    cy.get('#bu-layout [data-testid=\"activitybar-box-txgt1t82k\"] [data-testid=\"buavatargroup-avatargroup-dovjvw4cl\"] .MuiAvatarGroup-avatar').contains(userInPlusIcon);\n  } else {\n    cy.get('#bu-layout [data-testid=\"activitybar-box-txgt1t82k\"] [data-testid=\"buavatargroup-avatargroup-dovjvw4cl\"] .MuiAvatarGroup-avatar').then($el => {\n      expect($el.length).be.eq(userOnPip);\n    });\n  }\n});\n// List view button\ncy.get('#bu-layout [aria-label=\"Grid view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");\n// Kanban view button\nif (asset === \"contact\") {\n  cy.get('#bu-layout [aria-label=\"Card view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");\n} else {\n  cy.get('#bu-layout [aria-label=\"Kanban view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");\n}\n// Chart view button\ncy.get('#bu-layout [aria-label=\"Chart view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");",
              "err": {},
              "uuid": "a0706c14-a11a-481f-83cd-cc075604e8e6",
              "parentUUID": "0fa19353-2ea7-4e87-a090-a9149acef537",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0706c14-a11a-481f-83cd-cc075604e8e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6590,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "09e5f24d-7234-429a-938d-5e5c40270d50",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
      "file": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7be3b69b-64b4-4536-ad4f-a17cc8ad3108",
          "title": "Nevigate the lead page and Test Header componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
          "file": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Header componet of lead management",
              "fullTitle": "Nevigate the lead page and Test Header componet Header componet of lead management",
              "timedOut": null,
              "duration": 6148,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#app-routes > header > .MuiToolbar-root .MuiButtonBase-root > :first ');\n// .should(\"have.css\", \"color\", \"rgba(0, 0, 0, 0.6)\").and(\"have.css\", \"height\")\n// .and(\"have.css\", \"width\")\ncy.get('#app-routes > header a[href=\"/dashboard\"]').should(\"have.attr\", \"style\", \"display: flex;\");\ncy.get('#app-routes > header h6').should(\"have.text\", formatModuleName(module));\n// Check Light/Dark mode functionality\ncy.get('#app-routes > header [aria-label] :first .MuiTypography-root').then($item => {\n  let data = $item.text();\n  cy.log(data);\n  if (data === \"OFF\") {\n    cy.get('#app-routes > header [role=\"switch\"]').click({\n      force: true\n    });\n    cy.get('#app-routes > header [aria-label] :first .MuiTypography-root').should(\"have.text\", \"ON\");\n  } else if (data === \"ON\") {\n    cy.get('#app-routes > header [role=\"switch\"]').click({\n      force: true\n    });\n    cy.get('#app-routes > header [aria-label] :first .MuiTypography-root').should(\"have.text\", \"OFF\");\n  }\n});\n// Check Notifications button present on header or not\ncy.get('#app-routes > header [aria-label=\"Notifications\"]').click();\ncy.get('.MuiDrawer-paperAnchorRight h6').should(\"have.text\", \"Notifications\");\ncy.get('.MuiDrawer-paperAnchorRight .MuiBox-root > .MuiButtonBase-root .MuiSvgIcon-fontSizeSmall').click();\n// Check Settings button present on header or not\ncy.get('#app-routes > header [aria-label=\"Settings\"] button').should(\"have.attr\", \"type\", \"button\");\n// Check User Profile button present on header or not\ncy.get('#app-routes > header [aria-label=\"User Profile\"] button').should(\"have.attr\", \"aria-label\", \"account of current user\").click();\ncy.wait(\"@appAuth\").then(({\n  response\n}) => {\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.user.email);\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.company.label);\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.company.name);\n});",
              "err": {},
              "uuid": "4f82b2bc-466b-47e6-a6e7-b53aa6829ef5",
              "parentUUID": "7be3b69b-64b4-4536-ad4f-a17cc8ad3108",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f82b2bc-466b-47e6-a6e7-b53aa6829ef5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6148,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9ab45ed3-d8f3-40d9-a401-eafc969d87a1",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "898c5028-0f08-457b-a60e-4fb914ba4d86",
          "title": "Navigate on field config page",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the presence of the \"Attach Field\", \"Create field\", \"Cancel\" and \"Apply\" button",
              "fullTitle": "Navigate on field config page Verify the presence of the \"Attach Field\", \"Create field\", \"Cancel\" and \"Apply\" button",
              "timedOut": null,
              "duration": 6656,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"title-dialog\"]').should(\"have.text\", \"Edit fields\");\ncy.get('[data-testid=\"Attach field\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Attach field\");\ncy.get('[data-testid=\"Create field\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Create field\");\ncy.get('[data-testid=\"cancel\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"cancel\");\ncy.get('[data-testid=\"Apply\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Apply\");",
              "err": {},
              "uuid": "f163c7b4-a7a5-49bc-b2dc-f2d7216d175c",
              "parentUUID": "898c5028-0f08-457b-a60e-4fb914ba4d86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the presence of the System required field on form config",
              "fullTitle": "Navigate on field config page Verify the presence of the System required field on form config",
              "timedOut": null,
              "duration": 3591,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait('@fieldConfig').then(interception => {\n  const responseBody = interception.response.body;\n  const values = responseBody.result.values;\n  const filteredFields = values.filter(field => field.system && field.required);\n  const labels = filteredFields.map(field => field.label);\n  cy.log(labels.join(', '));\n  cy.get('[data-testid=\"buformeditor-listitemtext-ofe56xosa\"]').contains(\"System Fields\");\n  labels.forEach(label => {\n    cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input[placeholder=\"Search...\"]').clear({\n      force: true\n    }).type(label, {\n      force: true\n    });\n    cy.get('[data-testid=\"propertylist-listitemtext-esgc2itka\"]').first().should('have.text', label);\n    cy.get('[data-testid=\"propertylist-checkbox-9qc6i0a6w\"] input').should('have.attr', 'disabled');\n    // .and('have.attr', 'checked');\n  });\n});",
              "err": {},
              "uuid": "c8fdcbb3-8b43-41be-b222-185f888355c7",
              "parentUUID": "898c5028-0f08-457b-a60e-4fb914ba4d86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the System field should be checkable or uncheckable on form config",
              "fullTitle": "Navigate on field config page Verify the System field should be checkable or uncheckable on form config",
              "timedOut": null,
              "duration": 4966,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait('@fieldConfig').then(interception => {\n  const responseBody = interception.response.body;\n  const values = responseBody.result.values;\n  const filteredFields = values.filter(field => field.system);\n  const labels = filteredFields.map(field => field.label);\n  cy.log(labels.join(', '));\n  cy.get('[data-testid=\"buformeditor-listitemtext-ofe56xosa\"]').contains(\"System Fields\");\n  labels.forEach(label => {\n    cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input[placeholder=\"Search...\"]').clear({\n      force: true\n    }).type(label, {\n      force: true\n    });\n    cy.get('[data-testid=\"propertylist-listitemtext-esgc2itka\"]').first().should('have.text', label);\n    cy.get('[data-testid=\"propertylist-checkbox-9qc6i0a6w\"] input').then($input => {\n      if ($input.is(':checked')) {\n        cy.wrap($input).uncheck({\n          force: true\n        });\n      } else {\n        cy.wrap($input).check({\n          force: true\n        });\n      }\n    });\n  });\n});",
              "err": {},
              "uuid": "8356cf18-dcd1-43b5-ae9d-b0b88e25510e",
              "parentUUID": "898c5028-0f08-457b-a60e-4fb914ba4d86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select property and Make required and remove required and de-select property ",
              "fullTitle": "Navigate on field config page Select property and Make required and remove required and de-select property ",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "//Check field from field config, make required and add on form config\ncy.wait(\"@fieldConfig\").then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(item => item.system === false).slice(-1);\n  let fieldId = fieldData[0].id.toString();\n  let fieldName = fieldData[0].label.toString();\n  cy.get('.MuiFormControl-root [placeholder=\"Search...\"]').type(fieldName);\n  cy.get(':nth-child(1) > .MuiListItem-root > .MuiFormControlLabel-root input').check();\n  cy.get(`[data-rbd-droppable-id=\"column\"]`).children(`[data-rbd-draggable-id=${fieldId}]`).contains(fieldName);\n});\n// cy.get(':nth-child(1) > .MuiListItem-root > .MuiFormControlLabel-root input').check()\n// cy.get('.MuiGrid-item > :last')\n// cy.get('.MuiFormControl-root [placeholder=\"Search...\"]')\n// .type(Cypress.env(\"fieldName\"))\n// cy.get('input[name=\"checkedB\"]').check(fieldName)\n// cy.get('[data-rbd-droppable-id=\"column\"]').find('[type=\"checkbox\"]').last().check()\n// cy.get(lead.typeBtn).contains(\"Apply\").click()\n// cy.get('#create-lead .MuiFormControl-root label').contains(Cypress.env(\"fieldName\"))\n// cy.get(`#create-lead .MuiFormControl-root [placeholder='Enter ${Cypress.env(\"fieldName\")}']`).\n//     should(\"have.attr\", \"required\")\n// //uncheck the field from field config\n// cy.get(lead.typeBtn).contains(\"Add fields\").click()\n// cy.get('[data-rbd-droppable-id=\"column\"]').find('[type=\"checkbox\"]').last().uncheck()\n// cy.get('.MuiFormControl-root [placeholder=\"Search...\"]').type(Cypress.env(\"fieldName\"))\n// cy.get('input[name=\"checkedB\"]').uncheck()\n// cy.get(lead.typeBtn).contains(\"Apply\").click()",
              "err": {},
              "uuid": "53676ce5-bfa8-4f9f-a3ee-7859b0352a25",
              "parentUUID": "898c5028-0f08-457b-a60e-4fb914ba4d86",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f163c7b4-a7a5-49bc-b2dc-f2d7216d175c",
            "c8fdcbb3-8b43-41be-b222-185f888355c7",
            "8356cf18-dcd1-43b5-ae9d-b0b88e25510e"
          ],
          "failures": [],
          "pending": [
            "53676ce5-bfa8-4f9f-a3ee-7859b0352a25"
          ],
          "skipped": [],
          "duration": 15213,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "88607f26-0a1f-4a02-acfc-5c21f526b1b6",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8ee3a482-caaa-4191-a58f-961d157aed2f",
          "title": "Nevigate the lead page and create new fields",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create single line text field",
              "fullTitle": "Nevigate the lead page and create new fields Create single line text field",
              "timedOut": null,
              "duration": 20454,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let stringField = `String-${new Date().valueOf()}`;\ncy.get(lead.inputField).should(\"have.value\", \"Single line text\");\ncy.wait(\"@groupList\").then(({\n  response\n}) => {\n  let privateGroup = response.body.result.values.filter(ele => ele.scope == \"private\");\n  cy.get(`input[name=\"Select Group\"]`).should(\"have.value\", privateGroup[0].label);\n});\n(0, _field.labelNplaceholder)(stringField, `Enter ${stringField}`);\n(0, _global.butextField)(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${_globalSel.default.butextfield}`, \"input\").type(3); // set min\n(0, _global.butextField)(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${_globalSel.default.butextfield}`, \"input\").type(30); // set max\n(0, _field.textCaseFormat)();\n(0, _field.preview)(stringField, `Enter ${stringField}`);\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.created);",
              "err": {},
              "uuid": "66d44969-79ec-4d32-8462-5fb857714bce",
              "parentUUID": "8ee3a482-caaa-4191-a58f-961d157aed2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create dropdown field",
              "fullTitle": "Nevigate the lead page and create new fields Create dropdown field",
              "timedOut": null,
              "duration": 22610,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dropdownField = `Dropdown-${new Date().valueOf()}`;\n(0, _global.budropdownInput)(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Dropdown\", _globalSel.default.dialogTitleText);\ncy.wait(\"@groupList\").then(({\n  response\n}) => {\n  let publicGroup = response.body.result.values.filter(ele => ele.scope == \"public\");\n  cy.get(`input[name=\"Select Group\"]`).click();\n  cy.get(lead.chooseOptions).contains(publicGroup[0].label).click();\n});\n(0, _field.labelNplaceholder)(dropdownField, `Enter ${dropdownField}`);\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"] input`).should(\"have.value\", \"Option 1\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get('[data-testid=\"optionslist-textfield-ud6koj7f1\"] input').eq(1).should(\"have.value\", \"Option 2\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get('[data-testid=\"optionslist-textfield-ud6koj7f1\"] input').eq(2).should(\"have.value\", \"Option 3\");\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.created);",
              "err": {},
              "uuid": "698c2770-27f9-4257-bac7-18efb5bedffd",
              "parentUUID": "8ee3a482-caaa-4191-a58f-961d157aed2f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66d44969-79ec-4d32-8462-5fb857714bce",
            "698c2770-27f9-4257-bac7-18efb5bedffd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 43064,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e1c16a92-4ac5-4f06-907e-792da165a1a4",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ca0157d8-e4a6-4b28-b3b7-0e5d6a6b7dd7",
          "title": "Test the functionality of attach field",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach field",
              "fullTitle": "Test the functionality of attach field Attach field",
              "timedOut": null,
              "duration": 17129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"Attach field\"]').should(\"have.text\", \"Attach field\").click();\ncy.wait(500);\ncy.get(`[data-testid=\"title-dialog\"] p`).contains(\"Attach field\");\n// cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').last().type(\"jddnn\")\ncy.wait(\"@availableField\").then(({\n  response\n}) => {\n  if (response.body.result.values.length == 0) {\n    cy.log(\"Fields are not available for attach\");\n    cy.get('#cancel').click();\n  } else {\n    let field = response.body.result.values.map(ele => ele.label);\n    cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').last().type(field[0]);\n    // cy.get('.MuiDialog-container .MuiDialogContent-root > :last [placeholder=\"Search...\"]')\n    cy.wait(200);\n    cy.get('[data-testid=\"attachfields-collapse-uvsmqfw9l\"] [data-testid=\"propertylist-listitemtext-esgc2itka\"]').contains(field[0]).click();\n    cy.get('#attach').click();\n    cy.wait(500);\n    cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').type(field[0]);\n    cy.get('[data-testid=\"propertylist-box-k4wxytcqz\"] [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').last().should(\"have.text\", field[0]);\n    cy.get('[data-testid=\"propertylist-box-k4wxytcqz\"] input').last().should(\"be.checked\");\n  }\n});\ncy.get('[data-testid=\"close-dialog\"]').click();\ncy.get('[data-testid=\"title-dialog\"] p').eq(1).contains(\"Warning\");\ncy.get('[data-testid=\"buformeditor-typography-3mxztjea3\"]');\ncy.get('[data-testid=\"Confirm\"]').click();",
              "err": {},
              "uuid": "4869db27-4c05-4c4d-a106-441a1beb429e",
              "parentUUID": "ca0157d8-e4a6-4b28-b3b7-0e5d6a6b7dd7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4869db27-4c05-4c4d-a106-441a1beb429e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17129,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "eaaf793d-5ba0-4fcc-ac21-6cc1d814cf7e",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a8384dc9-46d2-4d02-8aad-dd71fe46baeb",
          "title": "Nevigate the lead page and Update fields",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Edit Single line text field",
              "fullTitle": "Nevigate the lead page and Update fields Edit Single line text field",
              "timedOut": null,
              "duration": 23381,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let singleField = `Single line-${new Date().valueOf()}`;\ncy.wait(\"@fieldList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(ele => ele.required == false && ele.system == false && ele.prop == \"str\").slice(-1);\n  cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input').type(fieldData[0].label);\n  cy.get('[data-testid=\"actions-iconbutton-4zbo8fvnl\"]').first().click();\n  cy.get('[data-testid=\"actions-box-qexr9sum4\"]').contains('Edit').click({\n    force: true\n  });\n  cy.get('[data-testid=\"input-muiinput-t8mkcx347\"] input[name=\"Select Field Type\"]').should(\"have.value\", \"Single line text\");\n  // Field label and Placeholder\n  (0, _field.labelNplaceholder)(singleField, `Enter ${singleField}`);\n  // Min and Max\n  cy.get('[data-testid=\"withtitle-box-mp6w6v7ka\"] label').contains(\"Min Length\").next().clear().type(faker.number.int({\n    min: 3,\n    max: 9\n  }));\n  cy.get('[data-testid=\"withtitle-box-mp6w6v7ka\"] label').contains(\"Max Length\").next().clear().type(faker.number.int({\n    min: 15,\n    max: 100\n  }));\n  // Text Case\n  (0, _field.textCaseFormat)();\n  // Preview\n  cy.get('#single_text_field-label').should(\"have.text\", singleField);\n  cy.get('#single_text_field').should(\"have.attr\", \"placeholder\", `Enter ${singleField}`);\n});\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.updated);",
              "err": {},
              "uuid": "cea3e89a-dd13-475d-8c69-35b38547f08f",
              "parentUUID": "a8384dc9-46d2-4d02-8aad-dd71fe46baeb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit dropdown field",
              "fullTitle": "Nevigate the lead page and Update fields Edit dropdown field",
              "timedOut": null,
              "duration": 25009,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let basField = `Dropdown-${new Date().valueOf()}`;\ncy.wait(500);\ncy.wait(\"@fieldList\").then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(ele => ele.required == false && ele.system == false && ele.prop == \"bas\").slice(-1);\n  // cy.log(\"fieldData\", JSON.stringify(fieldData[0].label))\n  cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input').type(fieldData[0].label);\n  cy.get('[data-testid=\"actions-iconbutton-4zbo8fvnl\"]').first().click();\n  cy.get('[data-testid=\"actions-box-qexr9sum4\"]').contains('Edit').click({\n    force: true\n  });\n  cy.get('[data-testid=\"input-muiinput-t8mkcx347\"] input[name=\"Select Field Type\"]').should(\"have.value\", \"Dropdown\").and(\"have.prop\", \"disabled\");\n  (0, _field.labelNplaceholder)(basField, `Enter ${basField}`);\n});\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"]`).first().clear().type(\"Edited Option 1\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"]`).last().clear().type(`Option-${new Date().valueOf()}`);\ncy.get('[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"] input[value=\"multi\"]').then($ele => {\n  if ($ele.is(':disabled')) {\n    cy.log(\"Multi-selection option type can't be edit\");\n  } else {\n    cy.get('[value=\"single\"]').click();\n    cy.get('[value=\"multi\"]').click();\n  }\n});\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.updated);",
              "err": {},
              "uuid": "da6a8831-599a-4077-b1e6-1d295aabab59",
              "parentUUID": "a8384dc9-46d2-4d02-8aad-dd71fe46baeb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cea3e89a-dd13-475d-8c69-35b38547f08f",
            "da6a8831-599a-4077-b1e6-1d295aabab59"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 48390,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2cb7beec-6a9a-4cfa-a843-9cf4efa4280e",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9e96feb6-7171-4eae-83fe-fbaaa527ade0",
          "title": "Nevigate the lead page and Create Lead",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "219c307b-dad0-439e-95b0-f65d702f0116",
              "title": "Create record",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create record with \"str\", \"phn\", \"num\", \"txa\", \"eml\", \"url\" fields",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"str\", \"phn\", \"num\", \"txa\", \"eml\", \"url\" fields",
                  "timedOut": null,
                  "duration": 26764,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  userRole = response.body.result.user.role;\n  cy.wait(\"@existsPipeline\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    createAccess = response.body.result.tools.create;\n    cyGet(`[data-testid=\"butoolbar-grid-2yad1y8r5\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).click({\n      force: true\n    });\n    cy.wait(\"@getPipeline\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      pipelines = response.body.result.values;\n      createRecordScript([\"str\", \"phn\", \"num\", \"txa\", \"eml\", \"url\"], userRole, createAccess, pipelines);\n    });\n  });\n});",
                  "err": {},
                  "uuid": "841e6ced-d537-4486-a69f-71e839fbc517",
                  "parentUUID": "219c307b-dad0-439e-95b0-f65d702f0116",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"bas\", \"rtg\"",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"bas\", \"rtg\"",
                  "timedOut": null,
                  "duration": 12167,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"bas\", \"rtg\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "891de27c-bf9d-457b-aa40-8872e8557df1",
                  "parentUUID": "219c307b-dad0-439e-95b0-f65d702f0116",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"dsrc\", \"asc\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"dsrc\", \"asc\" field",
                  "timedOut": null,
                  "duration": 5107,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"dsrc\", \"asc\"], userRole, createAccess, pipelines);",
                  "err": {
                    "message": "CypressError: `cy.request()` failed on:\n\nhttps://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: https://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJpYXQiOjE3NTM3OTg2ODUsImV4cCI6MTc1Mzc5OTI4NX0.iEmgHkjee3vPDZWPCbNykWRDFlKbuzGFAH4-oFiK73c\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.14.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"ssid=6888d81c0f3dbb3725a4f6f3; refToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJzZXNzaW9uSWQiOiI2ODg4ZDgxYzBmM2RiYjM3MjVhNGY2ZjMiLCJpYXQiOjE3NTM3OTg2ODQsImV4cCI6MTc1Mzg4NTA4NH0.q0esGuwlsHYWXwcvleRtoQeA2zje4ntfYO1d_MHRkck; _rnms=one,crm; mode=dark\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 98\n}\nBody: {\"fields\":[\"65166fe89a2d3227fe64e0c3\",\"64ec81c86ab5735fdd037fb4\",null,\"669f4370fc1559d6c6cd16bc\"]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Tue, 29 Jul 2025 14:18:45 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"101\",\n  \"connection\": \"keep-alive\",\n  \"cf-ray\": \"966d3f526f234e88-DEL\",\n  \"x-powered-by\": \"Express\",\n  \"vary\": \"Origin\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-trace-id\": \"3c2e3327-af36-4a45-bb04-6a9f92a6a575\",\n  \"etag\": \"W/\\\"65-B/BuDiRbAETXh+I2a92d1DD0xYg\\\"\",\n  \"strict-transport-security\": \"max-age=31536000; includeSubDomains\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=6H6uIKmylfM9hp3J21gQiEQV59biaz1qkXPdsXdiCESbZD3z2LFVEpV4q2OkAAZ%2FyEkpEg0ZSyPK46r8RBOTPIjhFJ2bFT8moKelLRLppuIf3oZ4kkobFhaxdG7Y8fjggg%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\",\n  \"server-timing\": \"cfL4;desc=\\\"?proto=TCP&rtt=9960&min_rtt=6048&rtt_var=1627&sent=437&recv=331&lost=0&retrans=8&sent_bytes=99900&recv_bytes=65792&delivery_rate=754031&cwnd=257&unsent_bytes=0&cid=c649e32b8ffe6d3a&ts=236268&x=0\\\"\"\n}\nBody: {\n  \"success\": false,\n  \"message\": \"Invalid input fields.2\",\n  \"traceId\": \"3c2e3327-af36-4a45-bb04-6a9f92a6a575\"\n}\n\n\nhttps://on.cypress.io/request",
                    "estack": "CypressError: `cy.request()` failed on:\n\nhttps://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: https://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJpYXQiOjE3NTM3OTg2ODUsImV4cCI6MTc1Mzc5OTI4NX0.iEmgHkjee3vPDZWPCbNykWRDFlKbuzGFAH4-oFiK73c\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.14.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"ssid=6888d81c0f3dbb3725a4f6f3; refToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJzZXNzaW9uSWQiOiI2ODg4ZDgxYzBmM2RiYjM3MjVhNGY2ZjMiLCJpYXQiOjE3NTM3OTg2ODQsImV4cCI6MTc1Mzg4NTA4NH0.q0esGuwlsHYWXwcvleRtoQeA2zje4ntfYO1d_MHRkck; _rnms=one,crm; mode=dark\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 98\n}\nBody: {\"fields\":[\"65166fe89a2d3227fe64e0c3\",\"64ec81c86ab5735fdd037fb4\",null,\"669f4370fc1559d6c6cd16bc\"]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Tue, 29 Jul 2025 14:18:45 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"101\",\n  \"connection\": \"keep-alive\",\n  \"cf-ray\": \"966d3f526f234e88-DEL\",\n  \"x-powered-by\": \"Express\",\n  \"vary\": \"Origin\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-trace-id\": \"3c2e3327-af36-4a45-bb04-6a9f92a6a575\",\n  \"etag\": \"W/\\\"65-B/BuDiRbAETXh+I2a92d1DD0xYg\\\"\",\n  \"strict-transport-security\": \"max-age=31536000; includeSubDomains\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=6H6uIKmylfM9hp3J21gQiEQV59biaz1qkXPdsXdiCESbZD3z2LFVEpV4q2OkAAZ%2FyEkpEg0ZSyPK46r8RBOTPIjhFJ2bFT8moKelLRLppuIf3oZ4kkobFhaxdG7Y8fjggg%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\",\n  \"server-timing\": \"cfL4;desc=\\\"?proto=TCP&rtt=9960&min_rtt=6048&rtt_var=1627&sent=437&recv=331&lost=0&retrans=8&sent_bytes=99900&recv_bytes=65792&delivery_rate=754031&cwnd=257&unsent_bytes=0&cid=c649e32b8ffe6d3a&ts=236268&x=0\\\"\"\n}\nBody: {\n  \"success\": false,\n  \"message\": \"Invalid input fields.2\",\n  \"traceId\": \"3c2e3327-af36-4a45-bb04-6a9f92a6a575\"\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:133224:72)\n    at tryCatcher (https://api.butest.tech/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://api.butest.tech/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://api.butest.tech/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://api.butest.tech/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://api.butest.tech/__cypress/runner/cypress_runner.js:1701:18)\n    at _drainQueueStep (https://api.butest.tech/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://api.butest.tech/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://api.butest.tech/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://api.butest.tech/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at request (webpack://bu-testing/./cypress/selector/utility.js:33:14)\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:340:23)",
                    "diff": null
                  },
                  "uuid": "8f24c8b6-94f8-4936-b659-01277229cd7e",
                  "parentUUID": "219c307b-dad0-439e-95b0-f65d702f0116",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"rad\", \"chk\" fields",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"rad\", \"chk\" fields",
                  "timedOut": null,
                  "duration": 4012,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"rad\", \"chk\"], userRole, createAccess, pipelines);",
                  "err": {
                    "message": "CypressError: `cy.request()` failed on:\n\nhttps://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: https://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJpYXQiOjE3NTM3OTg2ODUsImV4cCI6MTc1Mzc5OTI4NX0.iEmgHkjee3vPDZWPCbNykWRDFlKbuzGFAH4-oFiK73c\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.14.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"ssid=6888d81c0f3dbb3725a4f6f3; refToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJzZXNzaW9uSWQiOiI2ODg4ZDgxYzBmM2RiYjM3MjVhNGY2ZjMiLCJpYXQiOjE3NTM3OTg2ODQsImV4cCI6MTc1Mzg4NTA4NH0.q0esGuwlsHYWXwcvleRtoQeA2zje4ntfYO1d_MHRkck; _rnms=one,crm; mode=dark\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 71\n}\nBody: {\"fields\":[\"65166fe89a2d3227fe64e0c3\",\"64ec81c86ab5735fdd037fb4\",null]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Tue, 29 Jul 2025 14:18:50 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"101\",\n  \"connection\": \"keep-alive\",\n  \"cf-ray\": \"966d3f706ea859e8-DEL\",\n  \"x-powered-by\": \"Express\",\n  \"vary\": \"Origin\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-trace-id\": \"349c8ce3-3cfe-4909-a760-95b693c123cf\",\n  \"etag\": \"W/\\\"65-C9JXUffedy6pGzIjQIZJBly+0SU\\\"\",\n  \"strict-transport-security\": \"max-age=31536000; includeSubDomains\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=ctF7xKmqU6FVnQzYIHpweBalQqVzs1PSqGxeLsaAQT6w5ynXpchAwVyUgpgyp3%2FXRxStIkQ7AElU0wl%2BfPqnemlPBuk9bSUee4qUdBbAgW4O1d7%2Bh1KnIahdLdzL6mJPQg%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\",\n  \"server-timing\": \"cfL4;desc=\\\"?proto=TCP&rtt=17669&min_rtt=6111&rtt_var=10401&sent=271&recv=253&lost=0&retrans=0&sent_bytes=19687&recv_bytes=13726&delivery_rate=680919&cwnd=257&unsent_bytes=0&cid=63a0e47ffd3fe84a&ts=235180&x=0\\\"\"\n}\nBody: {\n  \"success\": false,\n  \"message\": \"Invalid input fields.2\",\n  \"traceId\": \"349c8ce3-3cfe-4909-a760-95b693c123cf\"\n}\n\n\nhttps://on.cypress.io/request",
                    "estack": "CypressError: `cy.request()` failed on:\n\nhttps://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: https://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJpYXQiOjE3NTM3OTg2ODUsImV4cCI6MTc1Mzc5OTI4NX0.iEmgHkjee3vPDZWPCbNykWRDFlKbuzGFAH4-oFiK73c\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.14.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"ssid=6888d81c0f3dbb3725a4f6f3; refToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJzZXNzaW9uSWQiOiI2ODg4ZDgxYzBmM2RiYjM3MjVhNGY2ZjMiLCJpYXQiOjE3NTM3OTg2ODQsImV4cCI6MTc1Mzg4NTA4NH0.q0esGuwlsHYWXwcvleRtoQeA2zje4ntfYO1d_MHRkck; _rnms=one,crm; mode=dark\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 71\n}\nBody: {\"fields\":[\"65166fe89a2d3227fe64e0c3\",\"64ec81c86ab5735fdd037fb4\",null]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Tue, 29 Jul 2025 14:18:50 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"101\",\n  \"connection\": \"keep-alive\",\n  \"cf-ray\": \"966d3f706ea859e8-DEL\",\n  \"x-powered-by\": \"Express\",\n  \"vary\": \"Origin\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-trace-id\": \"349c8ce3-3cfe-4909-a760-95b693c123cf\",\n  \"etag\": \"W/\\\"65-C9JXUffedy6pGzIjQIZJBly+0SU\\\"\",\n  \"strict-transport-security\": \"max-age=31536000; includeSubDomains\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=ctF7xKmqU6FVnQzYIHpweBalQqVzs1PSqGxeLsaAQT6w5ynXpchAwVyUgpgyp3%2FXRxStIkQ7AElU0wl%2BfPqnemlPBuk9bSUee4qUdBbAgW4O1d7%2Bh1KnIahdLdzL6mJPQg%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\",\n  \"server-timing\": \"cfL4;desc=\\\"?proto=TCP&rtt=17669&min_rtt=6111&rtt_var=10401&sent=271&recv=253&lost=0&retrans=0&sent_bytes=19687&recv_bytes=13726&delivery_rate=680919&cwnd=257&unsent_bytes=0&cid=63a0e47ffd3fe84a&ts=235180&x=0\\\"\"\n}\nBody: {\n  \"success\": false,\n  \"message\": \"Invalid input fields.2\",\n  \"traceId\": \"349c8ce3-3cfe-4909-a760-95b693c123cf\"\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:133224:72)\n    at tryCatcher (https://api.butest.tech/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://api.butest.tech/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://api.butest.tech/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://api.butest.tech/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://api.butest.tech/__cypress/runner/cypress_runner.js:1701:18)\n    at _drainQueueStep (https://api.butest.tech/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://api.butest.tech/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://api.butest.tech/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://api.butest.tech/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at request (webpack://bu-testing/./cypress/selector/utility.js:33:14)\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:340:23)",
                    "diff": null
                  },
                  "uuid": "f33bd68e-7881-47d6-b503-1891f6ef5363",
                  "parentUUID": "219c307b-dad0-439e-95b0-f65d702f0116",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "841e6ced-d537-4486-a69f-71e839fbc517",
                "891de27c-bf9d-457b-aa40-8872e8557df1"
              ],
              "failures": [
                "8f24c8b6-94f8-4936-b659-01277229cd7e",
                "f33bd68e-7881-47d6-b503-1891f6ef5363"
              ],
              "pending": [],
              "skipped": [],
              "duration": 48050,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e1068c41-05dd-4d1f-88b8-2a01edf2cc0b",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2ebeef15-105a-4a46-bfc6-41c9adf728cd",
          "title": "Nevigate on lead asset page and edit record",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Edit record with single line text field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with single line text field",
              "timedOut": null,
              "duration": 13561,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  userRole = response.body.result.user.role;\n  cy.wait(\"@existsPipeline\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    editAccess = response.body.result.tools.edit;\n    cyGet(`[data-testid=\"butoolbar-grid-2yad1y8r5\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).click();\n    cy.wait(\"@getPipeline\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      pipelines = response.body.result.values;\n      updateRecordScript([\"str\"], userRole, editAccess, pipelines);\n    });\n  });\n});",
              "err": {},
              "uuid": "6313ac18-1e27-4339-842d-0e88667a928c",
              "parentUUID": "2ebeef15-105a-4a46-bfc6-41c9adf728cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with multi line text field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with multi line text field",
              "timedOut": null,
              "duration": 5603,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"txa\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "86cb28b7-2871-4b16-88a7-000023d265ac",
              "parentUUID": "2ebeef15-105a-4a46-bfc6-41c9adf728cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with email field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with email field",
              "timedOut": null,
              "duration": 5185,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"eml\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "d7a4bc5c-fb64-4e08-94ac-0206669ca138",
              "parentUUID": "2ebeef15-105a-4a46-bfc6-41c9adf728cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with number field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with number field",
              "timedOut": null,
              "duration": 4913,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"num\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "0b2a516d-2479-4888-897e-bdc9fd4d3263",
              "parentUUID": "2ebeef15-105a-4a46-bfc6-41c9adf728cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with url field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with url field",
              "timedOut": null,
              "duration": 4943,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"url\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "b1a7beeb-5325-42c1-a75e-a7cfec7a6fe6",
              "parentUUID": "2ebeef15-105a-4a46-bfc6-41c9adf728cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with simple dropdown field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with simple dropdown field",
              "timedOut": null,
              "duration": 5900,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"bas\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "f921d854-d790-4096-92ee-6cd83b536a72",
              "parentUUID": "2ebeef15-105a-4a46-bfc6-41c9adf728cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with checkbox field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with checkbox field",
              "timedOut": null,
              "duration": 1360,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"chk\"], userRole, editAccess, pipelines);",
              "err": {
                "message": "Error: Field not found for given prop",
                "estack": "Error: Field not found for given prop\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:381:40)",
                "diff": null
              },
              "uuid": "52c40851-e639-47ad-a9d2-9e4a861dc91f",
              "parentUUID": "2ebeef15-105a-4a46-bfc6-41c9adf728cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with radio field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with radio field",
              "timedOut": null,
              "duration": 1353,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"rad\"], userRole, editAccess, pipelines);",
              "err": {
                "message": "Error: Field not found for given prop",
                "estack": "Error: Field not found for given prop\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:381:40)",
                "diff": null
              },
              "uuid": "2757f49a-8d83-4733-aff1-4633c40fe8e5",
              "parentUUID": "2ebeef15-105a-4a46-bfc6-41c9adf728cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with data source field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with data source field",
              "timedOut": null,
              "duration": 1775,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"dsrc\"], userRole, editAccess, pipelines);",
              "err": {
                "message": "Error: Field not found for given prop",
                "estack": "Error: Field not found for given prop\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:381:40)",
                "diff": null
              },
              "uuid": "f07266ac-079c-40fc-a75e-f0a4060b68ab",
              "parentUUID": "2ebeef15-105a-4a46-bfc6-41c9adf728cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6313ac18-1e27-4339-842d-0e88667a928c",
            "86cb28b7-2871-4b16-88a7-000023d265ac",
            "d7a4bc5c-fb64-4e08-94ac-0206669ca138",
            "0b2a516d-2479-4888-897e-bdc9fd4d3263",
            "b1a7beeb-5325-42c1-a75e-a7cfec7a6fe6",
            "f921d854-d790-4096-92ee-6cd83b536a72"
          ],
          "failures": [
            "52c40851-e639-47ad-a9d2-9e4a861dc91f",
            "2757f49a-8d83-4733-aff1-4633c40fe8e5",
            "f07266ac-079c-40fc-a75e-f0a4060b68ab"
          ],
          "pending": [],
          "skipped": [],
          "duration": 44593,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "05c916d5-6fd5-4841-876b-8b169031b294",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5ae4cae4-22f9-4c5d-a73f-6aea482adb81",
          "title": "Test the functionality of follow up",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create follow-up for record",
              "fullTitle": "Test the functionality of follow up Create follow-up for record",
              "timedOut": null,
              "duration": 9421,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cyGet(`[data-testid=\"followup-typography-buacu26k2\"]`).should(\"contain.text\", \"Follow-up date\")\ncy.wait(\"@followupStatus\", {\n  timeout: 30000\n}).then(({\n  response\n}) => {\n  var _response$body$result;\n  twosecondWait();\n  const followStatus = (_response$body$result = response.body.result) === null || _response$body$result === void 0 ? void 0 : _response$body$result.status;\n  cyGet(`[data-testid=\"followup-iconbutton-4twf9rpig\"]`).click();\n  if (followStatus === \"pending\") {\n    inputRemark();\n    cy.reload();\n    createNewFollowUP();\n  } else {\n    createNewFollowUP();\n  }\n});",
              "err": {},
              "uuid": "23f16291-997b-4b9d-a4c3-ff99bbe7d5d3",
              "parentUUID": "5ae4cae4-22f9-4c5d-a73f-6aea482adb81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify folow up created or not",
              "fullTitle": "Test the functionality of follow up Verify folow up created or not",
              "timedOut": null,
              "duration": 2777,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[aria-label=\"Follow Up\"]`).click();\ncy.wait(\"@getFollowup\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const followupDetail = response.body.result.values[0];\n  const formattedScheduledOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.scheduledOn).format(\"DD MMM YYYY, h:mm A\");\n  const formattedCreatedOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.createdOn).format(\"DD MMM YYYY, h:mm A\");\n  cyGet(`#tool-container [data-testid=\"followuplist-box-ans7d4l18\"] h6`).should(\"contain.text\", \"Follow-up History\");\n  cyGet(`#tool-container [data-testid=\"followuplist-typography-rweu6rcqo\"]`).should(\"contain.text\", \"Scheduled on: \");\n  cyGet(`#tool-container [data-testid=\"followuplist-typography-rweu6rcqo\"]`).should(\"contain.text\", formattedScheduledOn);\n  cyGet(`#tool-container [data-testid=\"followuplist-typography-66kydwtv0\"]`).should(\"contain.text\", formattedCreatedOn);\n});",
              "err": {},
              "uuid": "a4be257f-e0ad-44bd-a228-79bf672ffddd",
              "parentUUID": "5ae4cae4-22f9-4c5d-a73f-6aea482adb81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remark follow Up",
              "fullTitle": "Test the functionality of follow up Remark follow Up",
              "timedOut": null,
              "duration": 7511,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[data-testid=\"followup-iconbutton-4twf9rpig\"]`).click();\ninputRemark();",
              "err": {},
              "uuid": "b0f0cbf4-5ded-4dde-b9e9-36f6626cccd7",
              "parentUUID": "5ae4cae4-22f9-4c5d-a73f-6aea482adb81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify follow up after remark",
              "fullTitle": "Test the functionality of follow up verify follow up after remark",
              "timedOut": null,
              "duration": 2886,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[aria-label=\"Follow Up\"]`).click();\ncy.wait(\"@getFollowup\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const followupDetail = response.body.result.values[0];\n  const formattedScheduledOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.scheduledOn).format(\"DD MMM YYYY, h:mm A\");\n  const formattedCreatedOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.createdOn).format(\"DD MMM YYYY, h:mm A\");\n  const formattedfollowedUpOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.followedUpOn).format(\"DD MMM YYYY, h:mm A\");\n  validateFollowup(`[data-testid=\"followuplist-typography-uvdjc7jp2\"]`, \"Scheduled on\");\n  validateFollowup(`[data-testid=\"followuplist-typography-2uwam0ib5\"]`, formattedScheduledOn);\n  validateFollowup(`[data-testid=\"followuplist-typography-mbqzjmh26\"]`, \"Followed up on\");\n  validateFollowup(`[data-testid=\"followuplist-typography-oaxl04km4\"]`, formattedfollowedUpOn);\n  validateFollowup(`[data-testid=\"followuplist-typography-9p4iy3xy5\"]`, \"Creation date\");\n  validateFollowup(`[data-testid=\"followuplist-typography-j73cs8h41\"]`, formattedCreatedOn);\n});",
              "err": {},
              "uuid": "e0fc0b9d-f441-49bc-8730-770f5cdb7e0e",
              "parentUUID": "5ae4cae4-22f9-4c5d-a73f-6aea482adb81",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23f16291-997b-4b9d-a4c3-ff99bbe7d5d3",
            "a4be257f-e0ad-44bd-a228-79bf672ffddd",
            "b0f0cbf4-5ded-4dde-b9e9-36f6626cccd7",
            "e0fc0b9d-f441-49bc-8730-770f5cdb7e0e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22595,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3420e7b4-e2e7-4d25-9a79-827644937570",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4ef8deba-214a-4672-8f04-9ddd602d1d30",
          "title": "Visit the import page and import record",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Ensure the asset box is available for import on the Import page.",
              "fullTitle": "Visit the import page and import record Ensure the asset box is available for import on the Import page.",
              "timedOut": null,
              "duration": 5135,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getAsset\", {\n  timeout: 15000\n}).then(({\n  response\n}) => {\n  var _response$body, _assetData, _assetData2;\n  assetData = response === null || response === void 0 || (_response$body = response.body) === null || _response$body === void 0 || (_response$body = _response$body.result) === null || _response$body === void 0 ? void 0 : _response$body.find(ast => ast.id === asset);\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData = assetData) === null || _assetData === void 0 ? void 0 : _assetData.label).next().should(\"contain.text\", assetDescription(asset));\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData2 = assetData) === null || _assetData2 === void 0 ? void 0 : _assetData2.label).parent().find(`button [aria-label=\"Select pipeline\"]`);\n});",
              "err": {},
              "uuid": "7e46b7d5-d5f6-4488-9ee4-4bd3ee97fac9",
              "parentUUID": "4ef8deba-214a-4672-8f04-9ddd602d1d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ensure the Import button is disabled until a pipeline is selected.",
              "fullTitle": "Visit the import page and import record Ensure the Import button is disabled until a pipeline is selected.",
              "timedOut": null,
              "duration": 1319,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _assetData3;\n// cy.wait(\"@getAsset\", { timeout: 15000 }).then(({ response }) => {\n//     const assetData = response?.body?.result?.find(ast => ast.id === asset)\ncyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData3 = assetData) === null || _assetData3 === void 0 ? void 0 : _assetData3.label).parent().find(`button [aria-label=\"Select pipeline\"]`).should(\"contain.text\", \"Select pipeline\");\ncyGet(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).should(\"be.disabled\");\n// })",
              "err": {},
              "uuid": "6063b11b-6faf-442e-bf69-f1787970ff7a",
              "parentUUID": "4ef8deba-214a-4672-8f04-9ddd602d1d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Download sample spreadsheet",
              "fullTitle": "Visit the import page and import record Download sample spreadsheet",
              "timedOut": null,
              "duration": 1422,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _assetData4;\n// cy.wait(\"@getAsset\", { timeout: 10000 }).then(({ response }) => {\n//     const assetData = response?.body?.result?.find(ast => ast.id === asset)\ncyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData4 = assetData) === null || _assetData4 === void 0 ? void 0 : _assetData4.label).parent().find(`button [aria-label=\"Select pipeline\"]`).click();\ncy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _assetData5;\n  const totalPipelines = response.body.result.pages.totalRecords;\n  const pipelineLabel = response.body.result.values.slice(0, 1).map(pip => pip.label);\n  cy.log(JSON.stringify(pipelineLabel));\n  if (totalPipelines > 5) {\n    buSearchbox(globalSel.search, pipelineLabel[0]);\n  }\n  budropdownOption(pipelineLabel[0]).first().click();\n  cyGet(`[data-testid=\"download\"]`).contains(\"Download sample spreadsheet\").click();\n  cyGet(`[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`).contains(\"Download sample spreadsheet\");\n  cyGet(`[data-testid=\"downloaddrawer-typography-9qmfph90r\"]`).contains(\"Sample import files\");\n  cyGet(`[data-testid=\"downloaddrawer-typography-j1aqze5i1\"]`).contains(\"This sample file shows the required column headers you need for your import file\");\n  cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`)\n  // .first()\n  .find(`[data-testid=\"downloaddrawer-box-yv4v1mdli\"] [data-testid=\"downloaddrawer-typography-lysrpjimb\"]`).contains((_assetData5 = assetData) === null || _assetData5 === void 0 ? void 0 : _assetData5.label);\n  cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`).first().find(`[data-testid=\"downloaddrawer-b-ft7iumddc\"]`).contains(pipelineLabel[0]);\n  cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`).first().find(`[data-testid=\"downloaddrawer-typography-xj4o496p9\"]`).contains(\"CSV\");\n});\n// cyGet(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).should(\"be.disabled\")\n// })",
              "err": {},
              "uuid": "5a9048d0-69ee-4ea6-a448-af0c0b0913c8",
              "parentUUID": "4ef8deba-214a-4672-8f04-9ddd602d1d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Import file and generate record",
              "fullTitle": "Visit the import page and import record Import file and generate record",
              "timedOut": null,
              "duration": 9263,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _assetData6;\n// cy.wait(\"@getAsset\", { timeout: 10000 }).then(({ response }) => {\n//     const assetData = response?.body?.result?.find(ast => ast.id === asset)\ncyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData6 = assetData) === null || _assetData6 === void 0 ? void 0 : _assetData6.label).parent().find(`button [aria-label=\"Select pipeline\"]`).click();\ncy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _assetData7;\n  const totalPipelines = response.body.result.pages.totalRecords;\n  const pipelineLabel = response.body.result.values.slice(0, 1).map(pip => pip.label);\n  const fileName = getFileForAsset(asset, pipelineLabel[0]);\n  cy.log(JSON.stringify(pipelineLabel));\n  if (totalPipelines > 5) {\n    buSearchbox(globalSel.search, pipelineLabel[0]);\n  }\n  budropdownOption(pipelineLabel[0]).first().click({\n    force: true\n  });\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData7 = assetData) === null || _assetData7 === void 0 ? void 0 : _assetData7.label).parent().find(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).click();\n  cyGet(`[data-testid=\"uploadfile-input-r5bkv246o\"]`).selectFile(fileName, {\n    force: true\n  });\n  twosecondWait();\n  cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n  twosecondWait();\n  cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n  cyGet(`#fileName-label`).should(\"contain.text\", \"Import file name\");\n  // cyGet(`input[placeholder=\"Enter file name\"]`).should(\"have.value\", fileName)\n  cy.wait(\"@requiredProps\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const requiredFields = response.body.result.values.filter(ele => ele.required === true);\n    if (requiredFields.length > 0) {\n      propwiseFields(requiredFields);\n    }\n  });\n  cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n  cyGet(`[data-testid=\"importcommit-box-8kavef2af\"] > button`).contains(\"Confirm import\").click();\n});\n// });",
              "err": {},
              "uuid": "8488ff95-4cd4-4a86-ac65-9d9c20a79d87",
              "parentUUID": "4ef8deba-214a-4672-8f04-9ddd602d1d30",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e46b7d5-d5f6-4488-9ee4-4bd3ee97fac9",
            "6063b11b-6faf-442e-bf69-f1787970ff7a",
            "5a9048d0-69ee-4ea6-a448-af0c0b0913c8",
            "8488ff95-4cd4-4a86-ac65-9d9c20a79d87"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17139,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ffa75e6a-a1b2-4a56-8f37-f41a25b4484a",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a313de82-ef44-44e4-86a6-96eadefc4eed",
          "title": "Test the functionality of Activity log",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Activity log of update record",
              "fullTitle": "Test the functionality of Activity log Activity log of update record",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "// cy.get('table > tbody > :nth-child(1)').click()\ncy.wait(1000);\ncy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").clear();\ncy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").type(faker.string.numeric(10));\ncy.get(lead.typeBtn).contains(\"Save\").click();\ncy.wait(1000);\ncy.get('[aria-label=\"Activities\"] > .MuiButtonBase-root').click();\ncy.get('.MuiTooltip-tooltip').should(\"have.text\", \"Activities\");\ncy.wait(\"@activity\").then(({\n  response\n}) => {\n  // let preValue = response.body.result.values[0].prev\n  let curValue = response.body.result.values[0].currentValue;\n  // let previousValue = preValue.toString()\n  let currentValue = `${curValue} `.toString();\n  // let userIdKey = Object.keys(response.body.result.users)\n  // cy.get(`${lead.chooseOptions} > :first`).find(\"aria-label\",previousValue).should(\"have.text\", previousValue)\n  // cy.get(`.ReactVirtualized__Grid__innerScrollContainer [aria-label=${previousValue}]`).should(\"have.text\", previousValue)\n  cy.get(`.ReactVirtualized__Grid__innerScrollContainer [aria-label=${currentValue}]`).should(\"have.text\", currentValue);\n});",
              "err": {},
              "uuid": "464bd921-58ea-4b76-8c23-bfe37e54d85a",
              "parentUUID": "a313de82-ef44-44e4-86a6-96eadefc4eed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "464bd921-58ea-4b76-8c23-bfe37e54d85a"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a8fb0125-b66a-4a36-95a1-9e7d506f82ba",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "99ffeec8-190b-4d8c-a3bf-7669f9517b8a",
          "title": "Navigate on lead and test Export functoinality",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check the behavior of the Export button based on the total number of records in a pipeline",
              "fullTitle": "Navigate on lead and test Export functoinality Check the behavior of the Export button based on the total number of records in a pipeline",
              "timedOut": null,
              "duration": 7174,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click()\n// cyGet(`[data-testid=\"title-dialog\"] p`).should(\"contain.text\", \"Export\");\ncy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  email = response.body.result.user.email;\n  role = response.body.result.user.role;\n  // const userRole = response.body.result.user.email;\n  cy.wait(\"@existsPipelines\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const accessToExport = response.body.result.tools.export;\n    if (role === \"std\" && !accessToExport) {\n      cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n    } else {\n      cy.wait(\"@recordGrid\", {\n        timeout: 10000\n      }).then(({\n        response\n      }) => {\n        const totalRecord = response.body.result.pages.totalRecords;\n        cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n        cyGet(`[data-testid=\"title-dialog\"] p`).should(\"contain.text\", \"Export\");\n        cyGet(`[data-testid=\"exportactor-typography-7vhpyacm5\"]`).contains(`Once exported, the file will be sent to ${email} and you will be notified.`);\n        cyGet(`[data-testid=\"exportactor-typography-awnrepr3p\"]`).contains(`Total number of records after all filters are applied:${totalRecord}`);\n        const total = Number(totalRecord);\n        cyGet('[role=\"dialog\"] [data-testid=\"Export\"]').should(total === 0 || total > 10000 ? 'be.disabled' : 'not.be.disabled');\n      });\n    }\n    ;\n  });\n});",
              "err": {},
              "uuid": "feb54f9f-04ac-418d-b6cc-4d595098d68e",
              "parentUUID": "99ffeec8-190b-4d8c-a3bf-7669f9517b8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Export records based on the creation date range filter selected on the export page",
              "fullTitle": "Navigate on lead and test Export functoinality Export records based on the creation date range filter selected on the export page",
              "timedOut": null,
              "duration": 5564,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (role === \"std\" && !accessToExport) {\n  cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n} else {\n  cy.wait(\"@recordGrid\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const totalRecord = response.body.result.pages.totalRecords;\n    cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n    cyGet(`[data-testid=\"exportactor-typography-awnrepr3p\"]`).contains(`Total number of records after all filters are applied:${totalRecord}`);\n    cy.get('[data-testid=\"exportactor-grid-zywx8bilv\"] [data-testid=\"budate-iconbutton-v63dt06ut\"]').click();\n    cy.get('[aria-label=\"Previous month\"]').click();\n    cy.get('[role=\"row\"]').contains(pastDay).click();\n    cyGet(`[name=\"File format\"]`).click();\n    budropdownOption(\"csv\").first().click();\n    cy.get('[data-testid=\"exportactor-grid-ti62k6zn2\"] [data-testid=\"budate-iconbutton-v63dt06ut\"]').click();\n    cy.get('[role=\"dialog\"] [role=\"row\"]').filter(':visible').contains((0, _moment.default)().date()).click();\n    cy.wait(\"@recordCount\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const recordToExport = response.body.result;\n      if (recordToExport > 0 && recordToExport < 10000) {\n        cyGet(`[role=\"dialog\"] [data-testid=\"Export\"]`).click();\n      } else {\n        throw new Error(`Record for Export:${recordToExport}`);\n      }\n    });\n    cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Export request submitted successfully. Please check your email address after sometime.\");\n  });\n}\n;",
              "err": {},
              "uuid": "253fb895-879e-4dc3-89e0-559621b552da",
              "parentUUID": "99ffeec8-190b-4d8c-a3bf-7669f9517b8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter record and Export records",
              "fullTitle": "Navigate on lead and test Export functoinality Filter record and Export records",
              "timedOut": null,
              "duration": 6109,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (role === \"std\" && !accessToExport) {\n  cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n} else {\n  cy.wait(\"@existsPipelines\", {\n    timeout: 10000\n  });\n  cyGet(`#filter`).click();\n  cy.wait(\"@filters\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const uidField = response.body.result.find(ele => ele.prop === \"uid\");\n    cyGet(`[placeholder=\"Search...\"]`).type(uidField.label);\n    onesecondWait();\n    cyGet(`[data-testid=\"filterheader-box-jox1agcx8\"] > [aria-label=\"${uidField.label}\"]`).click();\n    cyGet(`[data-testid=\"comparestringfilter-box-f914y6cfe\"] [placeholder=\"Add value...\"]`).type(1);\n    onesecondWait();\n    cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalRecord = response.body.result.pages.totalRecords;\n      if (totalRecord > 0 && totalRecord < 10000) {\n        cyGet(`[role=\"dialog\"] [data-testid=\"Export\"]`).click();\n      } else {\n        throw new Error(`Record for Export:${totalRecord}`);\n      }\n      cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Export request submitted successfully. Please check your email address after sometime.\");\n    });\n  });\n}\n;",
              "err": {},
              "uuid": "e3f7c01f-052c-4350-bf56-ebd26f4fa07a",
              "parentUUID": "99ffeec8-190b-4d8c-a3bf-7669f9517b8a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "feb54f9f-04ac-418d-b6cc-4d595098d68e",
            "253fb895-879e-4dc3-89e0-559621b552da",
            "e3f7c01f-052c-4350-bf56-ebd26f4fa07a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18847,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b042d7dd-0adb-4472-b46d-6aef76ea835a",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ed916afb-b34b-4d4a-9dd8-8dbc4a42c5ef",
          "title": "Navigate on filter and test filter functoinality",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "554e0909-8c42-409e-87a9-96ae46d5a55f",
              "title": "Apply filter on string-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Apply “contains” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “contains” filter",
                  "timedOut": null,
                  "duration": 11820,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues ? findFieldValues[stringBasedProp.id].substring(0, 3) : faker.string.alpha(3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Contains\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    if (response.body.result.values.length > 0) {\n      const filterdValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n      expect(filterdValues[0]).contains(firstThreeChars);\n      response.body.result.values.forEach(valueArray => {\n        // expect(valueArray[stringBasedProp.id]).to.contain(firstThreeChars);\n        const keys = Object.keys(valueArray);\n        const findKey = keys.find(ele => ele === stringBasedProp.id);\n        if (findKey) {\n          expect(valueArray[stringBasedProp.id]).to.contain(firstThreeChars);\n        } else {\n          expect(valueArray).has.not.property(stringBasedProp.id);\n        }\n      });\n    } else {\n      cy.log(response.body.result.values);\n    }\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "76a339a3-c120-4100-a71c-d22bfee675e9",
                  "parentUUID": "554e0909-8c42-409e-87a9-96ae46d5a55f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Does not contains” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Does not contains” filter",
                  "timedOut": null,
                  "duration": 8731,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues ? findFieldValues[stringBasedProp.id].substring(0, 3) : faker.string.alpha(3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Does not contains\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      const keys = Object.keys(valueArray);\n      const findKey = keys.find(ele => ele === stringBasedProp.id);\n      if (findKey) {\n        expect(valueArray[stringBasedProp.id]).not.contain(firstThreeChars);\n      } else {\n        expect(valueArray).has.not.property(stringBasedProp.id);\n      }\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "091d5ba8-d7eb-485c-881f-d58dda1d4f88",
                  "parentUUID": "554e0909-8c42-409e-87a9-96ae46d5a55f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Starts with” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Starts with” filter",
                  "timedOut": null,
                  "duration": 8998,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues ? findFieldValues[stringBasedProp.id].substring(0, 3) : faker.string.alpha(3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Starts with\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(value => {\n      const startingDigit = value[stringBasedProp.id].substring(0, 3);\n      expect(startingDigit).to.equal(firstThreeChars);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "e2cf6244-b3ba-47d2-99c8-7a58800b393e",
                  "parentUUID": "554e0909-8c42-409e-87a9-96ae46d5a55f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply \"Ends with\" filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply \"Ends with\" filter",
                  "timedOut": null,
                  "duration": 8515,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const lastThreeChars = findFieldValues ? findFieldValues[stringBasedProp.id].slice(-3) : faker.string.alpha(3);\n  filterElements(stringBasedProp.label, lastThreeChars, \"Ends with\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(value => {\n      const keys = Object.keys(value);\n      const findKey = keys.find(ele => ele === stringBasedProp.id);\n      if (findKey) {\n        const lastDigits = value[stringBasedProp.id].slice(-3);\n        expect(lastDigits).to.equal(lastThreeChars);\n      } else {\n        expect(value).has.not.property(stringBasedProp.id);\n      }\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "3a3090e2-4017-49e5-9a84-ed42087650a0",
                  "parentUUID": "554e0909-8c42-409e-87a9-96ae46d5a55f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Equals” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Equals” filter",
                  "timedOut": null,
                  "duration": 9605,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const fieldvalue = findFieldValues[stringBasedProp.id];\n  filterElements(stringBasedProp.label, fieldvalue, \"Equals\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      expect(valueArray[stringBasedProp.id]).eq(fieldvalue);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "7bf11e01-e98e-47d7-8761-3b1540e5afc6",
                  "parentUUID": "554e0909-8c42-409e-87a9-96ae46d5a55f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Does not equals” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Does not equals” filter",
                  "timedOut": null,
                  "duration": 10040,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const fieldvalue = findFieldValues[stringBasedProp.id];\n  filterElements(stringBasedProp.label, fieldvalue, \"Does not equals\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      expect(valueArray[stringBasedProp.id]).not.eq(fieldvalue);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "ae0d4dd6-b3a7-4dd6-b59f-485d2104db32",
                  "parentUUID": "554e0909-8c42-409e-87a9-96ae46d5a55f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "76a339a3-c120-4100-a71c-d22bfee675e9",
                "091d5ba8-d7eb-485c-881f-d58dda1d4f88",
                "e2cf6244-b3ba-47d2-99c8-7a58800b393e",
                "3a3090e2-4017-49e5-9a84-ed42087650a0",
                "7bf11e01-e98e-47d7-8761-3b1540e5afc6",
                "ae0d4dd6-b3a7-4dd6-b59f-485d2104db32"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 57709,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "71b0fa99-7c62-4279-883d-91c45e4c6eb8",
              "title": "Apply filter on dropdown-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Apply  filter on stage",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on dropdown-based field to filter the records Apply  filter on stage",
                  "timedOut": null,
                  "duration": 2616,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "dropdownFilter(\"stg\", this);",
                  "err": {},
                  "uuid": "73d34cfc-a469-4a57-8785-f22644165022",
                  "parentUUID": "71b0fa99-7c62-4279-883d-91c45e4c6eb8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply  filter on owner",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on dropdown-based field to filter the records Apply  filter on owner",
                  "timedOut": null,
                  "duration": 5847,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "dropdownFilter(\"own\", this);",
                  "err": {},
                  "uuid": "26588b5b-1703-4d35-91a0-7a96673c4c9f",
                  "parentUUID": "71b0fa99-7c62-4279-883d-91c45e4c6eb8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "26588b5b-1703-4d35-91a0-7a96673c4c9f"
              ],
              "failures": [],
              "pending": [
                "73d34cfc-a469-4a57-8785-f22644165022"
              ],
              "skipped": [],
              "duration": 8463,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5fa2eb39-db4b-4139-9f43-3e069d31e783",
              "title": "Apply filter on date&time-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Filter records based on the date & time field",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on date&time-based field to filter the records Filter records based on the date & time field",
                  "timedOut": null,
                  "duration": 8988,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.get('#filter').click();\ncy.wait(\"@filters\").then(({\n  response\n}) => {\n  let propDtm = response.body.result.filter(ele => ele.prop == \"dtm\");\n  cy.get(lead.searchInfilter).type(propDtm[0].label);\n  cy.wait(500);\n  cy.get(`span[aria-label=\"${propDtm[0].label}\"]`).click();\n});\ncy.get(lead.filerCaption).contains(\"Today till midnight\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 7 days\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 30 days\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 3 months\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Custom Date\").click();\ncy.get('.rdrMonthPicker > select').select(previousMonth); // Select previous month\ncy.get('.rdrDayStartOfMonth > .rdrDayNumber').click(); // Choose date of previous month\ncy.get('.rdrNextButton').click(); // Click on next button to move on current month\ncy.get('.rdrDayToday > .rdrDayNumber').click(); // Choose date of current month",
                  "err": {},
                  "uuid": "60c104aa-0fd8-41f0-a794-d0912af511d1",
                  "parentUUID": "5fa2eb39-db4b-4139-9f43-3e069d31e783",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "60c104aa-0fd8-41f0-a794-d0912af511d1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8988,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4ccec5c1-1771-4b1b-a975-3183ac381b40",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1990f38c-dbd2-4623-b854-fab2bd99d6ed",
          "title": "Test the functionality of notes",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "save button should be disable without input notes",
              "fullTitle": "Test the functionality of notes save button should be disable without input notes",
              "timedOut": null,
              "duration": 9209,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[data-testid=\"notes-box-q3iecxru9\"] button`).contains(\"Create\").wait(2000).click({\n  force: true\n});\n// twosecondWait()\ncyGet(`#tool-container [data-testid=\"Save\"]`).contains(\"Save\").trigger('mouseover', {\n  force: true\n}).should(\"be.disabled\");\ncyGet('.MuiTooltip-tooltip').should(\"have.text\", \"There is some error in form.\");",
              "err": {},
              "uuid": "42828898-132e-4acd-b2c1-3b264f6bfc84",
              "parentUUID": "1990f38c-dbd2-4623-b854-fab2bd99d6ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a notes",
              "fullTitle": "Test the functionality of notes Add a notes",
              "timedOut": null,
              "duration": 6335,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[data-testid=\"notes-box-q3iecxru9\"] button`).contains(\"Create\").wait(2000).click({\n  force: true\n});\ncyGet(\"[data-testid='bunotepad-box-8lxcermoa']\").type(faker.lorem.sentence());\ncyGet(`#tool-container [data-testid=\"Save\"]`).click();",
              "err": {},
              "uuid": "2b24d529-2366-4acf-ad33-1a30363c5e49",
              "parentUUID": "1990f38c-dbd2-4623-b854-fab2bd99d6ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update notes",
              "fullTitle": "Test the functionality of notes Update notes",
              "timedOut": null,
              "duration": 17702,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const updateNote = faker.lorem.sentence();\ncyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(\"[data-testid='bunotepad-box-8lxcermoa']\").first().clear().type(updateNote);\ncy.wait(500);\ncyGet('[data-testid=\"buwrapper-iconbutton-s8exp1h26\"]').click();\ncyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n  force: true\n});\ncyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(updateNote);\ncyGet(`[data-testid=\"card-typography-8vfwf8lhh\"]`).should(\"contain.text\", updateNote);",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:10:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/notes.js:34:8)",
                "diff": null
              },
              "uuid": "dbafff51-f3b8-4b70-8759-9f05134a5ffb",
              "parentUUID": "1990f38c-dbd2-4623-b854-fab2bd99d6ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pin the notes",
              "fullTitle": "Test the functionality of notes Pin the notes",
              "timedOut": null,
              "duration": 4821,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const unpinnedNotes = response.body.result.values.find(note => note.pinned === false);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(unpinnedNotes.body);\n  cyGet(`#tool-container [role=\"rowgroup\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\n  cyGet('#pin').click();\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'body')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'body')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/notes.js:48:115)",
                "diff": null
              },
              "uuid": "4348381d-8022-440f-8491-bf10b3b7e49b",
              "parentUUID": "1990f38c-dbd2-4623-b854-fab2bd99d6ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unpin the notes",
              "fullTitle": "Test the functionality of notes Unpin the notes",
              "timedOut": null,
              "duration": 3384,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pinnedNotes = response.body.result.values.find(note => note.pinned === true);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(pinnedNotes.body);\n  cyGet(`#tool-container [role=\"rowgroup\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\n  cyGet('#unpin').click();\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'body')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'body')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/notes.js:60:113)",
                "diff": null
              },
              "uuid": "681df4f1-174a-46da-b2f9-1ff052db92d4",
              "parentUUID": "1990f38c-dbd2-4623-b854-fab2bd99d6ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Like notes",
              "fullTitle": "Test the functionality of notes Like notes",
              "timedOut": null,
              "duration": 2990,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pinnedNotes = response.body.result.values.find(note => note.liked === false);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(pinnedNotes.body);\n  cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\n  cyGet('#tool-container [type=\"button\"]').contains(\"Likes\").click(); // like button\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'body')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'body')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/notes.js:72:113)",
                "diff": null
              },
              "uuid": "80f2ff01-8669-4c82-a96d-930d2098e30e",
              "parentUUID": "1990f38c-dbd2-4623-b854-fab2bd99d6ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a comment on note",
              "fullTitle": "Test the functionality of notes Add a comment on note",
              "timedOut": null,
              "duration": 17621,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const comment = faker.lorem.sentence();\ncyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(`[data-testid=\"addcomment-typography-34tc065nz\"]`).click();\ncyGet('#note-comment').type(comment);\ncyGet(`[data-testid=\"toolbar-button-b9qu80nyb\"]`).contains(\"Save\").click();\ncyGet(`[data-testid=\"bunotepad-box-8lxcermoa\"]`).contains(comment);",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:10:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/notes.js:80:8)",
                "diff": null
              },
              "uuid": "38b8d1c0-39d8-40ce-83c2-55db8c8e59e5",
              "parentUUID": "1990f38c-dbd2-4623-b854-fab2bd99d6ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Comment on a notes",
              "fullTitle": "Test the functionality of notes Update Comment on a notes",
              "timedOut": null,
              "duration": 19086,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(`[data-testid=\"commentlist-box-0u6rpj17w\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\ncyGet('#edit').click();\ncyGet(\"[data-testid='bunotepad-box-8lxcermoa']\").last().clear().type(faker.lorem.sentence());\ncyGet(`[data-testid=\"toolbar-button-b9qu80nyb\"]`).contains(\"Save\").click();",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-testid=\"commentlist-box-0u6rpj17w\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-testid=\"commentlist-box-0u6rpj17w\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:10:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/notes.js:89:8)",
                "diff": null
              },
              "uuid": "8a6fe6a6-ae0d-4764-bf3f-a843f5762369",
              "parentUUID": "1990f38c-dbd2-4623-b854-fab2bd99d6ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Comment on a notes",
              "fullTitle": "Test the functionality of notes Delete Comment on a notes",
              "timedOut": null,
              "duration": 17773,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(`[data-testid=\"commentlist-box-0u6rpj17w\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\ncyGet('#delete').click();\ncyGet(`[role=\"dialog\"] #customized-dialog-title p`).should(\"contain.text\", \"Delete Comment\");\ncyGet(`[data-testid=\"buconfirmation-typography-9lgofl82d\"]`).should(\"contain.text\", \"Are you sure you want to delete comment?\");\ncyGet(`[data-testid=\"Delete\"]`).contains(\"Delete\").click();",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:10:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/notes.js:96:8)",
                "diff": null
              },
              "uuid": "2dcbb5ff-af9e-4885-97b8-305cf8e5b711",
              "parentUUID": "1990f38c-dbd2-4623-b854-fab2bd99d6ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unlike notes",
              "fullTitle": "Test the functionality of notes Unlike notes",
              "timedOut": null,
              "duration": 5046,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pinnedNotes = response.body.result.values.find(note => note.liked === true);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(pinnedNotes.body);\n  cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\n  cyGet('#tool-container [type=\"button\"]').contains(\"Likes\").click(); // like button\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'body')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'body')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/notes.js:109:113)",
                "diff": null
              },
              "uuid": "679acc0c-bfd5-44e3-bb52-bd818920ce16",
              "parentUUID": "1990f38c-dbd2-4623-b854-fab2bd99d6ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete notes",
              "fullTitle": "Test the functionality of notes Delete notes",
              "timedOut": null,
              "duration": 17532,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet(`#tool-container [role=\"rowgroup\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).as(\"ellipsis\").first().click();\ncyGet('#delete').click();\ncyGet(`[role=\"dialog\"] #customized-dialog-title p`).should(\"contain.text\", \"Delete Note\");\ncyGet(`[data-testid=\"buconfirmation-typography-9lgofl82d\"]`).should(\"contain.text\", \"Are you sure you want to delete this note?\");\ncyGet(`[data-testid=\"Delete\"]`).contains(\"Delete\").click();",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `#tool-container [role=\"rowgroup\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `#tool-container [role=\"rowgroup\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:10:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/notes.js:116:8)",
                "diff": null
              },
              "uuid": "5cb44c7a-2b05-46c5-94fc-09826a555d4a",
              "parentUUID": "1990f38c-dbd2-4623-b854-fab2bd99d6ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42828898-132e-4acd-b2c1-3b264f6bfc84",
            "2b24d529-2366-4acf-ad33-1a30363c5e49"
          ],
          "failures": [
            "dbafff51-f3b8-4b70-8759-9f05134a5ffb",
            "4348381d-8022-440f-8491-bf10b3b7e49b",
            "681df4f1-174a-46da-b2f9-1ff052db92d4",
            "80f2ff01-8669-4c82-a96d-930d2098e30e",
            "38b8d1c0-39d8-40ce-83c2-55db8c8e59e5",
            "8a6fe6a6-ae0d-4764-bf3f-a843f5762369",
            "2dcbb5ff-af9e-4885-97b8-305cf8e5b711",
            "679acc0c-bfd5-44e3-bb52-bd818920ce16",
            "5cb44c7a-2b05-46c5-94fc-09826a555d4a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 121499,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ce31d0c5-94eb-4ac2-a4f3-d2fb5be5ae52",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "58a107b8-5082-4fd0-ab83-33a812b9eda6",
          "title": "Test the functionality of notes",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify auto assignment to login user",
              "fullTitle": "Test the functionality of notes Verify auto assignment to login user",
              "timedOut": null,
              "duration": 10035,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const loginUser = response.body.result.user;\n  cy.wait(\"@existsPipelines\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    cyGet(`[aria-label=\"Tasks\"]`).click();\n    twosecondWait();\n    cyGet(`button[type=\"button\"]`).contains(\"Create task\").click({\n      force: true\n    });\n    cy.wait(\"@owners\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const findLoginUser = response.body.result.values.find(ele => ele.subLabel === loginUser.email);\n      cyGet(`#buForm [data-testid=\"avatarinput-textfield-ojwxr8kdk\"]`).contains(\"Assigned to\").next().find(`[data-testid=\"buchip-chip-5r51zm55o\"] span`).should(\"contain.text\", findLoginUser === null || findLoginUser === void 0 ? void 0 : findLoginUser.label);\n    });\n  });\n});",
              "err": {},
              "uuid": "259efcfb-8c39-440c-9e04-adb94515bc6b",
              "parentUUID": "58a107b8-5082-4fd0-ab83-33a812b9eda6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create task in contact",
              "fullTitle": "Test the functionality of notes Create task in contact",
              "timedOut": null,
              "duration": 9545,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cyGet(`[aria-label=\"Tasks\"]`).click();\n  twosecondWait();\n  cyGet(`button[type=\"button\"]`).contains(\"Create task\").click({\n    force: true\n  });\n  cy.wait(\"@getformDetails\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    propwiseFields(response.body.result.values);\n    cyGet(`[data-testid=\"buttongroup-dialogactions-fb25djtod\"] [data-testid=\"Save\"]`).click();\n  });\n});",
              "err": {},
              "uuid": "056f5418-c623-4d57-9fba-8c75075d8f0f",
              "parentUUID": "58a107b8-5082-4fd0-ab83-33a812b9eda6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit task in contact",
              "fullTitle": "Test the functionality of notes Edit task in contact",
              "timedOut": null,
              "duration": 5227,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cyGet(`[aria-label=\"Tasks\"]`).click();\n  twosecondWait();\n  searchAndChooseTask(\"Edit\").then(() => {\n    cy.wait(\"@getTaskById\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const profile = response.body.result.profile;\n      propwiseFields(profile);\n    });\n    cyGet(`[data-testid=\"buttongroup-dialogactions-fb25djtod\"] [data-testid=\"Save\"]`).click();\n  });\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'id')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'id')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/task.js:26:60)",
                "diff": null
              },
              "uuid": "ba94a7f1-1a90-4ff7-b53f-10e22185ffea",
              "parentUUID": "58a107b8-5082-4fd0-ab83-33a812b9eda6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete task",
              "fullTitle": "Test the functionality of notes Delete task",
              "timedOut": null,
              "duration": 4868,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const msg1 = \"Delete task\";\nconst msg2 = \"Are you sure you want to delete this task?\";\ncy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cyGet(`[aria-label=\"Tasks\"]`).click();\n  twosecondWait();\n  searchAndChooseTask(\"Delete\").then(() => {\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    cyGet(globalSel.deltestid).click();\n  });\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'id')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'id')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/task.js:26:60)",
                "diff": null
              },
              "uuid": "acb9ac93-5f2e-4765-841b-5ae36427aa4c",
              "parentUUID": "58a107b8-5082-4fd0-ab83-33a812b9eda6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "259efcfb-8c39-440c-9e04-adb94515bc6b",
            "056f5418-c623-4d57-9fba-8c75075d8f0f"
          ],
          "failures": [
            "ba94a7f1-1a90-4ff7-b53f-10e22185ffea",
            "acb9ac93-5f2e-4765-841b-5ae36427aa4c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 29675,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d5e1f96e-8eea-4d78-ac49-d06695a349cc",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "511a51de-2daa-4114-81f1-14ab4f8dbbdc",
          "title": "Test the functionality of Addresses",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "284b2118-be0b-4898-9e17-8e4a5a505cc0",
              "title": "Test the functionality of add address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Add address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of add address Add address",
                  "timedOut": null,
                  "duration": 17700,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _addressField, _addressField2;\n  addressField = response.body.result.find(fld => fld.prop === \"add\");\n  if (!addressField) {\n    this.skip();\n  }\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField = addressField) === null || _addressField === void 0 ? void 0 : _addressField.label}]`).should(\"contain.text\", (_addressField2 = addressField) === null || _addressField2 === void 0 ? void 0 : _addressField2.label).click();\n  cy.wait(\"@addressDeatail\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const addressView = response.body.result.view;\n    cyGet(`[data-testid=\"Add\"]`).click();\n    // twosecondWait()\n    propwiseFields(addressView, {}, [], true);\n    cyGet(`#clone`).check();\n    cyGet('[data-testid=\"buwrapper-box-2gkcmtrgi\"] > [data-testid=\"buttongroup-box-ell22p9ne\"] > [data-testid=\"buttongroup-dialogactions-fb25djtod\"] > * > [data-testid=\"Save\"]').click();\n    cyGet('.MuiSnackbarContent-message').should(\"contain.text\", messages.created);\n  });\n});",
                  "err": {},
                  "uuid": "e6dcee50-d799-4d18-aba4-681b8fc9ebe2",
                  "parentUUID": "284b2118-be0b-4898-9e17-8e4a5a505cc0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e6dcee50-d799-4d18-aba4-681b8fc9ebe2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17700,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "66aa17c6-b769-4490-b1dc-573a15bbdbb0",
              "title": "Test the functionality of edit address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Edit address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of edit address Edit address",
                  "timedOut": null,
                  "duration": 3802,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var _addressField3, _addressField4;\nif (!addressField) {\n  this.skip();\n}\ncyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField3 = addressField) === null || _addressField3 === void 0 ? void 0 : _addressField3.label}]`).should(\"contain.text\", (_addressField4 = addressField) === null || _addressField4 === void 0 ? void 0 : _addressField4.label).click();\ncy.wait(\"@addressDeatail\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const addressView = response.body.result.view;\n  const billingAddress = response.body.result.billing;\n  const shippingAddress = response.body.result.shipping;\n  if (billingAddress || shippingAddress) {\n    const country = addressView.find(view => view.prop === \"cnt\");\n    const fieldValues = billingAddress ? billingAddress.values[0][country.id] : shippingAddress.values[0][country.id];\n    cyGet(`[data-testid=\"addresssection-box-ykc0hvq21\"] [data-testid=\"busimpledropdown-box-l5z1y823c\"]`).first().click();\n    cyGet(`#edit`).click();\n    propwiseFields(addressView, {}, fieldValues, true);\n    cyGet('[data-testid=\"buwrapper-box-2gkcmtrgi\"] > [data-testid=\"buttongroup-box-ell22p9ne\"] > [data-testid=\"buttongroup-dialogactions-fb25djtod\"] > * > [data-testid=\"Save\"]').click();\n    cyGet('.MuiSnackbarContent-message').should(\"contain.text\", messages.updated);\n  }\n});",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading '6710be44fc56ce0d22922a07')",
                    "estack": "TypeError: Cannot read properties of undefined (reading '6710be44fc56ce0d22922a07')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/5_biztab/address.js:59:82)",
                    "diff": null
                  },
                  "uuid": "63866f2e-6eaf-40c3-a210-43c31aca83e7",
                  "parentUUID": "66aa17c6-b769-4490-b1dc-573a15bbdbb0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "63866f2e-6eaf-40c3-a210-43c31aca83e7"
              ],
              "pending": [],
              "skipped": [],
              "duration": 3802,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "c2b4d101-fbb9-4eb5-8bbd-94f7fec18ba0",
              "title": "Test the functionality of delete address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of delete address Delete address",
                  "timedOut": null,
                  "duration": 3077,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _addressField5, _addressField6;\nif (!addressField) {\n  this.skip();\n}\ncyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField5 = addressField) === null || _addressField5 === void 0 ? void 0 : _addressField5.label}]`).should(\"contain.text\", (_addressField6 = addressField) === null || _addressField6 === void 0 ? void 0 : _addressField6.label).click();\ncyGet(`[data-testid=\"addresssection-box-ykc0hvq21\"] [data-testid=\"busimpledropdown-box-l5z1y823c\"]`).first().click();\ncyGet(`#delete`).click();\ncyGet('#customized-dialog-title p').should(\"have.text\", \"Delete Address\");\ncyGet(`[role=\"dialog\"] [data-testid=\"buconfirmation-typography-9lgofl82d\"]`).should(\"contain.text\", \"Are you sure to delete this address?\");\ncyGet(`[data-testid=\"Delete\"]`).contains(\"Delete\").click();",
                  "err": {},
                  "uuid": "d3388932-8d0a-4c9f-b206-c73d2f5adeae",
                  "parentUUID": "c2b4d101-fbb9-4eb5-8bbd-94f7fec18ba0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d3388932-8d0a-4c9f-b206-c73d2f5adeae"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3077,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "15118407-2003-4208-bc78-780f7ec3f0e7",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "057a5453-2cac-4a27-9f94-71dee91e9ae1",
          "title": "Test the functionality of Association",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "32f8d2df-8e69-4650-92ea-8927e861baec",
              "title": "Test the functionality of Association",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Associate the record",
                  "fullTitle": "Test the functionality of Association Test the functionality of Association Associate the record",
                  "timedOut": null,
                  "duration": 12452,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let associatonField = response.body.result.find(ele => ele.prop === \"asc\");\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${associatonField === null || associatonField === void 0 ? void 0 : associatonField.label}\"]`).should(\"contain.text\", associatonField === null || associatonField === void 0 ? void 0 : associatonField.label).click();\n  if ((associatonField === null || associatonField === void 0 ? void 0 : associatonField.selection) == \"single\") {\n    cy.wait(\"@associations\").then(({\n      response\n    }) => {\n      if (response.body.result.values.length == 0) {\n        cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1)`).click();\n        cy.wait(1500);\n      } else {\n        cy.log(\"Association alredy exist\");\n      }\n    });\n  } else {\n    cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n    cy.wait(\"@associable\").then(({\n      response\n    }) => {\n      if (response.body.result.values.length > 1) {\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n        cy.get(`${lead.selectAssociableRecord} :nth-child(2) input`).click();\n        cy.wait(1500);\n      } else if (response.body.result.values.length = 1) {\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n        cy.wait(1500);\n      } else if (response.body.result.values.length = 0) {\n        expect(response.body.result.values).to.be.length.eq(0);\n      }\n      ;\n    });\n  }\n  ;\n});",
                  "err": {},
                  "uuid": "dfb0bdcf-709b-472f-abee-11988704848a",
                  "parentUUID": "32f8d2df-8e69-4650-92ea-8927e861baec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dfb0bdcf-709b-472f-abee-11988704848a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12452,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "aab71372-a240-4170-9b2b-38c959a6b50b",
              "title": "Test the functionality of Remove Association",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Remove associated record from association list",
                  "fullTitle": "Test the functionality of Association Test the functionality of Remove Association Remove associated record from association list",
                  "timedOut": null,
                  "duration": 5536,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let associatonField = response.body.result.find(ele => ele.prop === \"asc\");\n  // expect(associatonField).be.length.greaterThan(0)\n  // cy.get(lead.simpleTab).contains(associatonField[0].label).click()\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${associatonField === null || associatonField === void 0 ? void 0 : associatonField.label}\"]`).should(\"contain.text\", associatonField === null || associatonField === void 0 ? void 0 : associatonField.label).click();\n  cy.wait(\"@associations\").then(({\n    response\n  }) => {\n    if (response.body.result.values == 0) {\n      cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n      cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n      cy.wait(1500);\n      cy.get('[data-testid=\"commoncard-box-ze66boaek\"]').first().click();\n      cy.get(\"#remove\").click();\n    } else {\n      cy.get('[data-testid=\"commoncard-box-ze66boaek\"]').first().click();\n      cy.get(\"#remove\").click();\n    }\n    ;\n    cy.wait(\"@deleteAssociation\").then(({\n      response\n    }) => {\n      expect(response.body).has.property(\"message\", \"Associations removed successfully.\");\n    });\n  });\n});",
                  "err": {},
                  "uuid": "788f443c-42d2-4c26-af21-3d55e6c4e111",
                  "parentUUID": "aab71372-a240-4170-9b2b-38c959a6b50b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "788f443c-42d2-4c26-af21-3d55e6c4e111"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5536,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "99169556-a5ad-481e-85cd-2086d36ee078",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aecd5402-0612-4735-9725-062e35d5c1b4",
          "title": "Test the functionality of Attachment",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach file",
              "fullTitle": "Test the functionality of Attachment Attach file",
              "timedOut": null,
              "duration": 9876,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.simpleTab).contains(\"Attachment\").click();\ncyGet(lead.tabpanelBtn).contains(\"Add\").click();\ncyGet('input[type=\"file\"]').selectFile(\"cypress/fixtures/data.csv\", {\n  force: true\n});\ncyGet('[role=\"tabpanel\"] .MuiTypography-noWrap').first().dblclick();\n// cy.wait(1000)\n//cyGet(lead.dialogTitle).contains(\"data.csv\")\ncyGet(`#customized-dialog-title ${lead.typeBtn}`).contains(\"Download\");\ncyGet('#customized-dialog-title .MuiIconButton-root').click();",
              "err": {},
              "uuid": "a4ac99f0-ddb8-4f1a-b018-5fecf3dc5345",
              "parentUUID": "aecd5402-0612-4735-9725-062e35d5c1b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Download file",
              "fullTitle": "Test the functionality of Attachment Download file",
              "timedOut": null,
              "duration": 5713,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.simpleTab).contains(\"Attachment\").click();\ncyGet('#attachment-action').click();\ncyGet('#download').click();",
              "err": {},
              "uuid": "027b59a6-dc13-4f0f-9b27-20616799e3a8",
              "parentUUID": "aecd5402-0612-4735-9725-062e35d5c1b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete attached file",
              "fullTitle": "Test the functionality of Attachment delete attached file",
              "timedOut": null,
              "duration": 4803,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let msg2 = \"Are you sure want to delete this file?\";\ncyGet(lead.simpleTab).contains(\"Attachment\").click();\ncyGet('#attachment-action').click();\ncyGet('#delete').click();\ncy.roleDialog(lead.dialogTitle, \"Confirmation\", lead.dialogDesc, msg2, `.MuiDialogActions-root ${lead.typeBtn}`, \"Delete\");",
              "err": {},
              "uuid": "e938924f-339a-4268-b71c-ea0cac9498d7",
              "parentUUID": "aecd5402-0612-4735-9725-062e35d5c1b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a4ac99f0-ddb8-4f1a-b018-5fecf3dc5345",
            "027b59a6-dc13-4f0f-9b27-20616799e3a8",
            "e938924f-339a-4268-b71c-ea0cac9498d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20392,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "676e2fa0-002d-40f4-8429-fbf281c8a883",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d93b6a2c-080e-4b27-912e-9b699a233309",
          "title": "Test the functionality of bulk edit",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Bulk edit the record",
              "fullTitle": "Test the functionality of bulk edit Bulk edit the record",
              "timedOut": null,
              "duration": 11254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncyGet('table > thead input').check();\ncyGet('#bulkActions [data-testid=\"Edit\"]').contains(\"Edit\").click();\ncyGet(lead.dialogTitle).should(\"have.text\", \"Bulk record update\");\ncyGet(`[aria-label=\"Select Field\"]`).click();\ncy.wait(\"@getbulkEdit\").then(({\n  response\n}) => {\n  const bulkeditValues = response.body.result.values;\n  const lengthgetbulkEdit = bulkeditValues.length;\n  if (asset === \"contact\") {\n    const otherField = bulkeditValues.find(ele => ele.label !== \"Stage\");\n    if (lengthgetbulkEdit > 5) {\n      buSearchbox(globalSel.search, otherField === null || otherField === void 0 ? void 0 : otherField.label);\n    }\n    budropdownOption(otherField === null || otherField === void 0 ? void 0 : otherField.label).first().click({\n      force: true\n    });\n    if (otherField.selection === \"single\") {\n      handleDropdownField(otherField, `[data-testid=\"fields-box-xhbyf34nj\"]`, `[data-testid=\"buchip-chip-5r51zm55o\"]`);\n    } else {\n      handleDropdownField(otherField, `[data-testid=\"fields-box-xhbyf34nj\"]`);\n    }\n  } else {\n    let stageField = bulkeditValues.find(ele => ele.label === \"Stage\");\n    if (lengthgetbulkEdit > 5) {\n      buSearchbox(globalSel.search, stageField === null || stageField === void 0 ? void 0 : stageField.label);\n    }\n    budropdownOption(stageField === null || stageField === void 0 ? void 0 : stageField.label).first().click({\n      force: true\n    });\n    handleDropdownField(stageField, `[data-testid=\"fields-box-xhbyf34nj\"]`, `[data-testid=\"buchip-chip-5r51zm55o\"]`);\n    if (lengthgetbulkEdit > 1) {\n      const otherField = bulkeditValues.find(ele => ele.label !== \"Stage\");\n      cyGet(`[data-testid=\"staticfieldcard-iconbutton-u6zoboy9a\"]`).click();\n      cyGet(`[aria-label=\"Select Field\"]`).click();\n      if (lengthgetbulkEdit > 5) {\n        buSearchbox(globalSel.search, otherField === null || otherField === void 0 ? void 0 : otherField.label);\n      }\n      budropdownOption(otherField === null || otherField === void 0 ? void 0 : otherField.label).first().click({\n        force: true\n      });\n      if (otherField.selection === \"single\") {\n        handleDropdownField(otherField, `[data-testid=\"fields-box-xhbyf34nj\"]`, `[data-testid=\"buchip-chip-5r51zm55o\"]`);\n      } else {\n        handleDropdownField(otherField, `[data-testid=\"fields-box-xhbyf34nj\"]`);\n      }\n    }\n  }\n  buSaveButton().click();\n  cyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.requestSuccess);\n});",
              "err": {},
              "uuid": "f3a262f3-2f92-4eb1-ac1b-2d089debc45a",
              "parentUUID": "d93b6a2c-080e-4b27-912e-9b699a233309",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3a262f3-2f92-4eb1-ac1b-2d089debc45a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11254,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e726c13d-fe02-41ba-86df-819431724da1",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "006da296-96b2-4c40-aa9b-4bb5764a7aed",
          "title": "Test the functionality of bulk Assign",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Single owner assignment",
              "fullTitle": "Test the functionality of bulk Assign Single owner assignment",
              "timedOut": null,
              "duration": 8446,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  const totalOwner = response.body.result.values.length;\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (totalOwner > 5) {\n    buSearchbox(globalSel.search, subLabel[0]);\n  }\n  ownerIndex(ownerLabel[0], subLabel[0]);\n  cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n  buSaveButton().click({\n    force: true\n  });\n});",
              "err": {},
              "uuid": "5b1ba025-b1c0-407d-8c24-4d374d9f1e8c",
              "parentUUID": "006da296-96b2-4c40-aa9b-4bb5764a7aed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assign lead equally",
              "fullTitle": "Test the functionality of bulk Assign Assign lead equally",
              "timedOut": null,
              "duration": 5152,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  const totalOwner = response.body.result.values.length;\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (response.body.result.values.length > 1) {\n    if (totalOwner > 5) {\n      buSearchbox(globalSel.search, subLabel[0]);\n    }\n    ownerIndex(ownerLabel[0], subLabel[0]);\n    if (totalOwner > 5) {\n      buSearchbox(globalSel.search, subLabel[1]);\n    }\n    ownerIndex(ownerLabel[1], subLabel[1]);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"eq\"]').click();\n    cyGet('[aria-label=\"Assign lead equally\"]').should(\"have.text\", \"Assign lead equally\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label === ownerLabel[0]);\n      let ownerName_1 = response.body.result.values.filter(ele => ele[ownerFieldId][0].label === ownerLabel[1]);\n      let recordLength = response.body.result.values.length;\n      if (recordLength % 2 === 0) {\n        expect(ownerName).have.length(recordLength / 2);\n        expect(ownerName_1).have.length(recordLength / 2);\n      } else {\n        expect(ownerName).have.length((recordLength + 1) / 2);\n        expect(ownerName_1).have.length((recordLength - 1) / 2);\n      }\n    });\n  } else {\n    ownerIndex(ownerLabel[0], subLabel[0]);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n    });\n  }\n});",
              "err": {},
              "uuid": "93eb1cf2-23e2-497e-95ec-195664fc2c97",
              "parentUUID": "006da296-96b2-4c40-aa9b-4bb5764a7aed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assign all lead",
              "fullTitle": "Test the functionality of bulk Assign Assign all lead",
              "timedOut": null,
              "duration": 3618,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (response.body.result.values.length > 1) {\n    ownerIndex(ownerLabel[0], subLabel[0], 1);\n    ownerIndex(ownerLabel[1], subLabel[1], 2);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"all\"]').should(\"be.checked\");\n    cyGet('[aria-label=\"Assign all\"]').should(\"have.text\", \"Assign all\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let ownerName_1 = response.body.result.values.filter(ele => ele[ownerFieldId][1].label == ownerLabel[1]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n      expect(ownerName_1).have.length(recordLength);\n    });\n  } else {\n    ownerIndex(ownerLabel[0], subLabel[0], 1);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"all\"]').should(\"be.checked\");\n    cyGet('[aria-label=\"Assign all\"]').should(\"have.text\", \"Assign all\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n    });\n  }\n  ;\n});",
              "err": {},
              "uuid": "2fd72f91-7dd1-4dee-8572-46294d0baa79",
              "parentUUID": "006da296-96b2-4c40-aa9b-4bb5764a7aed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b1ba025-b1c0-407d-8c24-4d374d9f1e8c",
            "93eb1cf2-23e2-497e-95ec-195664fc2c97",
            "2fd72f91-7dd1-4dee-8572-46294d0baa79"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17216,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9517d463-66db-4ff5-8315-4939fbbb7413",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "554545df-75ea-4b7f-81ef-c52795e52a9a",
          "title": "Test the functionality of bulk delete",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Soft delete records",
              "fullTitle": "Test the functionality of bulk delete Soft delete records",
              "timedOut": null,
              "duration": 12260,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncy.wait(\"@getRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  if (recordLength === 0) {\n    cyGet('table > thead input').should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    bulkdeletedialogElements(recordLength, asset, \"soft\", remainsRecord);\n  }\n  ;\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '1543' within the element: <p.MuiTablePagination-displayedRows.css-11uxvns> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '1543' within the element: <p.MuiTablePagination-displayedRows.css-11uxvns> but never did.\n    at bulkdeletedialogElements (webpack://bu-testing/./cypress/e2e/lms/lead/6_bulkAction/3_bulk_delete.js:29:51)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/6_bulkAction/3_bulk_delete.js:42:16)",
                "diff": null
              },
              "uuid": "89f0d2ec-a64c-4f56-a979-ffe252806653",
              "parentUUID": "554545df-75ea-4b7f-81ef-c52795e52a9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Hard delete records",
              "fullTitle": "Test the functionality of bulk delete Hard delete records",
              "timedOut": null,
              "duration": 7038,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncy.wait(\"@getRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  if (recordLength === 0) {\n    cyGet('table > thead input').should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    bulkdeletedialogElements(recordLength, asset, \"hard\", remainsRecord);\n  }\n  ;\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '1543' within the element: <p.MuiTablePagination-displayedRows.css-11uxvns> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '1543' within the element: <p.MuiTablePagination-displayedRows.css-11uxvns> but never did.\n    at bulkdeletedialogElements (webpack://bu-testing/./cypress/e2e/lms/lead/6_bulkAction/3_bulk_delete.js:29:51)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/6_bulkAction/3_bulk_delete.js:57:16)",
                "diff": null
              },
              "uuid": "f61f5487-c8e0-4727-8fba-20ad9eeda0fb",
              "parentUUID": "554545df-75ea-4b7f-81ef-c52795e52a9a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "89f0d2ec-a64c-4f56-a979-ffe252806653",
            "f61f5487-c8e0-4727-8fba-20ad9eeda0fb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 19298,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bb7184b7-8743-44e7-9f94-1f27d2fd12ad",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
      "file": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "98e2f7f1-76d0-4b47-8e64-f363f33517ee",
          "title": "Navigate the lead page and test grid view component",
          "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
          "file": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "afda17c1-ef10-4ba2-b6ff-fdfc37001088",
              "title": "Global search for grid view",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "search using mobile number",
                  "fullTitle": "Navigate the lead page and test grid view component Global search for grid view search using mobile number",
                  "timedOut": null,
                  "duration": 8165,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const {\n    label,\n    catId\n  } = response.body.result;\n  cy.wait(\"@recordGrid\", {\n    timeout: 15000\n  }).then(({\n    response\n  }) => {\n    var _response$body$result;\n    let systemPhnFieldId = (_response$body$result = response.body.result.view.columns.find(ele => ele.label === \"Mobile number\")) === null || _response$body$result === void 0 ? void 0 : _response$body$result.id;\n    if (!systemPhnFieldId) {\n      const reqQs = {\n        module,\n        asset,\n        catId\n      };\n      const reqHeader = {\n        Authorization: `Bearer ${Cypress.env(\"token\")}`\n      };\n      request(\"GET\", gridViewUrl, reqHeader, reqQs).then(({\n        body\n      }) => {\n        const mobField = body.result.values.find(ele => ele.label === \"Mobile number\");\n        const payload = {\n          fields: [mobField === null || mobField === void 0 ? void 0 : mobField.id]\n        };\n        request(\"PATCH\", gridViewUrl, reqHeader, reqQs, payload).then(({\n          body\n        }) => {\n          expect(body).to.have.property(\"success\", true);\n        });\n      });\n      cy.reload();\n      cy.wait(\"@recordGrid\", {\n        timeout: 15000\n      }).then(({\n        response\n      }) => {\n        var _response$body$result2;\n        systemPhnFieldId = (_response$body$result2 = response.body.result.view.columns.find(ele => ele.label === \"Mobile number\")) === null || _response$body$result2 === void 0 ? void 0 : _response$body$result2.id;\n        performSearch(systemPhnFieldId, response.body.result);\n      });\n    } else {\n      performSearch(systemPhnFieldId, response.body.result);\n    }\n  });\n});",
                  "err": {},
                  "uuid": "2c91828c-0fdc-4ab3-9c9f-62fc5c1c1678",
                  "parentUUID": "afda17c1-ef10-4ba2-b6ff-fdfc37001088",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2c91828c-0fdc-4ab3-9c9f-62fc5c1c1678"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8165,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "54243911-da69-4849-a0d1-5deda27a7893",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
      "file": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3bdb8833-fec0-454f-9d84-5506d985da74",
          "title": "Nevigate the lead page and test grid view componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
          "file": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add Field on grid view",
              "fullTitle": "Nevigate the lead page and test grid view componet Add Field on grid view",
              "timedOut": null,
              "duration": 10301,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const {\n    label,\n    catId\n  } = response.body.result;\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const allGroup = response.body.result.values.filter(ele => ele.group === label);\n    const selectedField = response.body.result.selectedProperties;\n    const lastIndexfield = allGroup.slice(-1);\n    if (selectedField.length >= 20) {\n      const attachFieldOnView = selectedField.slice(0, 10);\n      const apiUrl = Cypress.env(\"apiurl\");\n      const gridViewUrl = `${apiUrl}/fms/views/grid`;\n      const reqQs = {\n        module,\n        asset,\n        \"catId\": catId\n      };\n      const reqHeader = {\n        Authorization: \"Bearer \" + Cypress.env(\"token\")\n      };\n      const payload = {\n        fields: [...attachFieldOnView]\n      };\n      request(\"PATCH\", gridViewUrl, reqHeader, reqQs, payload).then(({\n        body\n      }) => {\n        expect(body).to.have.property(\"success\", true);\n      });\n      cyGet(`[data-testid=\"cancel\"]`).click();\n      cyGet('#fields').click();\n      cyGet('#editCol').click();\n    }\n    setFieldOnViewConfig('[role=\"dialog\"] [type=\"text\"]', lastIndexfield[0].label, lead.chkbxOnfieldConfig);\n    cyGet(lead.typeBtn).contains(\"Apply\").click();\n    cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\").then(({\n      response\n    }) => {\n      let fieldView = response.body.result.view.columns.filter(ele => ele.label == lastIndexfield[0].label);\n      expect(fieldView[0].label).to.eq(lastIndexfield[0].label);\n    });\n  });\n});",
              "err": {},
              "uuid": "565d0620-30cf-4f64-9c02-d4f756f3ed42",
              "parentUUID": "3bdb8833-fec0-454f-9d84-5506d985da74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Field from grid view",
              "fullTitle": "Nevigate the lead page and test grid view componet Remove Field from grid view",
              "timedOut": null,
              "duration": 6440,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipName = response.body.result.label;\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let allGroup = response.body.result.values.filter(ele => ele.group == pipName);\n    let lstindexfield = allGroup.slice(-1);\n    cy.get('[role=\"dialog\"] [type=\"text\"]').clear().type(lstindexfield[0].label);\n    cy.get('.MuiBox-root > .MuiListItem-root input').first().then($ele => {\n      if ($ele.is(':checked')) {\n        cy.wrap($ele).first().click();\n      } else {\n        cy.wrap($ele).first().click(); //check then\n        cy.wrap($ele).first().click(); // uncheck\n      }\n    });\n    cy.get(lead.typeBtn).contains(\"Apply\").click();\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\").then(({\n      response\n    }) => {\n      let fieldView = response.body.result.view.columns.map(ele => ele.label);\n      fieldView.forEach(ele => {\n        expect(ele).be.not.eq(lstindexfield[0].label);\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "b5f130c4-0ba9-4908-aa10-5ef980b8a0e4",
              "parentUUID": "3bdb8833-fec0-454f-9d84-5506d985da74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Re-order field on grid view config page",
              "fullTitle": "Nevigate the lead page and test grid view componet Re-order field on grid view config page",
              "timedOut": null,
              "duration": 5612,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(() => {\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let selectedProp = response.body.result.selectedProperties;\n    if (selectedProp.length > 3) {\n      cy.dragAndDrop(`[data-rbd-draggable-id=\"${selectedProp[1]}\"]`, `[data-rbd-draggable-id=\"${selectedProp[2]}\"]`);\n      onesecondWait();\n      cyGet(lead.typeBtn).contains(\"Apply\").click();\n      cy.wait(\"@recordGrid\");\n      cy.wait(\"@recordGrid\").then(({\n        response\n      }) => {\n        expect(response.body.result.view.columns[1]).have.property(\"id\", selectedProp[2]);\n        expect(response.body.result.view.columns[2]).have.property(\"id\", selectedProp[1]);\n      });\n    } else {\n      this.skip();\n    }\n  });\n});",
              "err": {},
              "uuid": "90a3de43-d806-4211-81c7-f61fbffaa131",
              "parentUUID": "3bdb8833-fec0-454f-9d84-5506d985da74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Redirect on field setting page after clicking on \"manage field\" button",
              "fullTitle": "Nevigate the lead page and test grid view componet Redirect on field setting page after clicking on \"manage field\" button",
              "timedOut": null,
              "duration": 2048,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#fields').click();\ncyGet('#editCol').click();\ncyGet(`[data-testid=\"Manage fields\"]`).contains(\"Manage fields\").click();\ncy.url().should(\"eq\", `${updatedUrl}/setting/properties`);\ncyGet('.MuiTypography-caption').contains(`Fields store information about ${moduleName}.`);",
              "err": {},
              "uuid": "b5e0fb9b-3ccd-4a17-b599-a72f8d2673f7",
              "parentUUID": "3bdb8833-fec0-454f-9d84-5506d985da74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the detail page",
              "fullTitle": "Nevigate the lead page and test grid view componet Should redirected to the detail page",
              "timedOut": null,
              "duration": 3041,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@recordGrid\").then(({\n  response\n}) => {\n  const recordId = response.body.result.values[0].id;\n  const uidField = response.body.result.view.columns.find(ele => ele.prop === \"uid\");\n  const uidFieldValue = response.body.result.values[0][uidField.id];\n  cy.contains(`tr`, uidFieldValue).find(`td`).contains(uidFieldValue).click({\n    force: true\n  });\n  cy.url().should(\"contain\", `${updatedUrl}/${asset}s/${recordId}`);\n});",
              "err": {},
              "uuid": "5d602835-0a3a-48e5-a318-84e2977c3c70",
              "parentUUID": "3bdb8833-fec0-454f-9d84-5506d985da74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "565d0620-30cf-4f64-9c02-d4f756f3ed42",
            "b5f130c4-0ba9-4908-aa10-5ef980b8a0e4",
            "90a3de43-d806-4211-81c7-f61fbffaa131",
            "b5e0fb9b-3ccd-4a17-b599-a72f8d2673f7",
            "5d602835-0a3a-48e5-a318-84e2977c3c70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27442,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b1d1c6a1-9205-4033-9ab5-bfce899df5a6",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
      "file": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5125dc78-0134-4dc2-a770-96e585b73df5",
          "title": "Nevigate the lead page and test kanban view componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
          "file": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify uid field should be required and selected on kanban view",
              "fullTitle": "Nevigate the lead page and test kanban view componet Verify uid field should be required and selected on kanban view",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncy.wait(\"@kanbanViewConfig\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  getKanbanResult = response.body.result;\n  const uidField = getKanbanResult.values.find(ele => ele.required === true);\n  expect(uidField).has.property(\"label\", `${assetName} Id`);\n  expect(uidField).has.property(\"required\", true);\n  expect(uidField).has.property(\"selected\", true);\n  cyGet('[variant=\"standard\"] [type=\"search\"]').type(uidField === null || uidField === void 0 ? void 0 : uidField.label);\n  cyGet(lead.chkbxOnfieldConfig).first().should(\"be.checked\").and(\"be.disabled\");\n});",
              "err": {},
              "uuid": "c959535d-577e-496e-a7c5-714bf3b352fa",
              "parentUUID": "5125dc78-0134-4dc2-a770-96e585b73df5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Field on Kanban view if selected field less than 5",
              "fullTitle": "Nevigate the lead page and test kanban view componet Add Field on Kanban view if selected field less than 5",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\nconst selectedFields = getKanbanResult.selectedProperties;\nif (selectedFields.length < 5) {\n  const unselectedFields = getKanbanResult.values.find(ele => ele.selected === false);\n  cy.log(JSON.stringify(selectedFields));\n  cy.log(JSON.stringify(unselectedFields));\n  setFieldOnViewConfig('[variant=\"standard\"] [type=\"search\"]', unselectedFields === null || unselectedFields === void 0 ? void 0 : unselectedFields.label, lead.chkbxOnfieldConfig);\n  cyGet(lead.typeBtn).contains(\"Save\").click();\n} else {\n  cy.log(`5 field already selected`);\n}",
              "err": {},
              "uuid": "5f8de400-6e19-4ab3-bdd2-0943fb8db99b",
              "parentUUID": "5125dc78-0134-4dc2-a770-96e585b73df5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Field on Kanban view",
              "fullTitle": "Nevigate the lead page and test kanban view componet Remove Field on Kanban view",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet('[data-rbd-droppable-id=\"column\"]').children().then(childlength => {\n  let count = Cypress.$(childlength).length;\n  let nth = count - 1;\n  cy.log('option count: ', count);\n  cyGet(`[data-rbd-droppable-id=\"column\"] > :nth-child(${nth}) > :nth-child(1) > :nth-child(1) > :nth-child(2)`).click();\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();",
              "err": {},
              "uuid": "bf588218-5ca2-4a78-afd8-1c27993a6401",
              "parentUUID": "5125dc78-0134-4dc2-a770-96e585b73df5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Card style: Compact",
              "fullTitle": "Nevigate the lead page and test kanban view componet Card style: Compact",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet(`[name=\"compact\"]`).then($ele => {\n  if ($ele.is(':checked')) {\n    cy.log(`Compact already checked`);\n  } else {\n    cy.wrap($ele).check();\n  }\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\ncy.wait(\"@recordKanben\");\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.config).have.property(\"cardStyle\", \"compact\");\n});",
              "err": {},
              "uuid": "f64d8fb7-33df-4954-9c94-21259624a690",
              "parentUUID": "5125dc78-0134-4dc2-a770-96e585b73df5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Card style: Default",
              "fullTitle": "Nevigate the lead page and test kanban view componet Card style: Default",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet(`[name=\"default\"]`).then($ele => {\n  if ($ele.is(':checked')) {\n    cy.log(`Default already checked`);\n  } else {\n    cy.wrap($ele).check();\n  }\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\ncy.wait(1000);\ncy.wait(\"@recordKanben\");\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.config).have.property(\"cardStyle\", \"default\");\n});",
              "err": {},
              "uuid": "615863ff-1dbd-4f9e-ae66-52d3bb0ac4f5",
              "parentUUID": "5125dc78-0134-4dc2-a770-96e585b73df5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Re-order field on kanban view config page",
              "fullTitle": "Nevigate the lead page and test kanban view componet Re-order field on kanban view config page",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncy.wait(\"@kanbanViewConfig\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let selectedProp = response.body.result.selectedProperties;\n  expect(response.body.result.selectedProperties).be.length.greaterThan(2);\n  cy.dragAndDrop(`[data-rbd-draggable-id=\"${selectedProp[1]}\"]`, `[data-rbd-draggable-id=\"${selectedProp[2]}\"]`);\n  onesecondWait();\n  cyGet(lead.typeBtn).contains(\"Save\").click();\n  cy.wait(\"@recordKanben\");\n  cy.wait(\"@recordKanben\").then(({\n    response\n  }) => {\n    expect(response.body.result.config.fields[0]).have.property(\"id\", selectedProp[2]);\n    expect(response.body.result.config.fields[1]).have.property(\"id\", selectedProp[1]);\n  });\n});",
              "err": {},
              "uuid": "41af18a8-6ea8-4dd6-a796-9f5612bdbc85",
              "parentUUID": "5125dc78-0134-4dc2-a770-96e585b73df5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the create record form after clicking the \"Add Lead\" button",
              "fullTitle": "Nevigate the lead page and test kanban view componet Should redirected to the create record form after clicking the \"Add Lead\" button",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData = response.body.result.values[stageOnKanban[1]];\n  cyGet(`[data-rbd-draggable-id=\"${stageOnKanban[1]}\"] > :nth-child(1) > :nth-child(1)> :nth-child(1) > :nth-child(1)`).should(\"have.text\", stageData.label);\n  cyGet(`[data-rbd-draggable-id=\"${stageOnKanban[1]}\"] > :nth-child(1) > :nth-child(4) button`).click();\n  cy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").type(faker.string.numeric(10));\n  cy.componentLabel(lead.formLabel, \"Stage\", \"span\").should(\"have.text\", stageData.label);\n  cyGet(lead.saveBtn).click();\n  cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Created successfully.\");\n});",
              "err": {},
              "uuid": "e32b8992-c26d-4db7-a0c0-23df7ed37209",
              "parentUUID": "5125dc78-0134-4dc2-a770-96e585b73df5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Drag and drop an item one stage to another stage",
              "fullTitle": "Nevigate the lead page and test kanban view componet Drag and drop an item one stage to another stage",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[1]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cy.dragAndDrop(`[data-rbd-draggable-id=\"${itemId_1[0]}\"]`, `[data-rbd-draggable-id=\"${stageOnKanban[0]}\"]`);\n  cy.wait(1000);\n  cy.wait(\"@kanbanStage\").then(({\n    response\n  }) => {\n    expect(response.body).have.property(\"message\", \"Updated successfully.\");\n    expect(response.body.result.source).have.property(\"id\", stageOnKanban[1]);\n    expect(response.body.result.target).have.property(\"id\", stageOnKanban[0]);\n  });\n});",
              "err": {},
              "uuid": "7733be98-a057-4fa5-90ed-c0bcd1380653",
              "parentUUID": "5125dc78-0134-4dc2-a770-96e585b73df5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the detail page after clicking the \"edit\" button",
              "fullTitle": "Nevigate the lead page and test kanban view componet Should redirected to the detail page after clicking the \"edit\" button",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[0]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cyGet(`[data-rbd-draggable-id=\"${itemId_1[0]}\"] [aria-controls=\"more\"]`).click();\n  cyGet('[role=\"menu\"] > :nth-child(1) > li').first().find(\"span\").contains(\"Edit\").click();\n  cy.url().should(\"contain\", `${updatedUrl}/${asset}s/${itemId_1[0]}`);\n});",
              "err": {},
              "uuid": "cdc00aea-fa08-4bde-ab1b-ca2d1f1ae4d6",
              "parentUUID": "5125dc78-0134-4dc2-a770-96e585b73df5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete record from kanban view page",
              "fullTitle": "Nevigate the lead page and test kanban view componet delete record from kanban view page",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let dialogDecs = `Are you sure you want to delete this ${asset}?`;\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[0]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cyGet(`[data-rbd-draggable-id=\"${itemId_1[0]}\"] [aria-controls=\"more\"]`).click();\n  cyGet('[role=\"menu\"] > :nth-child(1) > li').last().find(\"span\").contains(\"Delete\").click();\n  cy.roleDialog(lead.dialogTitle, `Delete ${asset}`, lead.dialogDesc, dialogDecs, '#delete', \"Delete\");\n  cy.wait(\"@deleteRecord\").then(({\n    response\n  }) => {\n    expect(response.body).have.property(\"message\", \"Deleted successfully.\");\n  });\n});",
              "err": {},
              "uuid": "0843a46e-7d88-4648-832f-9f763fcadbca",
              "parentUUID": "5125dc78-0134-4dc2-a770-96e585b73df5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "c959535d-577e-496e-a7c5-714bf3b352fa",
            "5f8de400-6e19-4ab3-bdd2-0943fb8db99b",
            "bf588218-5ca2-4a78-afd8-1c27993a6401",
            "f64d8fb7-33df-4954-9c94-21259624a690",
            "615863ff-1dbd-4f9e-ae66-52d3bb0ac4f5",
            "41af18a8-6ea8-4dd6-a796-9f5612bdbc85",
            "e32b8992-c26d-4db7-a0c0-23df7ed37209",
            "7733be98-a057-4fa5-90ed-c0bcd1380653",
            "cdc00aea-fa08-4bde-ab1b-ca2d1f1ae4d6",
            "0843a46e-7d88-4648-832f-9f763fcadbca"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0c56c891-70fd-49d7-94c2-7d80654da08d",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
      "file": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8daecaa4-043a-401b-b353-45c12ec953c4",
          "title": "Nevigate the setting page and delete and restore field",
          "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
          "file": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete or detach a field and verify that it is stored in the deleted field section",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete or detach a field and verify that it is stored in the deleted field section",
              "timedOut": null,
              "duration": 9642,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${updatedUrl}/setting/properties`);\n// cy.visit(`${Cypress.env(\"lmsUrl\")}/setting/properties`)\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const nonSystemFields = response.body.result.values.filter(field => field.system === false);\n  // cy.log(JSON.stringify(nonSystemFields))\n  let fieldData = nonSystemFields.slice(-1);\n  // cy.log(JSON.stringify(fieldData))\n  let attachedCount = nonSystemFields[0].attachedCount.count;\n  if (attachedCount <= 1) {\n    (0, _global.fieldSearchAndAct)(fieldData[0].label, \"#delete\");\n    cy.get(\"#delete\").click();\n  } else {\n    (0, _global.fieldSearchAndAct)(fieldData[0].label, \"#detach\");\n    cy.get(\"#detach\").click();\n  }\n  cy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n    timeout: 10000\n  }).contains(\"Deleted fields\").click();\n  cy.wait(\"@binList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let binField = response.body.result.values.map(ele => ele.label);\n    cy.log(JSON.stringify(binField));\n    // if (response.body.result.pages.totalNoOfPages == 1) {\n    //     expect(binField.slice(-1)).to.be.contains(fieldData[0].label)\n    // } else {\n    //     cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click()\n    //     cy.wait(\"@binList\", { timeout: 10000 }).then(({ response }) => {\n    //         let binField = response.body.result.values.map(ele => ele.label)\n    //         expect(binField.slice(-1)).to.be.contains(fieldData[0].label)\n    //     })\n    // }\n  });\n});",
              "err": {},
              "uuid": "9b4aea4e-1b49-4699-b903-6b4e07d926bf",
              "parentUUID": "8daecaa4-043a-401b-b353-45c12ec953c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore field from field tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Restore field from field tab",
              "timedOut": null,
              "duration": 2693,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Restore 1 field ?\";\nlet desc = \"Are you sure you want to  restore 1 field ?\";\ncy.visit(`${updatedUrl}/setting/properties`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Deleted fields\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#restore\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[data-testid=\"Restore\"]`, \"Restore\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:77:58)",
                "diff": ""
              },
              "uuid": "fe3c13be-82d8-45bf-bfba-a4592fe86d78",
              "parentUUID": "8daecaa4-043a-401b-b353-45c12ec953c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete field from field tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete field from field tab",
              "timedOut": null,
              "duration": 2047,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Delete 1 field ?\";\nlet desc = \"Are you sure you want to  delete 1 field ?\";\ncy.visit(`${updatedUrl}/setting/properties`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Deleted fields\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#delete\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:90:58)",
                "diff": ""
              },
              "uuid": "1bd590ae-640d-4bf4-a53a-6d8dd7ca2a9e",
              "parentUUID": "8daecaa4-043a-401b-b353-45c12ec953c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter single line field and verify column with rows us",
              "fullTitle": "Nevigate the setting page and delete and restore field Filter single line field and verify column with rows us",
              "timedOut": null,
              "duration": 4819,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.recordCountOnPage(\"10\");\ncy.get('[aria-label=\"Select field type\"]').click();\nfieldTypeFilterSel(\"Multi line text\");\ncy.get('.MuiButton-endIcon').click();\ncy.wait(\"@binList\");\ncy.wait(\"@binList\");\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  let binFieldLabel = response.body.result.values.map(ele => ele.label);\n  let deletedType = response.body.result.values.map(ele => {\n    return ele.type.charAt(0).toUpperCase() + ele.type.slice(1);\n  });\n  let deletedBy = response.body.result.values.map(ele => ele.deletedBy);\n  let userName = deletedBy.map(key => {\n    let label = key.label;\n    return label;\n  });\n  let fieldTypeArray = Array(binFieldLabel.length).fill(\"Multi line text\");\n  verifyTablecolNrow(lead.thead, 2, \"Field name\", lead.tbody, binFieldLabel);\n  verifyTablecolNrow(lead.thead, 3, \"Field type\", lead.tbody, fieldTypeArray);\n  verifyTablecolNrow(lead.thead, 4, \"Deleted by\", lead.tbody, userName);\n  verifyTablecolNrow(lead.thead, 5, \"Deleted type\", lead.tbody, deletedType);\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:107:58)",
                "diff": ""
              },
              "uuid": "0f56157d-a306-4237-99cc-6731920ef094",
              "parentUUID": "8daecaa4-043a-401b-b353-45c12ec953c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore field from bin tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Restore field from bin tab",
              "timedOut": null,
              "duration": 1564,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Restore 1 field ?\";\nlet desc = \"Are you sure you want to restore 1 field ? \";\ncy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#restore\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Restore\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:131:58)",
                "diff": ""
              },
              "uuid": "dfd28696-ed8f-4063-bedd-826855b54bb0",
              "parentUUID": "8daecaa4-043a-401b-b353-45c12ec953c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete field from bin tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete field from bin tab",
              "timedOut": null,
              "duration": 2080,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Delete 1  field ?\";\nlet desc = \"Are you sure you want to delete 1 field ? \";\ncy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#delete\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:144:58)",
                "diff": ""
              },
              "uuid": "328d414e-f6c7-412f-b981-ce081b9a2de3",
              "parentUUID": "8daecaa4-043a-401b-b353-45c12ec953c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b4aea4e-1b49-4699-b903-6b4e07d926bf"
          ],
          "failures": [
            "fe3c13be-82d8-45bf-bfba-a4592fe86d78",
            "1bd590ae-640d-4bf4-a53a-6d8dd7ca2a9e",
            "0f56157d-a306-4237-99cc-6731920ef094",
            "dfd28696-ed8f-4063-bedd-826855b54bb0",
            "328d414e-f6c7-412f-b981-ce081b9a2de3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 22845,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1441a6d9-29b2-4cf1-890b-2d7512cabfcf",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
      "file": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "baac7ba2-16f2-4da3-9c6b-cdad7115bf21",
          "title": "Test the functionality of restore contact from bin",
          "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
          "file": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check if the Cancel button is working when restoring contact from bin",
              "fullTitle": "Test the functionality of restore contact from bin Check if the Cancel button is working when restoring contact from bin",
              "timedOut": null,
              "duration": 6207,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(lead.typeBtn).contains(\"Delete\").should(\"be.disabled\");\ncy.get(lead.typeBtn).contains(\"Restore\").should(\"be.disabled\");\ncy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  uidFeild = response.body.result.view.columns.find(fld => fld.prop === \"uid\");\n  const msg1 = `Restore ${recordLength} ${asset} ?`;\n  const msg2 = `Are you sure you want to restore ${recordLength} ${asset} ? `;\n  if (totalRecord === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(totalRecord).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Restore\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, lead.typeBtn, \"Cancel\");\n    cy.wait(500);\n    cy.get(lead.countOnGrid).contains(totalRecord);\n  }\n});",
              "err": {},
              "uuid": "e716ab63-9042-4a17-8a68-090d24e1f51c",
              "parentUUID": "baac7ba2-16f2-4da3-9c6b-cdad7115bf21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore the contact from bin",
              "fullTitle": "Test the functionality of restore contact from bin Restore the contact from bin",
              "timedOut": null,
              "duration": 1425,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  let msg1 = `Restore ${recordLength} lead ?`;\n  let msg2 = `Are you sure you want to restore ${recordLength} lead ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Restore\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `.MuiDialogActions-root ${lead.typeBtn}`, \"Restore\");\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Request successful.\");\n    cy.get(lead.countOnGrid).contains(remainsRecord);\n  }\n});",
              "err": {},
              "uuid": "b8b8190a-eeb8-47bf-b97e-c7dfe78518e9",
              "parentUUID": "baac7ba2-16f2-4da3-9c6b-cdad7115bf21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check if the Cancel button is working when deleting contact from bin",
              "fullTitle": "Test the functionality of restore contact from bin Check if the Cancel button is working when deleting contact from bin",
              "timedOut": null,
              "duration": 1417,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let msg1 = `Delete ${recordLength} ${asset} ?`;\n  let msg2 = `Are you sure you want to delete ${recordLength} ${asset} ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, lead.typeBtn, \"Cancel\");\n    cy.wait(500);\n    cy.get(lead.countOnGrid).contains(totalRecord);\n  }\n});",
              "err": {},
              "uuid": "08a52f09-961f-465a-82cd-f833984e63d8",
              "parentUUID": "baac7ba2-16f2-4da3-9c6b-cdad7115bf21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the contact from bin",
              "fullTitle": "Test the functionality of restore contact from bin Delete the contact from bin",
              "timedOut": null,
              "duration": 1417,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  let msg1 = `Delete ${recordLength} ${asset} ?`;\n  let msg2 = `Are you sure you want to delete ${recordLength} ${asset} ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Deleted successfully.\");\n    cy.get(lead.countOnGrid).contains(remainsRecord);\n  }\n});",
              "err": {},
              "uuid": "21c803f8-672f-4871-8a76-3f34006a74dd",
              "parentUUID": "baac7ba2-16f2-4da3-9c6b-cdad7115bf21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e716ab63-9042-4a17-8a68-090d24e1f51c",
            "b8b8190a-eeb8-47bf-b97e-c7dfe78518e9",
            "08a52f09-961f-465a-82cd-f833984e63d8",
            "21c803f8-672f-4871-8a76-3f34006a74dd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10466,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[datetime]",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "Buopso-UI-Report",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "reportFilename": "[datetime]",
        "timestamp": "isoDateTime",
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\.jsons",
        "saveJson": true
      },
      "version": "6.2.0"
    }
  }
}