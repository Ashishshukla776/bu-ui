{
  "stats": {
    "suites": 45,
    "tests": 193,
    "passes": 149,
    "pending": 7,
    "failures": 36,
    "testsRegistered": 193,
    "passPercent": 77.20207253886011,
    "pendingPercent": 3.626943005181347,
    "other": 0,
    "hasOther": false,
    "skipped": 1,
    "hasSkipped": true,
    "start": "2025-07-24T12:28:27.346Z",
    "end": "2025-07-24T13:00:48.149Z",
    "duration": 1940803
  },
  "results": [
    {
      "uuid": "e6940792-0177-42b8-819f-40bc00c0014e",
      "title": "",
      "fullFile": "cypress\\e2e\\auth\\login.js",
      "file": "cypress\\e2e\\auth\\login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b9f51d30-ffa6-4614-b1bd-2f666b3bbdc6",
          "title": "Test case for login",
          "fullFile": "cypress\\e2e\\auth\\login.js",
          "file": "cypress\\e2e\\auth\\login.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Pass invalid email",
              "fullTitle": "Test case for login Pass invalid email",
              "timedOut": null,
              "duration": 2770,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(\"abc.xyzgmail.com\");\n  cy.get('.MuiFormHelperText-root').should(\"contain\", \"Please provide proper username\");\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Please enter a valid email.\");",
              "err": {},
              "uuid": "cb0907ee-d01a-4158-b544-8787a4297469",
              "parentUUID": "b9f51d30-ffa6-4614-b1bd-2f666b3bbdc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass wrong email",
              "fullTitle": "Test case for login Pass wrong email",
              "timedOut": null,
              "duration": 955,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(\"abc@xyx.com\");\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"user not found.\");",
              "err": {},
              "uuid": "f9fe051e-c141-4b39-b6d3-28e0e989c082",
              "parentUUID": "b9f51d30-ffa6-4614-b1bd-2f666b3bbdc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass invalid password",
              "fullTitle": "Test case for login Pass invalid password",
              "timedOut": null,
              "duration": 1900,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(Cypress.env(\"email\"));\n  cy.get(\"@password\").type(132134344);\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Invalid username or password.\");",
              "err": {},
              "uuid": "0b580f5f-82ad-4786-9881-48f5882febd6",
              "parentUUID": "b9f51d30-ffa6-4614-b1bd-2f666b3bbdc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass wrong password",
              "fullTitle": "Test case for login Pass wrong password",
              "timedOut": null,
              "duration": 2248,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(Cypress.env(\"email\"));\n  cy.get(\"@password\").type(\"AAsdf1234\");\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Invalid username or password.\");",
              "err": {},
              "uuid": "2e171d10-36b6-46a7-8992-f236af9cf73b",
              "parentUUID": "b9f51d30-ffa6-4614-b1bd-2f666b3bbdc6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass the valid email in upper-case",
              "fullTitle": "Test case for login Pass the valid email in upper-case",
              "timedOut": null,
              "duration": 4668,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let email = Cypress.env(\"email\").toUpperCase();\ncy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(email);\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.wait(\"@loginApi\").then(({\n  response\n}) => {\n  if (response.body.result === \"session_exists\") {\n    cy.get('[role=\"presentation\"] .MuiDialog-container .MuiPaper-root button').contains(\"Ok\").click();\n  }\n});\ncy.get('[aria-label=\"User Profile\"] > .MuiButtonBase-root').click();\ncy.get('.MuiPaper-root .MuiTypography-root').contains(\"Sign out\").click();",
              "err": {},
              "uuid": "dd796e65-35fc-421c-b845-f497bb110f17",
              "parentUUID": "b9f51d30-ffa6-4614-b1bd-2f666b3bbdc6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cb0907ee-d01a-4158-b544-8787a4297469",
            "f9fe051e-c141-4b39-b6d3-28e0e989c082",
            "0b580f5f-82ad-4786-9881-48f5882febd6",
            "2e171d10-36b6-46a7-8992-f236af9cf73b",
            "dd796e65-35fc-421c-b845-f497bb110f17"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12541,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4353e141-50e6-47b5-8059-f127766d4bbb",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\allSoftware.js",
      "file": "cypress\\e2e\\one\\allSoftware.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2e450de6-743d-4f35-9d3d-0a30e04ebd4d",
          "title": "Test case for allSoftware",
          "fullFile": "cypress\\e2e\\one\\allSoftware.js",
          "file": "cypress\\e2e\\one\\allSoftware.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Asset : Lead Management Software(lms)",
              "fullTitle": "Test case for allSoftware Asset : Lead Management Software(lms)",
              "timedOut": null,
              "duration": 5717,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let lmsDes = 'Efficiently manage and assign lead information.';\ncy.Modules(`#lms ${one.moduleNameID}`, _helper.modules.lms, `#lms ${one.moduleDescID}`, lmsDes, `#lms ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.lms);",
              "err": {},
              "uuid": "f23779a1-271f-4b58-95d2-ca486e44db1d",
              "parentUUID": "2e450de6-743d-4f35-9d3d-0a30e04ebd4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Customer relationship management Software(crm)",
              "fullTitle": "Test case for allSoftware Asset : Customer relationship management Software(crm)",
              "timedOut": null,
              "duration": 2218,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let crmDes = 'Drive sales success, build stronger client relationships, and grow revenue with our CRM.';\ncy.Modules(`#crm  ${one.moduleNameID}`, _helper.modules.crm, `#crm  ${one.moduleDescID}`, crmDes, `#crm  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.crm);",
              "err": {},
              "uuid": "05354c1e-0433-4573-a043-2804452f60d2",
              "parentUUID": "2e450de6-743d-4f35-9d3d-0a30e04ebd4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Approval Management Software(cnf)",
              "fullTitle": "Test case for allSoftware Asset : Approval Management Software(cnf)",
              "timedOut": null,
              "duration": 2402,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let aprDes = 'The approver can approve public and private data as required.';\ncy.Modules(`#cnf  ${one.moduleNameID}`, _helper.modules.apr, `#cnf  ${one.moduleDescID}`, aprDes, `#cnf ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.apr);",
              "err": {},
              "uuid": "815e3473-e4d0-4d3e-8e15-4e62064801b6",
              "parentUUID": "2e450de6-743d-4f35-9d3d-0a30e04ebd4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Buopso Form",
              "fullTitle": "Test case for allSoftware Asset : Buopso Form",
              "timedOut": null,
              "duration": 2444,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let formsDes = 'Build your form as required and gather the form data.';\ncy.Modules(`#forms  ${one.moduleNameID}`, _helper.modules.buForms, `#forms  ${one.moduleDescID}`, formsDes, `#forms  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.buForms);",
              "err": {},
              "uuid": "eae6fe81-775b-4857-b119-5c11c8cbe41c",
              "parentUUID": "2e450de6-743d-4f35-9d3d-0a30e04ebd4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Task Management",
              "fullTitle": "Test case for allSoftware Asset : Task Management",
              "timedOut": null,
              "duration": 2351,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let taskDes = 'Task management system. Manage task records and assign tasks to the user.';\ncy.Modules(`#task  ${one.moduleNameID}`, _helper.modules.taskManagement, `#task  ${one.moduleDescID}`, taskDes, `#task  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.taskManagement);",
              "err": {},
              "uuid": "30cece20-6431-4614-b9f0-bef7e46da0d1",
              "parentUUID": "2e450de6-743d-4f35-9d3d-0a30e04ebd4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Invoice",
              "fullTitle": "Test case for allSoftware Asset : Invoice",
              "timedOut": null,
              "duration": 3524,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let InvoiceDes = 'Invoice for customers and manage payment and ledger history.';\ncy.Modules(`#invoice ${one.moduleNameID}`, _helper.modules.invoice, `#invoice  ${one.moduleDescID}`, InvoiceDes, `#invoice ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.invoice);",
              "err": {},
              "uuid": "50ea2e5f-f643-471c-850a-df0bfa8799bd",
              "parentUUID": "2e450de6-743d-4f35-9d3d-0a30e04ebd4d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f23779a1-271f-4b58-95d2-ca486e44db1d",
            "05354c1e-0433-4573-a043-2804452f60d2",
            "815e3473-e4d0-4d3e-8e15-4e62064801b6",
            "eae6fe81-775b-4857-b119-5c11c8cbe41c",
            "30cece20-6431-4614-b9f0-bef7e46da0d1",
            "50ea2e5f-f643-471c-850a-df0bfa8799bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18656,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a40f4733-7af6-463e-ae0a-e253e6fe9607",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\addUser.js",
      "file": "cypress\\e2e\\one\\myAccount\\addUser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f912d0a0-2938-4d4d-a4e9-c1740e518fc7",
          "title": "Add User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\addUser.js",
          "file": "cypress\\e2e\\one\\myAccount\\addUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test with a valid unique Valid email",
              "fullTitle": "Add User functionality test Test with a valid unique Valid email",
              "timedOut": null,
              "duration": 9444,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('[placeholder=\"Email id\"]').type(uniqueEmail);\ncy.contains(\"Select permission template\").click();\ncy.wait(\"@getTemplate\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let teplateName = response.body.result.values.map(ele => ele.label);\n  // cy.log(teplateName)\n  cy.wrap(teplateName).as(\"templates\");\n  if (response.body.result.values.length > 0) {\n    cy.assetDropdownSel(teplateName[0]).should(\"have.text\", teplateName[0]);\n  }\n  customElements;\n});\ncyGet(\"@templates\").then(response => {\n  templateLabel = response;\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\n// cy.pause()\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.requestSuccess);",
              "err": {},
              "uuid": "c4dddd0d-f542-40de-930f-1a304781931f",
              "parentUUID": "f912d0a0-2938-4d4d-a4e9-c1740e518fc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with a invalid email",
              "fullTitle": "Add User functionality test Test with a invalid email",
              "timedOut": null,
              "duration": 2606,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let randomString_1 = Math.random().toString(36).substring(2, 11);\nlet uniqueEmail_1 = `testuser${randomString_1}example.com`;\ncy.get('[placeholder=\"Email id\"]').type(uniqueEmail_1);\ncy.contains(\"Select permission template\").click();\ncy.get('[data-testid=\"chipinput-chip-nkx7xamrs\"]').trigger('mouseover');\ncy.wait(500);\ncy.get('.MuiTooltip-tooltip').should('have.text', 'Email is not valid.');",
              "err": {},
              "uuid": "a48d9b0f-6e0a-4a7c-b71f-b79ff61ba6e0",
              "parentUUID": "f912d0a0-2938-4d4d-a4e9-c1740e518fc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with a Exist email",
              "fullTitle": "Add User functionality test Test with a Exist email",
              "timedOut": null,
              "duration": 2337,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"Email id\"]').type(uniqueEmail);\ncy.contains(\"Select permission template\").click();\ncy.get('[data-testid=\"chipinput-chip-nkx7xamrs\"]').trigger('mouseover');\ncy.get('.MuiTooltip-tooltip').should('have.text', 'User already exist.');\ncy.get(lead.typeBtn).contains(\"Save\").should(\"be.disabled\");",
              "err": {},
              "uuid": "5256b5bb-1906-47ed-b75a-3cf9b51f50be",
              "parentUUID": "f912d0a0-2938-4d4d-a4e9-c1740e518fc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test For addTemplate from Add user page",
              "fullTitle": "Add User functionality test Test For addTemplate from Add user page",
              "timedOut": null,
              "duration": 1853,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//  cy.componentLabel(lead.formLabel, \"Select permission template\", \"button\").click()\ncy.get('[data-testid=\"button-typography-8x5inumxs\"]').first().click(); //select the template\n// cy.assetDropdownSel(templateLabel[0]).click()\ncy.get('[data-testid=\"dropdown-footer\"]').contains('Add template').click(); // add new template\n// cy.contains('Add template').click();\ncy.url().should('eq', `${Cypress.env(\"url\")}/template`);\ncy.contains('Create').should('be.visible').should('not.be.disabled').click();",
              "err": {},
              "uuid": "53ac3237-3843-4137-9605-8285c8d977e6",
              "parentUUID": "f912d0a0-2938-4d4d-a4e9-c1740e518fc7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c4dddd0d-f542-40de-930f-1a304781931f",
            "a48d9b0f-6e0a-4a7c-b71f-b79ff61ba6e0",
            "5256b5bb-1906-47ed-b75a-3cf9b51f50be",
            "53ac3237-3843-4137-9605-8285c8d977e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16240,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6af46746-413a-4b7a-9327-2d7dda23308e",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
      "file": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1bee9fba-5197-4bbb-8238-428edfeffc0f",
          "title": "Manage User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
          "file": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check system default required field should be already required and should not be changeable  ",
              "fullTitle": "Manage User functionality test Check system default required field should be already required and should not be changeable  ",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.get('[placeholder=\"search....\"]').type(uniqueTemplateName);\ncy.get('table> tbody').children(\"tr\").contains(uniqueTemplateName).next().click();\ncy.get(\"#edit\").click();\ncy.wait(1000);\ncy.get('input[placeholder=\"Enter template name\"]').clear().type(uniqueTemplateNameupdated);\ncy.get('[role=\"list\"] [type=\"button\"]').click();\ncy.wait('@getPipelines', {\n  timeout: 10000\n}).then(interception => {\n  const responseBody = interception.response.body;\n  const leadName = responseBody.result.values[0].label;\n  cy.get(`${lead.chooseOptions} > :nth-child(2)`).click();\n  cy.contains(leadName).click();\n  cy.get('[data-testid=\"recordaccesstable-tablebody-circtrpwp\"] > [data-testid=\"ownershiprow-tablerow-6gy8mx6fe\"] > :nth-child(4) > [data-testid=\"ownershiprow-checkbox-y6wgiibo8\"] > .PrivateSwitchBase-input');\n  cy.get('[data-testid=\"ownershiprow-tablecell-jgp2w36xa\"] button').eq(1).click();\n  cy.wait(\"@tempFieldsList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const fieldLabel = response.body.result.values.map(ele => ele.label);\n    const fieldId = response.body.result.values.map(ele => ele.id);\n    cy.log(fieldLabel[0]);\n    cy.get('input[placeholder=\"Search...\"]').type(fieldLabel[0]);\n    cy.get(`[data-rbd-draggable-id=\"${fieldId[0]}\"] > .MuiGrid-root > :nth-child(2) > :nth-child(1) button`).click();\n    cy.contains('Required').should('have.class', 'Mui-disabled');\n    cy.get('[data-testid=\"bupopper-dialogactions-0zh9xps0l\"]').find('[data-testid=\"Cancel\"]').click();\n    cy.get('#send').click();\n    cy.get(lead.typeBtn).contains(\"Save\").click();\n  });\n  // })\n});",
              "err": {},
              "uuid": "baf4537a-7cae-45b7-ae9e-ea69e79a9471",
              "parentUUID": "1bee9fba-5197-4bbb-8238-428edfeffc0f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "86c48eb6-3a78-4f71-a37c-ae62cedaae54",
              "title": "Add Template",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify the selected software and available softwares on the Create Template page",
                  "fullTitle": "Manage User functionality test Add Template Verify the selected software and available softwares on the Create Template page",
                  "timedOut": null,
                  "duration": 7665,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncyGet(globalSel.createtestid).contains(\"Create\").click();\ncy.wait(\"@modulePermission\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const [firstModule, ...availableModules] = response.body.result.add;\n  cyGet(`[data-testid=\"permissionsoftwarelist-typography-ftrzexyr7\"]`).should(\"contain.text\", \"Selected software\");\n  cyGet(`[data-testid=\"permissionsoftwarelist-menulist-aafxej4yj\"]`).first().find('[data-testid=\"permissionsoftwarelist-typography-zackmqq0q\"]').should('contain.text', formatModuleName(firstModule)); // e.g. Lead Management\n  availableModules.forEach(module => {\n    cyGet('[data-testid=\"permissionsoftwarelist-menulist-2qkcm4j30\"]').find(`[data-testid=\"permissionsoftwarelist-typography-86cpoqkhp\"]`).should('contain.text', formatModuleName(module));\n  });\n});",
                  "err": {},
                  "uuid": "686e9fbb-4a77-46a5-8ad1-ae728782254b",
                  "parentUUID": "86c48eb6-3a78-4f71-a37c-ae62cedaae54",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Add user template",
                  "fullTitle": "Manage User functionality test Add Template Add user template",
                  "timedOut": null,
                  "duration": 9824,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncyGet(globalSel.createtestid).contains(\"Create\").click();\n// Fill template name\nbutextField(`[data-testid=\"index-textfield-fm1l89cxe\"]`, `label`).contains(\"Template name\");\nbutextField(`[data-testid=\"index-textfield-fm1l89cxe\"]`, `input[placeholder=\"Enter template name\"]`).type(uniqueTemplateName);\n// Open dropdown and select pipeline\nbudropdown(`[data-testid=\"managepermission-stack-m3in09ace\"] > :first`, `[data-testid=\"button-typography-8x5inumxs\"]`, `Select Pipeline`);\ncy.wait(\"@getPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pipelines = response.body.result.values.map(ele => ele.label);\n  const firstPipeline = pipelines[0];\n  // Search if more than 5 pipelines\n  if (pipelines.length > 5) {\n    buSearchbox(globalSel.search, firstPipeline);\n  }\n  budropdownOption(firstPipeline).first().click();\n  // Verify ownership permissions UI\n  cyGet('[data-testid=\"ownershiprow-iconbutton-ph6ah241c\"]').click();\n  cy.contains('thead', 'Permission');\n  cy.contains('thead', 'Owner only');\n  cy.contains('thead', 'Everything');\n  cy.contains('thead', 'Select fields');\n  cy.contains('tr', firstPipeline);\n  // View permission should be checked and disabled\n  cy.contains('tr', 'View').find('input[type=\"checkbox\"]').eq(0).should('be.checked').and('be.disabled');\n  // Save\n  buSaveButton().click();\n});",
                  "err": {},
                  "uuid": "f927c053-e0ef-49b0-975a-b8c2418e611c",
                  "parentUUID": "86c48eb6-3a78-4f71-a37c-ae62cedaae54",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "686e9fbb-4a77-46a5-8ad1-ae728782254b",
                "f927c053-e0ef-49b0-975a-b8c2418e611c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17489,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a740bd45-4418-4f5c-b9e4-27217fce3379",
              "title": "Assign and Edit Template",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Assign Template to user",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Assign Template to user",
                  "timedOut": null,
                  "duration": 13494,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageUsers`);\ncy.wait(\"@userGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _user, _user2;\n  user = response.body.result.values.find(ele => ele.role === \"std\");\n  if (!user) {\n    this.skip();\n  }\n  cy.intercept('GET', `**/crew/users//${user.id}`).as('getUserById');\n  cyGet(`[data-testid=\"activitybar-textfield-8eiuz4v4a\"] input`).type((_user = user) === null || _user === void 0 ? void 0 : _user.label);\n  onesecondWait();\n  cy.contains('tr', (_user2 = user) === null || _user2 === void 0 ? void 0 : _user2.label).find(`[data-testid=\"Action\"]`).click();\n  cyGet(\"#edit\").click({\n    force: true\n  });\n  twosecondWait();\n  cy.wait(\"@getUserById\").then(({\n    response\n  }) => {\n    const assignedTemplate = response.body.result.profile.template.label;\n    cyGet(`[data-testid=\"chipinput-iconbutton-ycchky4nm\"]`).click();\n    cy.wait(\"@getTempalte\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalTemplates = response.body.result.pages.totalRecords;\n      const templates = response.body.result.values.map(ele => ele.label);\n      if (assignedTemplate === \"No template\") {\n        userTemplate = templates[0];\n        if (totalTemplates > 5) {\n          buSearchbox(globalSel.search, userTemplate);\n        }\n        budropdownOption(userTemplate, `[data-testid=\"buchip-chip-5r51zm55o\"]`).click();\n      } else {\n        userTemplate = templates.find(ele => ele !== assignedTemplate);\n        if (totalTemplates > 5) {\n          buSearchbox(globalSel.search, userTemplate);\n        }\n        budropdownOption(userTemplate, `[data-testid=\"buchip-chip-5r51zm55o\"]`).click();\n      }\n      twosecondWait();\n      buSaveButton().click();\n      cyGet('.MuiSnackbarContent-message').should(\"contain.text\", \"User Permissions Updated\");\n      logout();\n      // cy.clearCookies();\n    });\n  });\n});",
                  "err": {},
                  "uuid": "6e13ac39-18ca-47b4-bb97-4d3ed0d7ad54",
                  "parentUUID": "a740bd45-4418-4f5c-b9e4-27217fce3379",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to create a record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to create a record.",
                  "timedOut": null,
                  "duration": 15820,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user3;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const create = recordPermission.create;\n  setPermissionOnRoleSwitch(create, false, \"Create\", 0);\n  // Login with standard user\n  cy.login((_user3 = user) === null || _user3 === void 0 ? void 0 : _user3.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Create Lead\"]`).should(\"not.be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "c12a1bf8-b2e6-4d06-b7ac-3de3bf4fdb5f",
                  "parentUUID": "a740bd45-4418-4f5c-b9e4-27217fce3379",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to import the record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to import the record.",
                  "timedOut": null,
                  "duration": 4920,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user4;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const imp = recordPermission.import;\n  setPermissionOnRoleSwitch(imp, false, \"Import\", 0);\n  // Login with standard user\n  cy.login((_user4 = user) === null || _user4 === void 0 ? void 0 : _user4.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Import\"]`).should(\"not.be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading 'id')",
                    "estack": "TypeError: Cannot read properties of undefined (reading 'id')\n    at Context.eval (webpack://bu-testing/./cypress/helpers/permissions.js:9:57)",
                    "diff": null
                  },
                  "uuid": "fa4ef3a5-77c3-4c83-8a8f-20953fd8f59f",
                  "parentUUID": "a740bd45-4418-4f5c-b9e4-27217fce3379",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to activity of record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to activity of record.",
                  "timedOut": null,
                  "duration": 28278,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user5;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const activity = recordPermission.activity;\n  setPermissionOnRoleSwitch(activity, false, \"Activity\", 0);\n  // Login with standard user\n  cy.login((_user5 = user) === null || _user5 === void 0 ? void 0 : _user5.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"buelementgroup-box-n1f8dc7ag\"] [aria-label=\"Split view\"]`).click();\n  cyGet(`[data-testid=\"communicationbar-box-951cbwqi4\"]`).find(`[aria-label=\"Activities\"]`);\n  logout();\n  cy.clearCookies();\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"buelementgroup-box-n1f8dc7ag\"] [aria-label=\"Split view\"]`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"buelementgroup-box-n1f8dc7ag\"] [aria-label=\"Split view\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:10:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/one/myAccount/manageTemplate.js:192:8)",
                    "diff": null
                  },
                  "uuid": "d3cf37b5-ae27-4ca9-9ca3-24de05703a81",
                  "parentUUID": "a740bd45-4418-4f5c-b9e4-27217fce3379",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to Whatsapp.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to Whatsapp.",
                  "timedOut": null,
                  "duration": 33415,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user6;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const wa = recordPermission.wa;\n  setPermissionOnRoleSwitch(wa, false, \"Whatsapp\", 0);\n  // Login with standard user\n  cy.login((_user6 = user) === null || _user6 === void 0 ? void 0 : _user6.email);\n  // twosecondWait()\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"buelementgroup-box-n1f8dc7ag\"] [aria-label=\"Split view\"]`).click();\n  cyGet('[data-testid=\"communicationbar-box-951cbwqi4\"]').find(`[aria-label=\"Whatsapp\"]`);\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "e8d36ad4-afd0-49ab-813d-1ea2f6af8c79",
                  "parentUUID": "a740bd45-4418-4f5c-b9e4-27217fce3379",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has not permission to create a record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has not permission to create a record.",
                  "timedOut": null,
                  "duration": 25069,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user7;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const create = recordPermission.create;\n  setPermissionOnRoleSwitch(create, true, \"Create\", 0);\n  // Login with standard user\n  cy.login((_user7 = user) === null || _user7 === void 0 ? void 0 : _user7.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Create Lead\"]`).should(\"be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "d2f69f16-f3fc-49ba-901e-d645d3f60f99",
                  "parentUUID": "a740bd45-4418-4f5c-b9e4-27217fce3379",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has not permission to import the record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has not permission to import the record.",
                  "timedOut": null,
                  "duration": 27779,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user8;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const imp = recordPermission.import;\n  setPermissionOnRoleSwitch(imp, true, \"Import\", 0);\n  // Login with standard user\n  cy.login((_user8 = user) === null || _user8 === void 0 ? void 0 : _user8.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Import\"]`).should(\"be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "f7e1e3d7-f251-4db7-a4f2-9fed1cd72436",
                  "parentUUID": "a740bd45-4418-4f5c-b9e4-27217fce3379",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6e13ac39-18ca-47b4-bb97-4d3ed0d7ad54",
                "c12a1bf8-b2e6-4d06-b7ac-3de3bf4fdb5f",
                "e8d36ad4-afd0-49ab-813d-1ea2f6af8c79",
                "d2f69f16-f3fc-49ba-901e-d645d3f60f99",
                "f7e1e3d7-f251-4db7-a4f2-9fed1cd72436"
              ],
              "failures": [
                "fa4ef3a5-77c3-4c83-8a8f-20953fd8f59f",
                "d3cf37b5-ae27-4ca9-9ca3-24de05703a81"
              ],
              "pending": [],
              "skipped": [],
              "duration": 148775,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6ffa7a65-bba9-44d5-902c-49d6288deac9",
              "title": "Delete TemPlate functionality",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete Template",
                  "fullTitle": "Manage User functionality test Delete TemPlate functionality Delete Template",
                  "timedOut": null,
                  "duration": 20152,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let msg1 = \"Delete template\";\nlet msg2 = \"Are you sure you want to delete this Template ?\";\ncy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncy.wait(\"@templateGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const unAssignedTemplate = response.body.result.values.filter(ele => ele.assignedTo.length === 0);\n  if (unAssignedTemplate.length > 0) {\n    cyGet(`[data-testid=\"templatelist-textfield-e9dj43sha\"] input`).type(unAssignedTemplate[0].label);\n    cy.contains('tr', unAssignedTemplate[0].label).find(`[data-testid=\"Action\"]`).click();\n    cyGet(\"#delete\").click();\n    buCaption(`[role=\"dialog\"]`, `#customized-dialog-title p`, msg1, `[role=\"dialog\"] [data-testid=\"deletetemplate-typography-5sxlboqg8\"]`, msg2);\n    cyGet(`[data-testid=\"Delete\"]`).click();\n  } else {\n    cy.log(`Teplate not available for delete`);\n  }\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `#delete`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `#delete`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:10:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/one/myAccount/manageTemplate.js:294:10)",
                    "diff": null
                  },
                  "uuid": "e6075f9d-0906-4584-a1bb-595a02c58ff4",
                  "parentUUID": "6ffa7a65-bba9-44d5-902c-49d6288deac9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Assigned Tempale should not be delete",
                  "fullTitle": "Manage User functionality test Delete TemPlate functionality Assigned Tempale should not be delete",
                  "timedOut": null,
                  "duration": 8276,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncy.wait(\"@templateGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const assignedTemplate = response.body.result.values.filter(ele => ele.assignedTo.length > 0);\n  if (assignedTemplate.length > 0) {\n    cyGet(`[data-testid=\"templatelist-textfield-e9dj43sha\"] input`).type(assignedTemplate[0].label);\n    cy.contains('tr', assignedTemplate[0].label).find(`[data-testid=\"Action\"]`).click();\n    cy.get(\"#delete\").should(\"have.attr\", \"aria-disabled\", \"true\");\n  } else {\n    cy.log(`Teplate not available for delete`);\n  }\n});",
                  "err": {},
                  "uuid": "60920562-acbc-4cb4-be40-068046fe06f9",
                  "parentUUID": "6ffa7a65-bba9-44d5-902c-49d6288deac9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "60920562-acbc-4cb4-be40-068046fe06f9"
              ],
              "failures": [
                "e6075f9d-0906-4584-a1bb-595a02c58ff4"
              ],
              "pending": [],
              "skipped": [],
              "duration": 28428,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [
            "baf4537a-7cae-45b7-ae9e-ea69e79a9471"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "237f564a-d7d2-4b05-a3f9-1470adfcf9de",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\manageUser.js",
      "file": "cypress\\e2e\\one\\myAccount\\manageUser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cb826ca9-5c46-4179-9a44-69df2afefb81",
          "title": "search User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\manageUser.js",
          "file": "cypress\\e2e\\one\\myAccount\\manageUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Search user by search user functionality on second page",
              "fullTitle": "search User functionality test Search user by search user functionality on second page",
              "timedOut": null,
              "duration": 7780,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@userList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const userName = response.body.result.values.filter(ele => ele.status > 0);\n  const user = userName.slice(-1)[0];\n  cy.get('[placeholder=\"search....\"]').type(user.label);\n  cy.wait(\"@userList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    expect(response.body.result.values[0]).has.property(\"label\", user.label);\n  });\n});",
              "err": {},
              "uuid": "fc05655a-0fc5-40f0-b37d-2355e4722c3b",
              "parentUUID": "cb826ca9-5c46-4179-9a44-69df2afefb81",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc05655a-0fc5-40f0-b37d-2355e4722c3b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7780,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d1bb7e48-6e14-4220-a65d-d7efc33c786f",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\profile.js",
      "file": "cypress\\e2e\\one\\myAccount\\profile.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "494ef5ad-be9e-4ffa-9a91-3f25eb710959",
          "title": "Verify My Profile Page",
          "fullFile": "cypress\\e2e\\one\\myAccount\\profile.js",
          "file": "cypress\\e2e\\one\\myAccount\\profile.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update user name and verify with profile",
              "fullTitle": "Verify My Profile Page Update user name and verify with profile",
              "timedOut": null,
              "duration": 7697,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const UpdatedUsername = faker.person.fullName();\ncyGet(\"#name-label\").should(\"have.text\", \"Name *\");\ncyGet('input#name').should(\"have.attr\", \"required\");\ncyGet('input#name').clear().type(UpdatedUsername);\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\ncy.reload();\ncy.wait(500);\ncy.contains(`${UpdatedUsername}'s Profile`).should('be.visible');",
              "err": {},
              "uuid": "9960c76f-8e14-4245-a5df-d2f2756d7f61",
              "parentUUID": "494ef5ad-be9e-4ffa-9a91-3f25eb710959",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User name should be required",
              "fullTitle": "Verify My Profile Page User name should be required",
              "timedOut": null,
              "duration": 1233,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('input[placeholder=\"Name\"]').clear();\ncy.get('#name-helper-text').should('have.text', \"Field is required!\");",
              "err": {},
              "uuid": "15b94351-a14e-490b-9fff-2684bf941b5c",
              "parentUUID": "494ef5ad-be9e-4ffa-9a91-3f25eb710959",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify email Address",
              "fullTitle": "Verify My Profile Page Verify email Address",
              "timedOut": null,
              "duration": 1121,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.componentLabel('#email-label', \"Email address\", \"input\").should(\"have.value\", Cypress.env(\"email\"));",
              "err": {},
              "uuid": "8640db4a-80c2-4209-be7c-c75fe0038d85",
              "parentUUID": "494ef5ad-be9e-4ffa-9a91-3f25eb710959",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Mobile number",
              "fullTitle": "Verify My Profile Page Update Mobile number",
              "timedOut": null,
              "duration": 2483,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#mobile-label').should(\"have.text\", \"Mobile number *\");\n// cy.get('#mobile').should(\"have.attr\", \"required\");\ncy.get('#mobile').clear().type(faker.string.numeric(10));\ncy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");",
              "err": {},
              "uuid": "e0a31991-acec-40a5-b79f-fb7c9a1d523a",
              "parentUUID": "494ef5ad-be9e-4ffa-9a91-3f25eb710959",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Mobile number should be in mobile number format",
              "fullTitle": "Verify My Profile Page Mobile number should be in mobile number format",
              "timedOut": null,
              "duration": 2502,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#mobile').clear();\ncy.get('#mobile').type('wesfd');\ncy.get('#mobile-helper-text').should('have.text', \"Mobile number is not valid\");\ncy.get('.MuiSnackbarContent-message').should('have.text', \"Invalid mobile\");",
              "err": {},
              "uuid": "730c3a62-d9ea-4399-a5b4-48d8cb47f378",
              "parentUUID": "494ef5ad-be9e-4ffa-9a91-3f25eb710959",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that total listed user is equal to Total users",
              "fullTitle": "Verify My Profile Page Verify that total listed user is equal to Total users",
              "timedOut": null,
              "duration": 1076,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@usersList\").then(({\n  response\n}) => {\n  let totalCount = response.body.result.pages.totalRecords;\n  cy.get('[role=\"tabpanel\"] > :nth-child(1) > :nth-child(2) > :nth-child(1) > :nth-child(1) > :nth-child(2) ').contains(totalCount);\n});",
              "err": {},
              "uuid": "8a7cab0c-f523-49b4-8c73-e47b9197e3a3",
              "parentUUID": "494ef5ad-be9e-4ffa-9a91-3f25eb710959",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9960c76f-8e14-4245-a5df-d2f2756d7f61",
            "15b94351-a14e-490b-9fff-2684bf941b5c",
            "8640db4a-80c2-4209-be7c-c75fe0038d85",
            "e0a31991-acec-40a5-b79f-fb7c9a1d523a",
            "730c3a62-d9ea-4399-a5b4-48d8cb47f378",
            "8a7cab0c-f523-49b4-8c73-e47b9197e3a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16112,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "98216cc5-e413-4560-ba6f-1fa90eb51d62",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "765385bd-fa6e-4515-aa08-6c210f0dca9e",
          "title": "Nevigate the setting page and create pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Pipeline name can't be blank",
              "fullTitle": "Nevigate the setting page and create pipeline Pipeline name can't be blank",
              "timedOut": null,
              "duration": 7497,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\nbutextField(pipelineSel.piptextfield, \"input\").click();\ncy.get('.MuiFormHelperText-root').should(\"contain\", `${messages.blankPip}.`);\nbuButton(globalSel.savetestid).should(\"be.disabled\").click({\n  force: true\n});\ncy.get('.MuiTooltip-tooltip').should(\"contain\", `${messages.blankPip}.`);",
              "err": {},
              "uuid": "fb9594f0-3961-4b1f-a2f1-c0b3a54a1cef",
              "parentUUID": "765385bd-fa6e-4515-aa08-6c210f0dca9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline already exist ",
              "fullTitle": "Nevigate the setting page and create pipeline Pipeline already exist ",
              "timedOut": null,
              "duration": 4005,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let piplabel = response.body.result.values[0].label;\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\n  butextField(pipelineSel.piptextfield, \"input\").type(piplabel);\n});\ncy.get('.MuiFormHelperText-root').should(\"have.text\", messages.existsPip);\nbuButton(globalSel.savetestid).should(\"be.disabled\").click({\n  force: true\n});\ncy.get('.MuiTooltip-tooltip').should(\"contain\", messages.existsPip);",
              "err": {},
              "uuid": "42b6cbed-1281-4bed-bf72-8e852877f257",
              "parentUUID": "765385bd-fa6e-4515-aa08-6c210f0dca9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add new pipeline",
              "fullTitle": "Nevigate the setting page and create pipeline Add new pipeline",
              "timedOut": null,
              "duration": 3708,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\nbutextField(pipelineSel.piptextfield, \"input\").type(`${faker.commerce.product()}-${new Date().valueOf()}`);\nbuButton(globalSel.savetestid).should(\"not.be.disabled\").click();",
              "err": {},
              "uuid": "a99ab6b4-b412-4062-8359-3066b6b8c122",
              "parentUUID": "765385bd-fa6e-4515-aa08-6c210f0dca9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should pipeline selectable",
              "fullTitle": "Nevigate the setting page and create pipeline Should pipeline selectable",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let pipelines = response.body.result.values;\n  let lastPip = pipelines[pipelines.length - 1].label;\n  // cy.log(`Total Pipelines: ${pipelines.length}`);\n  // cy.log(`Last Item: ${lastPip}`);\n  if (pipelines.length > 5) {\n    cy.get('[data-testid=\"pipeline-box-hlum28yao\"] > [data-testid=\"budropdown-box-ty1opau5a\"] > [data-testid=\"button-box-72cmtvy8r\"] > .MuiButtonBase-root > .MuiButton-icon > [data-testid=\"button-stack-alorzfaoj\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"]').click();\n    cy.get('[data-testid=\"searchbox-textfield-8k19ikenc\"]').type(lastPip);\n  } else {\n    cy.get('[data-testid=\"pipeline-box-hlum28yao\"] > [data-testid=\"budropdown-box-ty1opau5a\"] > [data-testid=\"button-box-72cmtvy8r\"] > .MuiButtonBase-root > .MuiButton-icon > [data-testid=\"button-stack-alorzfaoj\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"]').click();\n    cy.contains(lastPip).click();\n  }\n});",
              "err": {},
              "uuid": "fde6330e-c031-47a1-91ff-c4f94e17116f",
              "parentUUID": "765385bd-fa6e-4515-aa08-6c210f0dca9e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb9594f0-3961-4b1f-a2f1-c0b3a54a1cef",
            "42b6cbed-1281-4bed-bf72-8e852877f257",
            "a99ab6b4-b412-4062-8359-3066b6b8c122"
          ],
          "failures": [],
          "pending": [
            "fde6330e-c031-47a1-91ff-c4f94e17116f"
          ],
          "skipped": [],
          "duration": 15210,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8b8d2f20-e759-483f-9248-7d7e8f72dfb9",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "821c6a80-46d2-49da-99c5-9f5caf3943fe",
          "title": "Nevigate the setting page and rename pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Rename pipeline",
              "fullTitle": "Nevigate the setting page and rename pipeline Rename pipeline",
              "timedOut": null,
              "duration": 8001,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let editedPIpLabel = `${faker.commerce.product()}-${new Date().valueOf()}`;\ncy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  cy.get(\"#customized-dialog-title p\").should(\"have.text\", messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"label\").should(\"have.text\", messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").should(\"have.value\", pipLabel[0]);\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.existsPip1);\n  buButton(globalSel.renametestid).should(\"be.disabled\");\n  // Rename the pipeline name\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear().type(editedPIpLabel);\n  buButton(globalSel.renametestid).click();\n  cy.get('.MuiSnackbarContent-message').should(\"have.text\", messages.updated);\n});",
              "err": {},
              "uuid": "13ce7567-c58c-4142-84ac-b02230293e3d",
              "parentUUID": "821c6a80-46d2-49da-99c5-9f5caf3943fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline already exist",
              "fullTitle": "Nevigate the setting page and rename pipeline Pipeline already exist",
              "timedOut": null,
              "duration": 3460,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear().type(pipLabel[1]);\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.existsPip1);\n  buButton(globalSel.renametestid).should(\"be.disabled\").and(\"have.text\", \"Rename\");\n});",
              "err": {},
              "uuid": "688233f1-ad7d-4868-91a9-eda4ce3c8c4c",
              "parentUUID": "821c6a80-46d2-49da-99c5-9f5caf3943fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline name cant't be blank",
              "fullTitle": "Nevigate the setting page and rename pipeline Pipeline name cant't be blank",
              "timedOut": null,
              "duration": 1420,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear();\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.blankPip);\n  buButton(globalSel.renametestid).should(\"be.disabled\").and(\"have.text\", \"Rename\");\n});",
              "err": {},
              "uuid": "53fd162b-58bd-47a0-bb60-bc6f376609a7",
              "parentUUID": "821c6a80-46d2-49da-99c5-9f5caf3943fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13ce7567-c58c-4142-84ac-b02230293e3d",
            "688233f1-ad7d-4868-91a9-eda4ce3c8c4c",
            "53fd162b-58bd-47a0-bb60-bc6f376609a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12881,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "656e4ab0-5eb5-4953-8a7b-a598df152c17",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "46413486-6a60-4cb0-b877-917c6c590b1e",
          "title": "Navigate the setting page and reorder pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reorder pipeline",
              "fullTitle": "Navigate the setting page and reorder pipeline Reorder pipeline",
              "timedOut": null,
              "duration": 8243,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const movements = 1;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\n// cy.get(\"#app-routes p\").contains(\"leads\")\n// cy.get('.MuiTypography-caption').contains(\"You can Create/ Rename/ Delete Pipeline for lead only.\")\ncy.wait(1000);\nbusimpledropdown(pipelineSel.options, messages.pipAction, globalSel.reorder, messages.reorderPip);\n// cy.get('.MuiPaper-root > :nth-child(2) > div > .MuiButtonBase-root').should(\"have.text\", \"Options\").click()\n// cy.get(\"#reorder\").click()\n// get the pipeline-id using intercept and wait method\ncy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let pipId = response.body.result.values.map(ele => ele.id);\n  cy.get(`[data-rbd-draggable-id=${pipId[0]}]`).as('item');\n  cy.get('@item').invoke('attr', 'data-rbd-drag-handle-draggable-id').as('item-id');\n  cy.get('@item').invoke('attr', 'tabindex').as('item-index').should('equal', '0');\n  // lift the element\n  cy.get('@item').focus().trigger('keydown', {\n    keyCode: 32\n  }).get('@item'); // need to re-query for a clone\n  cy.wrap(Array.from({\n    length: movements\n  })).each(() => {\n    cy.get('@item').trigger('keydown', {\n      keyCode: 40,\n      force: true\n    }).wait(1000);\n  });\n  // drop an element\n  cy.get('@item').trigger('keydown', {\n    keyCode: 32,\n    force: true\n  });\n  cy.get('@item-id').then(() => {\n    cy.get(`[data-rbd-draggable-id=${pipId[0]}]`).invoke('attr', 'tabindex');\n  });\n  // cy.get('#cancel').should(\"have.text\", \"Cancel\")\n  // cy.get(\"#save\").click()\n  buButton(globalSel.canceltestid).should(\"have.text\", \"Cancel\");\n  buButton(globalSel.savetestid).should(\"have.text\", \"Save\").click({\n    force: true\n  });\n});",
              "err": {},
              "uuid": "95c296d9-b700-4226-a91a-278ce34fb52a",
              "parentUUID": "46413486-6a60-4cb0-b877-917c6c590b1e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95c296d9-b700-4226-a91a-278ce34fb52a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8243,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0d644e80-1b3a-43e1-993f-0d6393c46f8c",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1d20c4ae-3ea1-420f-b3e7-4f4decba143e",
          "title": "Stage functionality test for pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add new stage",
              "fullTitle": "Stage functionality test for pipeline Add new stage",
              "timedOut": null,
              "duration": 9217,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\nonesecondWait();\nbuButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\ncyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).type(stageName);\nonesecondWait();\nbuSaveButton().should(\"have.text\", \"Save\").click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);",
              "err": {},
              "uuid": "c9d3fa76-ea58-4764-ae43-d33a8e8fdc70",
              "parentUUID": "1d20c4ae-3ea1-420f-b3e7-4f4decba143e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage can't be empty.",
              "fullTitle": "Stage functionality test for pipeline Stage can't be empty.",
              "timedOut": null,
              "duration": 1309,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\nbuSaveButton().should(\"be.disabled\").trigger(\"mouseover\", {\n  force: true\n});\ncyGet(globalSel.tooltip).invoke('text').should('include', \"Stage can't be empty.\");",
              "err": {},
              "uuid": "55572970-20fa-441b-880e-4299b9932b1f",
              "parentUUID": "1d20c4ae-3ea1-420f-b3e7-4f4decba143e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage can't be duplicate.",
              "fullTitle": "Stage functionality test for pipeline Stage can't be duplicate.",
              "timedOut": null,
              "duration": 2526,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\ncy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stageName = response.body.result.values.map(ele => ele.label);\n  cyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).click().type(stageName[0]);\n});\nbuSaveButton().should(\"be.disabled\").trigger(\"mouseover\", {\n  force: true\n});\ncyGet(globalSel.tooltip).invoke('text').should('include', \"Duplicate stage name.\");",
              "err": {},
              "uuid": "a2176944-82b8-46dc-add3-cf043062dc2c",
              "parentUUID": "1d20c4ae-3ea1-420f-b3e7-4f4decba143e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "edit stage",
              "fullTitle": "Stage functionality test for pipeline edit stage",
              "timedOut": null,
              "duration": 3827,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\ncyGet(`${globalSel.inputItemtextfield} input`).last().clear();\ncyGet(`${globalSel.inputItemtextfield} input`).last().type(stageName);\nbuSaveButton().should(\"have.text\", \"Save\").click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);",
              "err": {},
              "uuid": "b449cf8b-992a-4ef4-ba71-a1254c4900bf",
              "parentUUID": "1d20c4ae-3ea1-420f-b3e7-4f4decba143e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete stage",
              "fullTitle": "Stage functionality test for pipeline delete stage",
              "timedOut": null,
              "duration": 4964,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\nconst msg2 = \"Are you sure! Want to delete this Stage?\";\nbuButton(`[data-testid=\"Add a ${asset} Stage\"]`).click();\ncyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).click().type(stageName);\nbuSaveButton().should(\"have.text\", \"Save\").click();\nonesecondWait();\ncyGet(`${pipelineSel.stageDelIconBtn}`).last().click();\nbuCaption(globalSel.dialogTitle, globalSel.dialogTitleText, \"Delete Stage\", pipelineSel.deletestagecaption, msg2);\nbuButton(`[data-testid=\"Delete Stage\"]`).click();",
              "err": {},
              "uuid": "62c871bc-c2c3-4151-968c-ecd907271ac5",
              "parentUUID": "1d20c4ae-3ea1-420f-b3e7-4f4decba143e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage should not be deleted which contains record",
              "fullTitle": "Stage functionality test for pipeline Stage should not be deleted which contains record",
              "timedOut": null,
              "duration": 1386,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stageWithCount = response.body.result.values.find(ele => ele.count > 0 && ele.winChance != \"Won\");\n  if (!stageWithCount) {\n    this.skip();\n  }\n  const msg2 = `You need to move ${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.count} ${asset} to delete this stage.`;\n  cyGet(`[data-rbd-draggable-id=\"${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.id}\"] ${pipelineSel.stageDelIconBtn}`).click({\n    force: true\n  });\n  buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, delNmvStg, pipelineSel.deletestageConfirmatiion, msg2);\n  budropdown(globalSel.dialogContent, globalSel.fieldlabelBox, fieldLabel);\n  budropdownInput(`[data-testid=\"input-muiinput-t8mkcx347\"] input`, stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label);\n  buButton(`[data-testid=\"Move ${asset} and delete Stage\"]`).should(\"be.disabled\");\n});",
              "err": {},
              "uuid": "9ac1a504-efb9-4931-a056-b6a87ee7c59d",
              "parentUUID": "1d20c4ae-3ea1-420f-b3e7-4f4decba143e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "move record and delete stage",
              "fullTitle": "Stage functionality test for pipeline move record and delete stage",
              "timedOut": null,
              "duration": 2797,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const values = response.body.result.values;\n  const length = values.length;\n  const stageWithCount = values.find(ele => ele.count > 0 && ele.winChance != \"Won\");\n  const msg2 = `You need to move ${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.count} ${asset} to delete this stage.`;\n  const moveRecordStage = values.find(ele => ele.label != (stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label) && ele.winChance != \"Won\");\n  const searchSelecor = `${globalSel.searchbox} ${globalSel.searchplaceholder}`;\n  if (!stageWithCount) {\n    this.skip();\n  }\n  cyGet(`[data-rbd-draggable-id=\"${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.id}\"] ${pipelineSel.stageDelIconBtn}`).click({\n    force: true\n  });\n  buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, delNmvStg, pipelineSel.deletestageConfirmatiion, msg2);\n  budropdownInput(`[data-testid=\"input-muiinput-t8mkcx347\"] input`, stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label, length, searchSelecor, moveRecordStage === null || moveRecordStage === void 0 ? void 0 : moveRecordStage.label, globalSel.dialogTitleText);\n  buButton(`[data-testid=\"Move ${asset} and delete Stage\"]`).click();\n});",
              "err": {},
              "uuid": "d79b2c80-b1c6-4151-b6d8-405d65c5bf55",
              "parentUUID": "1d20c4ae-3ea1-420f-b3e7-4f4decba143e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c9d3fa76-ea58-4764-ae43-d33a8e8fdc70",
            "55572970-20fa-441b-880e-4299b9932b1f",
            "a2176944-82b8-46dc-add3-cf043062dc2c",
            "b449cf8b-992a-4ef4-ba71-a1254c4900bf",
            "62c871bc-c2c3-4151-968c-ecd907271ac5",
            "9ac1a504-efb9-4931-a056-b6a87ee7c59d",
            "d79b2c80-b1c6-4151-b6d8-405d65c5bf55"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26026,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "896e79f2-eb45-4a04-a118-1c46e9dba75b",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2c852774-9bbb-4387-8a62-84cbb17f4ac8",
          "title": "Navigate the setting page and reorder stage",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reorder stage",
              "fullTitle": "Navigate the setting page and reorder stage Reorder stage",
              "timedOut": null,
              "duration": 8383,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const movements = 1;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\ncy.wait(\"@getStage\").then(({\n  response\n}) => {\n  const stageId = response.body.result.values.map(ele => ele.id);\n  expect(response.body.result.values).to.be.length.greaterThan(1);\n  if (stageId.length > 1) {\n    cyGet(`[data-rbd-draggable-id=${stageId[0]}]`).as('item');\n    cy.get('@item').invoke('attr', 'data-rbd-drag-handle-draggable-id').as('item-id');\n    cy.get('@item').invoke('attr', 'tabindex').as('item-index').should('equal', '0');\n    // lift the element\n    cy.get('@item').focus().trigger('keydown', {\n      keyCode: 32,\n      position: \"left\"\n    }).get('@item'); // need to re-query for a clone\n    cy.wrap(Array.from({\n      length: movements\n    })).each(() => {\n      cy.get('@item').trigger('keydown', {\n        keyCode: 40,\n        force: true\n      }).wait(1000);\n    });\n    // drop an element\n    cy.get('@item').trigger('keydown', {\n      keyCode: 32,\n      force: true\n    });\n    cy.get('@item-id').then(() => {\n      cyGet(`[data-rbd-draggable-id=${stageId[0]}]`).invoke('attr', 'tabindex');\n    });\n    buSaveButton().should(\"have.text\", \"Save\").click();\n    cyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);\n  } else {\n    cy.log(`Stage must be more than 1 but stage found: ${stageId.length}`);\n  }\n});",
              "err": {},
              "uuid": "1f729f59-2d7a-45ae-a867-5027398a0d54",
              "parentUUID": "2c852774-9bbb-4387-8a62-84cbb17f4ac8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f729f59-2d7a-45ae-a867-5027398a0d54"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8383,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b418cc80-2e46-4e52-bd64-d4c756c5364f",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "db54816a-506c-4c76-a15c-2588a3446e12",
          "title": "Nevigate the setting page and delete pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete pipeline",
              "fullTitle": "Nevigate the setting page and delete pipeline Delete pipeline",
              "timedOut": null,
              "duration": 8184,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.pipelineData(module, asset).then(pipData => {\n  pipelineData = pipData;\n  const piplabel = pipelineData.map(ele => ele.label);\n  let msg1 = \"Delete Pipeline Confirmation\";\n  if (pipelineData.length == 1) {\n    busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    buButton(globalSel.deltestid).click();\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Last pipeline can't be deleted\");\n  } else {\n    const piplength = pipelineData.length;\n    const countZeroPip = pipelineData.find(ele => ele.count === 0);\n    if (!countZeroPip) {\n      cy.log(\"Pipeline not found for delete\");\n    }\n    let msg2 = `You are about to delete the project titled ${countZeroPip === null || countZeroPip === void 0 ? void 0 : countZeroPip.label}.`;\n    budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, piplabel[0], piplength, globalSel.search, countZeroPip === null || countZeroPip === void 0 ? void 0 : countZeroPip.label, globalSel.dialogTitleText);\n    busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    buButton(globalSel.deltestid).click();\n  }\n  ;\n});",
              "err": {},
              "uuid": "9a4374ed-97eb-4552-9c1c-f014df513020",
              "parentUUID": "db54816a-506c-4c76-a15c-2588a3446e12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline should not delete which contains record",
              "fullTitle": "Nevigate the setting page and delete pipeline Pipeline should not delete which contains record",
              "timedOut": null,
              "duration": 6862,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const pipcontainRecord = pipelineData.find(ele => ele.count > 0);\nif (pipelineData.length === 1) {\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n  buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n  buButton(globalSel.deltestid).click();\n  cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Last pipeline can't be deleted\");\n} else {\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipcontainRecord === null || pipcontainRecord === void 0 ? void 0 : pipcontainRecord.label, pipelineData.length, globalSel.search, pipcontainRecord === null || pipcontainRecord === void 0 ? void 0 : pipcontainRecord.label, globalSel.dialogTitleText);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n  buButton(globalSel.del).should(\"have.attr\", \"aria-disabled\", \"true\").trigger(\"mouseover\", {\n    force: true\n  });\n  cy.get('.MuiTooltip-tooltip').should(\"have.text\", \"Pipeline contains lead\");\n}\n;",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.MuiTooltip-tooltip`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.MuiTooltip-tooltip`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/1_pipeline/9_delete.js:58:42)",
                "diff": null
              },
              "uuid": "3bf52857-44ea-420a-868d-2fca86ee5e11",
              "parentUUID": "db54816a-506c-4c76-a15c-2588a3446e12",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9a4374ed-97eb-4552-9c1c-f014df513020"
          ],
          "failures": [
            "3bf52857-44ea-420a-868d-2fca86ee5e11"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15046,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "03dc87bb-4c17-491c-9950-2e583b8203b8",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5bb187ce-65fe-4ceb-aae5-28aca097b665",
          "title": "Nevigate the setting page and create and update association fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create association field",
              "fullTitle": "Nevigate the setting page and create and update association fields Create association field",
              "timedOut": null,
              "duration": 19010,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(_fieldSel.default.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Association\", _globalSel.default.dialogTitleText);\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Group\");\ncyGet(`${_globalSel.default.muiInput} input[name=\"Select Group\"]`).should('be.disabled').and('have.value', \"System Fields\");\ncy.wait(\"@assetsPipeline\");\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  const apiLength = response.body.result.values.length;\n  const assetsPip = response.body.result.values.find(ele => ele.disable != true);\n  cyGet(`${_globalSel.default.withtitleinputlabel}`).contains(\"Select Asset\");\n  budropdown(_globalSel.default.dialogContent, `button ${_globalSel.default.buttonTypography}`, assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label, apiLength, _globalSel.default.search, assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label, _globalSel.default.dialogTitleText);\n  ascInput(`${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n  (0, _field.headingNsubheading)();\n  buradio(\"Single-selection\");\n  cyGet(`[data-testid=\"avatarinput-textfield-ojwxr8kdk\"] label`).contains(`${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n  cyGet(`[data-testid=\"avatarinput-textfield-ojwxr8kdk\"] input`).should(\"have.attr\", \"placeholder\", `Select ${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "db200f13-5278-4bbb-a7cd-84156e9be2f6",
              "parentUUID": "5bb187ce-65fe-4ceb-aae5-28aca097b665",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify dissabled aaset",
              "fullTitle": "Nevigate the setting page and create and update association fields Verify dissabled aaset",
              "timedOut": null,
              "duration": 4049,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(_fieldSel.default.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Association\", _globalSel.default.dialogTitleText);\ncy.wait(\"@assetsPipeline\");\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  const apiLength = response.body.result.values.length;\n  const assetspipLabels = response.body.result.values.map(ele => ele.label);\n  const disableassetsPip = response.body.result.values.find(ele => ele.disable === true);\n  const availablePip = response.body.result.values.find(ele => ele.disable !== true);\n  if (disableassetsPip) {\n    var _availablePip$label;\n    const assetDropdownContain = (_availablePip$label = availablePip.label) !== null && _availablePip$label !== void 0 ? _availablePip$label : `Select`;\n    budropdown(_globalSel.default.dialogContent, `button ${_globalSel.default.buttonTypography}`, assetDropdownContain);\n    if (apiLength > 5) buSearchbox(_globalSel.default.search, disableassetsPip === null || disableassetsPip === void 0 ? void 0 : disableassetsPip.label);\n    budropdownOption(disableassetsPip === null || disableassetsPip === void 0 ? void 0 : disableassetsPip.label, `[data-testid=\"virtuallist-listitembutton-w6znzg16f\"]`)\n    // .find(`[data-testid=\"virtuallist-listitembutton-w6znzg16f\"]`)\n    .should('have.attr', 'aria-disabled', 'true');\n  } else {\n    cy.log(\"Association field not available in bin\");\n  }\n});",
              "err": {},
              "uuid": "d8368f6d-5b53-4181-acfc-7ce06ed5e4f5",
              "parentUUID": "5bb187ce-65fe-4ceb-aae5-28aca097b665",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit association field",
              "fullTitle": "Nevigate the setting page and create and update association fields Edit association field",
              "timedOut": null,
              "duration": 7133,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const totalPages = response.body.result.pages.totalNoOfPages;\n  const handleAscField = fieldData => {\n    const ascField = fieldData.values.find(ele => ele.prop === \"asc\");\n    cy.intercept(method.get, `**/fms/fields/${ascField.id}?*`).as(\"fieldDetail\");\n    (0, _field.searchNactionField)(ascField.label, _globalSel.default.edit, \"Edit\");\n    ascInput(ascField.label);\n    cy.wait(\"@fieldDetail\").then(({\n      response\n    }) => {\n      if (response.body.result.selection === \"multi\") {\n        (0, _utility.editMultiSelectionField)();\n      } else {\n        (0, _utility.editSingleSelectionField)();\n      }\n    });\n  };\n  if (totalPages === 1) {\n    handleAscField(response.body.result);\n  } else {\n    cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click();\n    cy.wait(\"@fieldGrid\").then(({\n      response\n    }) => {\n      handleAscField(response.body.result);\n    });\n  }\n});\nbuSaveButton().click();\ncyGet(_globalSel.default.SnackbarMessage).invoke('text').should('include', _messages.default.updated);",
              "err": {},
              "uuid": "aa7f7dee-dd8c-4ab0-a1cc-13cac2a15850",
              "parentUUID": "5bb187ce-65fe-4ceb-aae5-28aca097b665",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db200f13-5278-4bbb-a7cd-84156e9be2f6",
            "d8368f6d-5b53-4181-acfc-7ce06ed5e4f5",
            "aa7f7dee-dd8c-4ab0-a1cc-13cac2a15850"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30192,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6985ae09-938a-4a2f-bf4b-34127dbef07c",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "daa26c9b-e3b1-4cc6-a709-f3ad37ca020f",
          "title": "Nevigate the setting page and create and update association fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach Field",
              "fullTitle": "Nevigate the setting page and create and update association fields Attach Field",
              "timedOut": null,
              "duration": 10704,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"Attach field\"]').click();\ncy.wait(\"@availableFiels\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cy.log(JSON.stringify(response));\n  const availablefieldLabel = response.body.result.values.map(ele => ele.label);\n  buSearchbox(`${fieldSel.attachfieldstextfield} ${globalSel.searchplaceholder}`, availablefieldLabel[0]);\n  cyGet(`[data-testid=\"propertylist-formcontrollabel-z6t5ag0ev\"] input[type=\"checkbox\"]`).first().click();\n  cyGet(`[data-testid=\"propertylist-formcontrollabel-z6t5ag0ev\"] [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`).contains(availablefieldLabel[0]);\n  buButton('[data-testid=\"Attach\"]').click();\n  onesecondWait();\n  buSearchbox(`${fieldSel.searchBoxfieldGrid} ${globalSel.searchplaceholder}`, availablefieldLabel[0]);\n  cyGet(`table tbody tr [aria-label=\"${availablefieldLabel[0]}\"]`).contains(availablefieldLabel[0]);\n});",
              "err": {},
              "uuid": "33542e0c-fc51-4342-97d6-7c247a8e1e10",
              "parentUUID": "daa26c9b-e3b1-4cc6-a709-f3ad37ca020f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33542e0c-fc51-4342-97d6-7c247a8e1e10"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10704,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d9df0e77-28e7-45e0-ba9d-03decdc142b9",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "21449653-6b21-42da-b76c-413d7d23dd38",
          "title": "Nevigate the setting page and verify the field components",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify and select Asset Pipeline",
              "fullTitle": "Nevigate the setting page and verify the field components Verify and select Asset Pipeline",
              "timedOut": null,
              "duration": 16696,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const moduleName = module.toUpperCase();\nconst subHeadingText = `Fields store information about ${moduleName}`;\nbuCaption(globalSel.settinglayoutbox, fieldSel.captionHeading, \"Fields\", fieldSel.captionSubHeading, subHeadingText);\ncyGet('[data-testid=\"properties-typography-ug3bego54\"]').contains(\"Select Asset\");\ncy.wait(\"@assetPipeline\").then(({\n  response\n}) => {\n  let piplabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `${globalSel.buttonBox} button`, piplabel[0]);\n  budropdownOption(piplabel[1]).contains(piplabel[1]).click();\n  budropdown(globalSel.settinglayoutbox, `${globalSel.buttonBox} button`, piplabel[1]);\n});\ncyGet('#simple-tab-0 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"All fields\");\ncyGet('#simple-tab-1 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"Groups\");\ncyGet('#simple-tab-2 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"Deleted fields\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"undefined\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"undefined\"]`, but never found it.\n    at budropdownOption (webpack://bu-testing/./cypress/helpers/global.js:74:14)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/2_manageField/components.js:35:12)",
                "diff": null
              },
              "uuid": "a2002a90-d34c-4d16-8852-4300c79ed56d",
              "parentUUID": "21449653-6b21-42da-b76c-413d7d23dd38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the group filter is working as expected",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the group filter is working as expected",
              "timedOut": null,
              "duration": 6574,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "recordCountOnPage(\"5\");\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All groups\");\ncy.wait(1000);\ncy.wait(\"@groupList\").then(({\n  response\n}) => {\n  let groupLabel = response.body.result.values.map(ele => ele.label);\n  budropdownOption(groupLabel[0]).should('be.visible').contains(groupLabel[0]).click();\n  cy.wait(1000);\n  cyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(3)\").each($row => {\n    cy.wrap($row).contains(groupLabel[0]);\n  });\n});",
              "err": {},
              "uuid": "10646d40-e7aa-4f1e-8fed-df3d34745df8",
              "parentUUID": "21449653-6b21-42da-b76c-413d7d23dd38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the field type filter should contains all field type",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the field type filter should contains all field type",
              "timedOut": null,
              "duration": 36330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\nfieldTypeFilterSel(\"Single line text\");\nfieldTypeFilterSel(\"Number\");\nfieldTypeFilterSel(\"Email\");\nfieldTypeFilterSel(\"URL\");\nfieldTypeFilterSel(\"Owner\");\nfieldTypeFilterSel(\"Created By\");\nfieldTypeFilterSel(\"Basic Dropdown\");\nfieldTypeFilterSel(\"Colored dropdown\");\nfieldTypeFilterSel(\"Date field\");\nfieldTypeFilterSel(\"Time field\");\nfieldTypeFilterSel(\"Date and time field\");\nfieldTypeFilterSel(\"Stage\");\nfieldTypeFilterSel(\"Attachment\");\nfieldTypeFilterSel(\"Address\");\nfieldTypeFilterSel(\"Image\");\nfieldTypeFilterSel(\"Multi line text\");\nfieldTypeFilterSel(\"Checkbox\");\nfieldTypeFilterSel(\"Radio\");\nfieldTypeFilterSel(\"Rating\");\nfieldTypeFilterSel(\"Formula\");\nfieldTypeFilterSel(\"Unique Id\");\nfieldTypeFilterSel(\"Custom form\");\nfieldTypeFilterSel(\"Data source\");",
              "err": {},
              "uuid": "688cd4cd-e5b6-4456-8779-ee2d054e22ef",
              "parentUUID": "21449653-6b21-42da-b76c-413d7d23dd38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the field type filter is working as expected",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the field type filter is working as expected",
              "timedOut": null,
              "duration": 8515,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "recordCountOnPage(\"5\");\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\ncy.wait(1000);\nbudropdownOption(\"Single line text\").contains(\"Single line text\").click();\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"Single line text\");\ncy.wait(1000);\ncyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(2)\").each($row => {\n  cy.wrap($row).contains(\"Single line text\");\n});\ncy.wait(1000);",
              "err": {},
              "uuid": "d35b7a50-1eb7-4e19-a4c9-1a4455a216ad",
              "parentUUID": "21449653-6b21-42da-b76c-413d7d23dd38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate used count with API",
              "fullTitle": "Nevigate the setting page and verify the field components Validate used count with API",
              "timedOut": null,
              "duration": 4071,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-0 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"All fields\").click();\nrecordCountOnPage(\"10\");\ncy.wait(\"@fieldGrid\");\ncy.wait(\"@fieldGrid\").then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.recordCount);\n  cyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(5)\").each(($row, index) => {\n    cy.wrap($row).contains(abc[index]);\n  });\n});",
              "err": {},
              "uuid": "9c6ae3de-79f4-48cb-a2c5-c3ab160597d1",
              "parentUUID": "21449653-6b21-42da-b76c-413d7d23dd38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate attached count with API",
              "fullTitle": "Nevigate the setting page and verify the field components Validate attached count with API",
              "timedOut": null,
              "duration": 4105,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-0 > .MuiTypography-root').contains(\"All fields\").click();\nrecordCountOnPage(\"10\");\ncy.wait(\"@fieldGrid\");\ncy.wait(\"@fieldGrid\").then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.attachedCount);\n  let counts = abc.map(fields => {\n    let count = fields.count;\n    return count;\n  });\n  cyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(6)\").each(($row, index) => {\n    cy.wrap($row).contains(counts[index]);\n  });\n});",
              "err": {},
              "uuid": "3798ace0-debe-4cb8-a5b1-de62ed4b55ac",
              "parentUUID": "21449653-6b21-42da-b76c-413d7d23dd38",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10646d40-e7aa-4f1e-8fed-df3d34745df8",
            "688cd4cd-e5b6-4456-8779-ee2d054e22ef",
            "d35b7a50-1eb7-4e19-a4c9-1a4455a216ad",
            "9c6ae3de-79f4-48cb-a2c5-c3ab160597d1",
            "3798ace0-debe-4cb8-a5b1-de62ed4b55ac"
          ],
          "failures": [
            "a2002a90-d34c-4d16-8852-4300c79ed56d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 76291,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d35537a9-4989-452d-a4b0-695cd3da424b",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a4d15aed-cf22-4e11-8021-7747e470adf5",
          "title": "Navigate to setting page and create and update fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create URL field",
              "fullTitle": "Navigate to setting page and create and update fields Create URL field",
              "timedOut": null,
              "duration": 8277,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `URL-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"URL\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "b9f4ea92-434a-423a-bc13-5030e73d440e",
              "parentUUID": "a4d15aed-cf22-4e11-8021-7747e470adf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit URL field",
              "fullTitle": "Navigate to setting page and create and update fields Edit URL field",
              "timedOut": null,
              "duration": 5325,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `URL-${new Date().valueOf()}`;\nsearchField(\"url\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);",
              "err": {},
              "uuid": "4a22fc76-f984-40c4-b2c1-1a39204d8ab4",
              "parentUUID": "a4d15aed-cf22-4e11-8021-7747e470adf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Mobile number field",
              "fullTitle": "Navigate to setting page and create and update fields Create Mobile number field",
              "timedOut": null,
              "duration": 5855,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Mobile-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Mobile number\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"none\", null, null, \"4-3-3\", globalSel.dialogTitleText);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "1111aa86-ead0-4d6e-8342-031c8a49ee8f",
              "parentUUID": "a4d15aed-cf22-4e11-8021-7747e470adf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get phn field details through interception for edit phn field",
              "fullTitle": "Navigate to setting page and create and update fields Get phn field details through interception for edit phn field",
              "timedOut": null,
              "duration": 3687,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchField(\"phn\", null, 'Edit').then(fieldData => {\n  cy.wrap(fieldData).as(\"fieldData\");\n});\ncy.get(\"@fieldData\").then(res => {\n  field = res;\n});",
              "err": {},
              "uuid": "4cc64bf5-d621-479a-910d-9f38454c7e80",
              "parentUUID": "a4d15aed-cf22-4e11-8021-7747e470adf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Mobile number field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Mobile number field",
              "timedOut": null,
              "duration": 6320,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Mobile-${new Date().valueOf()}`;\ncy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\nsearchField(\"phn\", field.label, 'Edit');\ncy.wait(\"@getFieldById\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const format = response.body.result.format;\n  labelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\n  budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, format, null, null, \"4-4-2\", globalSel.dialogTitleText);\n  preview(fieldLabel, `Enter ${fieldLabel}`);\n  buSaveButton().click();\n  cyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);\n});",
              "err": {},
              "uuid": "ecf06607-9f45-4a88-919f-c65d9b7de260",
              "parentUUID": "a4d15aed-cf22-4e11-8021-7747e470adf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Number field",
              "fullTitle": "Navigate to setting page and create and update fields Create Number field",
              "timedOut": null,
              "duration": 5772,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Number-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Number\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\n// budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"none\", null, null, \"4-3-3\", globalSel.dialogTitleText);\nbutextField(globalSel.butextfield, \"#min\").type(2);\nbutextField(globalSel.butextfield, \"#max\").type(1000);\nbutextField(globalSel.butextfield, \"#decimal\").type(3);\n// cy.componentLabel(lead.formLabel, \"Min Number\", \"input\").type(2)\n// cy.componentLabel(lead.formLabel, \"Max Number\", \"input\").type(10)\n// cy.componentLabel(lead.formLabel, \"Decimal Points\", \"input\").type(2)\ncyGet('[data-testid=\"withtitle-inputlabel-9rg7j5v06\"]').contains(\"Max-3\");\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "a224b5c5-44bf-4792-bb7a-cee461621347",
              "parentUUID": "a4d15aed-cf22-4e11-8021-7747e470adf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Number field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Number field",
              "timedOut": null,
              "duration": 6620,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Number-${new Date().valueOf()}`;\nsearchField(\"num\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(globalSel.butextfield, \"#min\").clear().type(3);\nbutextField(globalSel.butextfield, \"#max\").clear().type(50000);\nbutextField(globalSel.butextfield, \"#decimal\").clear().type(2);\ncyGet('[data-testid=\"withtitle-inputlabel-9rg7j5v06\"]').contains(\"Max-3\");\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);",
              "err": {},
              "uuid": "bf383540-c061-453a-b4ac-f29601b97eaf",
              "parentUUID": "a4d15aed-cf22-4e11-8021-7747e470adf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Rating field",
              "fullTitle": "Navigate to setting page and create and update fields Create Rating field",
              "timedOut": null,
              "duration": 4697,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Rating-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Rating\", globalSel.dialogTitleText);\n// labelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\ncy.get('[data-testid=\"ratingfield-typography-34xvi9zqr\"]').contains(\"Type\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"Star\");\ncy.get('[data-testid=\"ratingfield-typography-lms2xp00s\"]').contains(\"Max\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"5\");\ncy.get('[data-testid=\"burating-formlabel-pfw5vth6c\"]').contains(fieldLabel);\ncy.get('[data-testid=\"burating-styledrating-i1n90l9jw\"] > label').click({\n  multiple: true,\n  force: true\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "671c4689-943e-40f9-bca4-f0797dbc20f7",
              "parentUUID": "a4d15aed-cf22-4e11-8021-7747e470adf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Rating field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Rating field",
              "timedOut": null,
              "duration": 5145,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Rating-${new Date().valueOf()}`;\nsearchField(\"rtg\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\ncy.get('[data-testid=\"ratingfield-typography-34xvi9zqr\"]').contains(\"Type\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"Star\");\ncy.get('[data-testid=\"ratingfield-typography-lms2xp00s\"]').contains(\"Max\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"5\");\ncy.get('[data-testid=\"burating-formlabel-pfw5vth6c\"]').contains(fieldLabel);\ncy.get('[data-testid=\"burating-styledrating-i1n90l9jw\"] > label').click({\n  multiple: true,\n  force: true\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "7dff1584-b0bd-4cf7-bbcf-9f3e8077f93e",
              "parentUUID": "a4d15aed-cf22-4e11-8021-7747e470adf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create checkbox field",
              "fullTitle": "Navigate to setting page and create and update fields Create checkbox field",
              "timedOut": null,
              "duration": 4710,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fieldLabel = `Checkbox-${Date.now()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(fieldSel.fieldlabelbox).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Checkbox\", globalSel.dialogTitleText);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\n[\"Option 2\", \"Option 3\"].forEach((optionText, index) => {\n  buButton(globalSel.typBtn).contains(\"Add option\").click();\n  butextField(fieldSel.fieldOptionTextfield, `input[value = \"${optionText}\"]`).should(\"have.value\", optionText);\n});\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(`[data-testid^=\"bucheckboxgroup-formlabel\"]`).contains(fieldLabel);\n[\"Option 1\", \"Option 2\", \"Option 3\"].forEach(optionText => {\n  cyGet(checkboxWrapper).contains(optionText).should(\"have.attr\", \"aria-label\", optionText);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "fac8094d-ef0b-4219-97e6-f094cc47393e",
              "parentUUID": "a4d15aed-cf22-4e11-8021-7747e470adf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit checkbox field",
              "fullTitle": "Navigate to setting page and create and update fields Edit checkbox field",
              "timedOut": null,
              "duration": 7234,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newLabel = `Checkbox-${Date.now()}`;\nconst newOption = `Option-${Date.now()}`;\nsearchField(\"chk\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(newLabel);\nbutextField(`${fieldSel.fieldOptionTextfield} :nth-child(1)`, `input`).first().clear().type(\"Edited Option 1\");\nbuButton(globalSel.typBtn).contains(\"Add option\").click();\ncy.get(fieldSel.fieldOptionTextfield).last().find(\"input\").clear().type(newOption);\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(checkboxWrapper).contains(\"Edited Option 1\").should(\"have.attr\", \"aria-label\", \"Edited Option 1\");\ncyGet(checkboxWrapper).contains(newOption).should(\"have.attr\", \"aria-label\", newOption);\nbuSaveButton().click();",
              "err": {},
              "uuid": "108905a3-48bf-41c7-96f8-d26e8f609182",
              "parentUUID": "a4d15aed-cf22-4e11-8021-7747e470adf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create radio field",
              "fullTitle": "Navigate to setting page and create and update fields Create radio field",
              "timedOut": null,
              "duration": 5784,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Radio-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Radio\", globalSel.dialogTitleText);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\n[\"Option 2\", \"Option 3\"].forEach((optionText, index) => {\n  buButton(globalSel.typBtn).contains(\"Add option\").click();\n  butextField(fieldSel.fieldOptionTextfield, `input[value = \"${optionText}\"]`).should(\"have.value\", optionText);\n});\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(`[data-testid^=\"bucheckboxgroup-formlabel\"]`).contains(fieldLabel);\n[\"Option 1\", \"Option 2\", \"Option 3\"].forEach(optionText => {\n  cyGet(checkboxWrapper).contains(optionText).should(\"have.attr\", \"aria-label\", optionText);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "785df5cc-2696-4683-89df-349a53425a1c",
              "parentUUID": "a4d15aed-cf22-4e11-8021-7747e470adf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit radio field",
              "fullTitle": "Navigate to setting page and create and update fields Edit radio field",
              "timedOut": null,
              "duration": 6923,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newLabel = `Radio-${Date.now()}`;\nconst newOption = `Option-${Date.now()}`;\nsearchField(\"rad\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(newLabel);\nbutextField(fieldSel.fieldOptionTextfield, `:nth-child(1) input`).first().clear().type(\"Edited Option 1\");\nbuButton(globalSel.typBtn).contains(\"Add option\").click();\ncy.get(fieldSel.fieldOptionTextfield).last().find(\"input\").clear().type(newOption);\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(checkboxWrapper).contains(\"Edited Option 1\").should(\"have.attr\", \"aria-label\", \"Edited Option 1\");\ncyGet(checkboxWrapper).contains(newOption).should(\"have.attr\", \"aria-label\", newOption);\nbuSaveButton().click();",
              "err": {},
              "uuid": "731385a0-2ce2-4101-ae96-8b8a6400539d",
              "parentUUID": "a4d15aed-cf22-4e11-8021-7747e470adf5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b9f4ea92-434a-423a-bc13-5030e73d440e",
            "4a22fc76-f984-40c4-b2c1-1a39204d8ab4",
            "1111aa86-ead0-4d6e-8342-031c8a49ee8f",
            "4cc64bf5-d621-479a-910d-9f38454c7e80",
            "ecf06607-9f45-4a88-919f-c65d9b7de260",
            "a224b5c5-44bf-4792-bb7a-cee461621347",
            "bf383540-c061-453a-b4ac-f29601b97eaf",
            "671c4689-943e-40f9-bca4-f0797dbc20f7",
            "7dff1584-b0bd-4cf7-bbcf-9f3e8077f93e",
            "fac8094d-ef0b-4219-97e6-f094cc47393e",
            "108905a3-48bf-41c7-96f8-d26e8f609182",
            "785df5cc-2696-4683-89df-349a53425a1c",
            "731385a0-2ce2-4101-ae96-8b8a6400539d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 76349,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c5cbcdd5-82f3-4506-81a1-add40ba5d589",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "decae972-501b-48b2-9b4d-badfa8b16298",
          "title": "Nevigate the setting page and test the data source fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create Single selction data source field",
              "fullTitle": "Nevigate the setting page and test the data source fields Create Single selction data source field",
              "timedOut": null,
              "duration": 17951,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let dsrcField = `Data source-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Dropdown\", globalSel.dialogTitleText);\nlabelNplaceholder(dsrcField, `Please select the values`);\ncy.get('[data-testid=\"datasourcefield-typography-zui6gbl8o\"]').should(\"have.text\", \"Link Asset\");\ncy.get(`${globalSel.dialogContent} [data-testid=\"buswitch-button-79w8xnphk\"]`).click();\ncy.wait(\"@assetsPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const getAssets = response.body.result.values.map(ele => ele.label);\n  const totalAsset = response.body.result.pages.totalRecords;\n  const getLeadAssets = response.body.result.values.find(ele => ele.group !== asset);\n  budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, getAssets[0], totalAsset, globalSel.search, getLeadAssets.label, globalSel.dialogTitleText);\n});\nheadingNsubheading();\nfiledSelection(\"Single-selection\", \"single\").should(\"be.checked\");\nbudropdown(globalSel.dialogContent, `label`, dsrcField);\ncyGet(`${globalSel.dialogContent} [data-testid=\"datasourcefield-box-6mghg71wb\"] [data-testid=\"budropdown-box-ty1opau5a\"] input`).should(\"have.attr\", \"placeholder\", `Please select the values`);\n// preview(dsrcField, `Please select the values`)\nbuSaveButton().click();",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Mobile number' within the element: <span.MuiTypography-root.MuiTypography-body1.MuiTypography-noWrap.css-wv3nvc> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Mobile number' within the element: <span.MuiTypography-root.MuiTypography-body1.MuiTypography-noWrap.css-wv3nvc> but never did.\n    at Context.eval (webpack://bu-testing/./cypress/helpers/global.js:45:13)",
                "diff": null
              },
              "uuid": "ed284e09-2fac-41cc-90b2-341283fb2dac",
              "parentUUID": "decae972-501b-48b2-9b4d-badfa8b16298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit label and placehoder ofdata source field",
              "fullTitle": "Nevigate the setting page and test the data source fields Edit label and placehoder ofdata source field",
              "timedOut": null,
              "duration": 2857,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const dsrcField = `Data source-${Date.now()}`;\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const totalPages = response.body.result.pages.totalNoOfPages;\n  const editDataSource = fieldData => {\n    cy.intercept(method.get, `**/fms/fields/${fieldData === null || fieldData === void 0 ? void 0 : fieldData.id}?*`).as(\"fieldDetail\");\n    searchNactionField(fieldData.label, '#edit', \"Edit\");\n    labelNplaceholder(dsrcField, `Please select the values`);\n    cy.wait(\"@fieldDetail\").then(({\n      response\n    }) => {\n      const destPip = response.body.result.catId.label;\n      cy.get(`[aria-label=${destPip}]`).parent().should(\"be.disabled\");\n      // headingNsubheading();\n      if (fieldData.selection === \"multi\") {\n        editMultiSelectionField();\n      } else {\n        editSingleSelectionField();\n      }\n    });\n  };\n  if (totalPages === 1) {\n    const dsrcFieldData = response.body.result.values.find(ele => ele.prop === \"dsrc\");\n    editDataSource(dsrcFieldData);\n  } else {\n    cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click(); // Move to last page\n    cy.wait(\"@fieldGrid\").then(({\n      response\n    }) => {\n      const dsrcFieldData = response.body.result.values.find(ele => ele.prop === \"dsrc\");\n      editDataSource(dsrcFieldData);\n    });\n  }\n});\nbudropdown(globalSel.dialogContent, `label`, dsrcField);\ncyGet(`${globalSel.dialogContent} [data-testid=\"datasourcefield-box-6mghg71wb\"] [data-testid=\"budropdown-box-ty1opau5a\"] input`).should(\"have.attr\", \"placeholder\", `Please select the values`);\n// preview(dsrcField, `Please select the values`)\nbuSaveButton().click();",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'label')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'label')\n    at editDataSource (webpack://bu-testing/./cypress/e2e/lms/setting/2_manageField/dsrcField.js:52:45)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/2_manageField/dsrcField.js:72:20)",
                "diff": null
              },
              "uuid": "66b0f422-efae-46ee-ba70-068fcd38c7ee",
              "parentUUID": "decae972-501b-48b2-9b4d-badfa8b16298",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ed284e09-2fac-41cc-90b2-341283fb2dac",
            "66b0f422-efae-46ee-ba70-068fcd38c7ee"
          ],
          "pending": [],
          "skipped": [],
          "duration": 20808,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "11fa0f84-d112-4b1b-bff6-73e20a4dcc77",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7c663fc4-f4e4-4572-825a-239976b32c6e",
          "title": "Nevigate the setting page and test the date and time fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create date and time field with Calendar Type",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date and time field with Calendar Type",
              "timedOut": null,
              "duration": 11213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dtmField = `dateNtime-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date and Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dtmField, `Please select Date & Time`);\ncy.get('[role=\"dialog\"] [data-testid=\"buswitch-button-79w8xnphk\"]').should(\"have.attr\", \"aria-checked\", \"false\");\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Calendar Type\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"None\", null, null, \"Past Dates\", globalSel.dialogTitleText);\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\ncyGet(`[data-testid=\"buradiogroup-formlabel-ofdcw41bb\"]`).contains(\"Time Format\");\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).first().find(`input`).should(\"have.value\", \"24\");\n// cy.componentLabel(lead.formLabel, \"Time Format\", \"input[value='12']\").should(\"be.checked\").and(\"have.attr\", \"type\", \"radio\")\n// cy.get('.MuiFormGroup-root > :nth-child(2) > .MuiTypography-root').should(\"have.text\", \"12hrs\")\n// cy.componentLabel(lead.formLabel, \"Time Format\", \"input[value='24']\").should(\"have.attr\", \"type\", \"radio\").click()\n// cy.get('.MuiFormGroup-root > :nth-child(1) > .MuiTypography-root').should(\"have.text\", \"24hrs\")\npreviewDateField(dtmField, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "8631c283-df19-4d16-8665-c389698f1195",
              "parentUUID": "7c663fc4-f4e4-4572-825a-239976b32c6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date and time field with Date Range Selection",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date and time field with Date Range Selection",
              "timedOut": null,
              "duration": 11257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const today = new Date();\nconst currentYear = today.getFullYear();\nconst currentDay = String(today.getDate());\nconst previousDate = new Date();\npreviousDate.setFullYear(previousDate.getFullYear() - 1);\nconst prevYear = previousDate.getFullYear();\nlet dtmField = `dateNtime-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date and Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dtmField, `Please select Date & Time`);\ncy.get('[role=\"dialog\"] button[role=\"switch\"]').click();\n// Choose Min Date\ncy.get('[placeholder= \"Min\"]').prev().find('button').click();\ndateDailogComponent(prevYear, \"1\");\ncy.get('.MuiPickersLayout-root > .MuiDialogActions-root > .MuiButtonBase-root').contains(\"OK\").click();\ncy.wait(250);\n// Choose Max Date\ncy.get('[placeholder= \"Max\"]').prev().find('button').click();\ndateDailogComponent(currentYear, currentDay);\ncy.get('.MuiPickersLayout-root > .MuiDialogActions-root > .MuiButtonBase-root').contains(\"OK\").click();\n// Calendar Type should be disabled when choose Date Range Selection\ncyGet(`[data-testid=\"withtitle-box-mp6w6v7ka\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).should(\"be.disabled\");\n// Restricte days\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\n// Choose date format\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(dtmField, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "e05d833e-19a2-4ac5-ae5c-cc5d5457cc60",
              "parentUUID": "7c663fc4-f4e4-4572-825a-239976b32c6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit date and time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit date and time field",
              "timedOut": null,
              "duration": 6738,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dtmFieldLabel = `dateNtime-${new Date().valueOf()}`;\nsearchField(\"dtm\", null, 'Edit');\nlabelNplaceholder(dtmFieldLabel, `Please select Date & Time`);\npreviewDateField(dtmFieldLabel, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "d8d62d81-1938-4589-8cb8-11f966f84dc2",
              "parentUUID": "7c663fc4-f4e4-4572-825a-239976b32c6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date field with Calendar Type",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date field with Calendar Type",
              "timedOut": null,
              "duration": 7460,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dateField = `Date-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dateField, `Please select Date`);\ncy.get('[role=\"dialog\"] [data-testid=\"buswitch-button-79w8xnphk\"]').should(\"have.attr\", \"aria-checked\", \"false\");\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Calendar Type\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"None\", null, null, \"Past Dates\", globalSel.dialogTitleText);\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\npreviewDateField(dateField, `Please select Date`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "69c1ab0b-a6a2-4888-aafc-43bb683693d8",
              "parentUUID": "7c663fc4-f4e4-4572-825a-239976b32c6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date field with Date Range Selection",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date field with Date Range Selection",
              "timedOut": null,
              "duration": 9999,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const today = new Date();\nconst currentYear = today.getFullYear();\nconst currentDay = String(today.getDate());\nconst previousDate = new Date();\npreviousDate.setFullYear(previousDate.getFullYear() - 1);\nconst prevYear = previousDate.getFullYear();\nlet dateField = `date-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dateField, `Please select Date`);\ncy.get('[role=\"dialog\"] button[role=\"switch\"]').click();\n// Choose Min Date\ncy.get('[placeholder= \"Min\"]').prev().find('button').click();\ndateDailogComponent(prevYear, \"1\");\ncy.wait(250);\n// Choose Max Date\ncy.get('[placeholder= \"Max\"]').prev().find('button').click();\ndateDailogComponent(currentYear, currentDay);\n// Calendar Type should be disabled when choose Date Range Selection\ncyGet(`[data-testid=\"withtitle-box-mp6w6v7ka\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).should(\"be.disabled\");\n// Restricte days\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\npreviewDateField(dateField, `Please select Date`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "2302fa05-7f22-45d6-a979-c7725d0a17f7",
              "parentUUID": "7c663fc4-f4e4-4572-825a-239976b32c6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit date field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit date field",
              "timedOut": null,
              "duration": 6923,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Date-${new Date().valueOf()}`;\nsearchField(\"dat\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Please select Date`);\npreviewDateField(fieldLabel, `Please select Date`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "16c9beb9-b07e-43ba-98e3-2f654f842102",
              "parentUUID": "7c663fc4-f4e4-4572-825a-239976b32c6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create time field",
              "timedOut": null,
              "duration": 4752,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let timeField = `Time-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(timeField, `Please select Time`);\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(timeField, `Please select Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "9fdec948-64ad-4d0d-9215-e6cf393b5585",
              "parentUUID": "7c663fc4-f4e4-4572-825a-239976b32c6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit time field",
              "timedOut": null,
              "duration": 5817,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Time-${new Date().valueOf()}`;\nsearchField(\"tim\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Please select Time`);\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(fieldLabel, `Please select Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "d3d92412-ce53-4fd8-8f61-50107596aa59",
              "parentUUID": "7c663fc4-f4e4-4572-825a-239976b32c6e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8631c283-df19-4d16-8665-c389698f1195",
            "e05d833e-19a2-4ac5-ae5c-cc5d5457cc60",
            "d8d62d81-1938-4589-8cb8-11f966f84dc2",
            "69c1ab0b-a6a2-4888-aafc-43bb683693d8",
            "2302fa05-7f22-45d6-a979-c7725d0a17f7",
            "16c9beb9-b07e-43ba-98e3-2f654f842102",
            "9fdec948-64ad-4d0d-9215-e6cf393b5585",
            "d3d92412-ce53-4fd8-8f61-50107596aa59"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 64159,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a5347f59-069f-43ce-99cd-c2a79bebe4b1",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8b781f3b-131e-488b-8eed-b8ad29a4f32a",
          "title": "Nevigate the setting page and test the email fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Field name should be unique",
              "fullTitle": "Nevigate the setting page and test the email fields Field name should be unique",
              "timedOut": null,
              "duration": 14673,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const roleOfUser = response.body.result.user.role;\n  const manageProperties = response.body.result.settings.permission[asset].manageProperties;\n  if (roleOfUser === \"std\" && manageProperties === false) {\n    buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n  } else {\n    cy.wait(\"@fieldGrid\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const existingField = response.body.result.values.find(fld => {\n        var _fld$group;\n        return ((_fld$group = fld.group) === null || _fld$group === void 0 ? void 0 : _fld$group.scope) === \"public\";\n      });\n      buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n      labelNplaceholder(existingField === null || existingField === void 0 ? void 0 : existingField.label, `Please Enter ${existingField === null || existingField === void 0 ? void 0 : existingField.label}`);\n      cyGet(`#string_label-helper-text`).should(\"contain.text\", \"Field label already exists\");\n      buSaveButton().should(\"be.disabled\");\n    });\n  }\n  ;\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 10000ms: `cy.wait()` timed out waiting `10000ms` for the 1st request to the route: `appAuth`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                "estack": "CypressError: Timed out retrying after 10000ms: `cy.wait()` timed out waiting `10000ms` for the 1st request to the route: `appAuth`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:76025:18)\n    at Object.errByPath (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:76079:10)\n    at checkForXhr (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:135700:84)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:135726:28)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144102:68)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144043:14)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/2_manageField/emailField.js:60:11)",
                "diff": null
              },
              "uuid": "ec45b3f8-c464-4dda-989d-81be5343dc94",
              "parentUUID": "8b781f3b-131e-488b-8eed-b8ad29a4f32a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Allow All",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Allow All",
              "timedOut": null,
              "duration": 5927,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fieldLabel = `Email-${new Date().valueOf()}`;\ncy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cy.wrap(response.body.result).as(\"appAuthResponse\");\n  const roleOfUser = response.body.result.user.role;\n  const manageProperties = response.body.result.settings.permission[asset].manageProperties;\n  if (roleOfUser === \"std\" && manageProperties === false) {\n    buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n  } else {\n    buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n    cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n    budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n    labelNplaceholder(fieldLabel, `Please Enter Email`);\n    cyGet('[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]').should(\"have.text\", \"Mode of Email\");\n    budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Allow All\");\n    preview(fieldLabel, `Please Enter Email`);\n    buSaveButton().click();\n  }\n  ;\n});\ncy.get(\"@appAuthResponse\").then(res => {\n  appAuthRes = res;\n});",
              "err": {},
              "uuid": "3e277ec9-fc8b-452b-a4f1-923cc13c6194",
              "parentUUID": "8b781f3b-131e-488b-8eed-b8ad29a4f32a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Allow some",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Allow some",
              "timedOut": null,
              "duration": 7008,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nconst roleOfUser = appAuthRes.user.role;\nconst manageProperties = appAuthRes.settings.permission[asset].manageProperties;\nif (roleOfUser === \"std\" && manageProperties === false) {\n  buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n} else {\n  buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n  cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n  budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n  emlComponentSel(label, \"Allow All\", \"Allow Some\", \"Select Domains\", \"gmail.com\");\n}\n;",
              "err": {},
              "uuid": "14f13d59-f65c-48d8-b85e-885141a9dcd2",
              "parentUUID": "8b781f3b-131e-488b-8eed-b8ad29a4f32a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit email field for Allow some Email domains",
              "fullTitle": "Nevigate the setting page and test the email fields Edit email field for Allow some Email domains",
              "timedOut": null,
              "duration": 10492,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  let assetPipId = response.body.result.values.map(ele => ele.id);\n  cy.wrap(assetPipId[0]).as(\"assetPipId\");\n});\ncy.get(\"@assetPipId\").then(response => {\n  assetPipelineId = response;\n});\nsearchField(\"eml\", null, 'Edit').then(field => {\n  cy.get('[data-testid=\"close-dialog\"]').click();\n  fieldId = field === null || field === void 0 ? void 0 : field.id;\n  cy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\n  searchField(\"phn\", field.label, 'Edit');\n  cy.wait(\"@getFieldById\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let modetype;\n    const mode = response.body.result.mode;\n    const exclude = response.body.result.excludes;\n    const updatedDomains = allowedMailDomain.filter(domain => !exclude.includes(domain));\n    if (mode === 1) {\n      modetype = \"Allow Some\";\n    } else if (mode === 0) {\n      modetype = \"Restrict Some\";\n    } else {\n      modetype = \"Allow All\";\n    }\n    emlComponentSel(label, modetype, \"Allow Some\", exclude[0], updatedDomains[0]);\n  });\n});",
              "err": {},
              "uuid": "f1065dcf-4b11-440a-8bd0-6dc6de20e7e3",
              "parentUUID": "8b781f3b-131e-488b-8eed-b8ad29a4f32a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Restrict some",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Restrict some",
              "timedOut": null,
              "duration": 6674,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nconst roleOfUser = appAuthRes.user.role;\nconst manageProperties = appAuthRes.settings.permission[asset].manageProperties;\nif (roleOfUser === \"std\" && manageProperties === false) {\n  buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n} else {\n  buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n  cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n  budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n  emlComponentSel(label, \"Allow All\", \"Allow Some\", \"Select Domains\", \"yahoo.com\");\n}\n;",
              "err": {},
              "uuid": "afd7218e-8fe1-4bf0-8e87-6e645d241192",
              "parentUUID": "8b781f3b-131e-488b-8eed-b8ad29a4f32a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit email field for Restricted Email domains",
              "fullTitle": "Nevigate the setting page and test the email fields Edit email field for Restricted Email domains",
              "timedOut": null,
              "duration": 10076,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nsearchField(\"eml\", null, 'Edit').then(field => {\n  cy.get('[data-testid=\"close-dialog\"]').click();\n  fieldId = field === null || field === void 0 ? void 0 : field.id;\n  cy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\n  searchField(\"phn\", field.label, 'Edit');\n  cy.wait(\"@getFieldById\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let modetype;\n    const mode = response.body.result.mode;\n    const exclude = response.body.result.excludes;\n    const updatedDomains = allowedMailDomain.filter(domain => !exclude.includes(domain));\n    if (mode === 1) {\n      modetype = \"Allow Some\";\n    } else if (mode === 0) {\n      modetype = \"Restrict Some\";\n    } else {\n      modetype = \"Allow All\";\n    }\n    emlComponentSel(label, modetype, \"Restrict Some\", exclude[0], updatedDomains[0]);\n  });\n});",
              "err": {},
              "uuid": "1a87107c-abba-452a-9af5-d82ec5f6b91e",
              "parentUUID": "8b781f3b-131e-488b-8eed-b8ad29a4f32a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e277ec9-fc8b-452b-a4f1-923cc13c6194",
            "14f13d59-f65c-48d8-b85e-885141a9dcd2",
            "f1065dcf-4b11-440a-8bd0-6dc6de20e7e3",
            "afd7218e-8fe1-4bf0-8e87-6e645d241192",
            "1a87107c-abba-452a-9af5-d82ec5f6b91e"
          ],
          "failures": [
            "ec45b3f8-c464-4dda-989d-81be5343dc94"
          ],
          "pending": [],
          "skipped": [],
          "duration": 54850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4774bd07-5ce8-4feb-94d8-7382e5ea7eb0",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "95e120aa-8445-4dba-a130-b11573f603c9",
          "title": "Nevigate the setting page and test the field group",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add new group",
              "fullTitle": "Nevigate the setting page and test the field group Add new group",
              "timedOut": null,
              "duration": 8646,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let groupName = `Group-${new Date().valueOf()}`;\ncy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.get(lead.typeBtn).contains(\"Add Group\").click();\ncy.get(lead.dialogTitle).should(\"have.text\", \"Create group\");\ncy.componentLabel(lead.formLabel, \"Create group\", \"input\").type(groupName);\ncy.get(\"#cancel\").should(\"have.text\", \"Cancel\");\ncy.get(\"#add\").click();",
              "err": {},
              "uuid": "45a3a0e8-a978-43af-ae33-76fc1d92f402",
              "parentUUID": "95e120aa-8445-4dba-a130-b11573f603c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Private group can't be edited and deleted",
              "fullTitle": "Nevigate the setting page and test the field group Private group can't be edited and deleted",
              "timedOut": null,
              "duration": 3770,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(1000);\n// cy.get('table > tbody >').children(\".MuiTableRow-root > :nth-child(2)\")\ncy.wait(\"@groupGrid\").then(({\n  response\n}) => {\n  let privateGroup = response.body.result.values.filter(ele => ele.scope == \"private\");\n  cy.get('table > tbody > :nth-child(1) > :nth-child(1)').contains(privateGroup[0].label);\n});\ncy.get('table > tbody > :nth-child(1) > :nth-child(3) #actions').click();\ncy.get(\"#edit\").trigger(\"mouseover\", {\n  force: true\n});\ncy.get('.MuiTooltip-tooltip').contains(\"Private group can't be edited\");\ncy.get('#edit > .MuiButtonBase-root ').should(\"have.attr\", \"aria-disabled\", \"true\");\ncy.get(\"#delete\").trigger(\"mouseover\", {\n  force: true\n});\ncy.get('.MuiTooltip-tooltip').contains(\"Private group can't be deleted\");\ncy.get('#delete > .MuiButtonBase-root ').should(\"have.attr\", \"aria-disabled\", \"true\");",
              "err": {},
              "uuid": "de5e5b00-d4ae-4c00-ae84-b447f7449a74",
              "parentUUID": "95e120aa-8445-4dba-a130-b11573f603c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate assigned fields count with API",
              "fullTitle": "Nevigate the setting page and test the field group Validate assigned fields count with API",
              "timedOut": null,
              "duration": 4887,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(1000);\ncy.recordCountOnPage(\"5\");\ncy.wait(\"@groupGrid\").then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.assignedFields);\n  let counts = abc.map(fields => {\n    let count = fields.count;\n    return count === 0 ? \"--\" : count;\n  });\n  cy.get('table > tbody >').children(\".MuiTableRow-root > :nth-child(2)\").each(($row, index) => {\n    cy.wrap($row).contains(counts[index]);\n  });\n});",
              "err": {},
              "uuid": "3fbcc54b-1ce6-4da0-9a28-d6ffe9ae2aae",
              "parentUUID": "95e120aa-8445-4dba-a130-b11573f603c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit group",
              "fullTitle": "Nevigate the setting page and test the field group Edit group",
              "timedOut": null,
              "duration": 7748,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let groupName = `Group-${new Date().valueOf()}`;\ncy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(2000);\ncy.recordCountOnPage(\"5\");\ncy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click();\n// cy.get('table > tbody ').find(':nth-child(3) #actions').first().click()\ncy.get(':nth-child(3) > .TableCell-cell > :nth-child(1) > .MuiBox-root > #actions').click();\n// cy.get(lead.typeBtn).contains(\"Add Group\").click()\ncy.get(\"#edit\").click();\ncy.get(lead.dialogTitle).should(\"have.text\", \"Rename group\");\ncy.componentLabel(lead.formLabel, \"Rename group\", \"input\").clear().type(groupName);\ncy.get(\"#cancel\").should(\"have.text\", \"Cancel\");\ncy.get(\"#add\").click();",
              "err": {},
              "uuid": "a1a4b226-0117-46d0-8a48-12db43fbb406",
              "parentUUID": "95e120aa-8445-4dba-a130-b11573f603c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete group",
              "fullTitle": "Nevigate the setting page and test the field group Delete group",
              "timedOut": null,
              "duration": 5655,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let msg1 = \"Delete Group\";\nlet msg2 = \"Are you sure! want to delete this group?\";\ncy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(1000);\ncy.recordCountOnPage(\"5\");\ncy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click();\ncy.wait(\"@groupGrid\").then(({\n  response\n}) => {\n  let groupName = response.body.result.values.slice(-1);\n  cy.log(JSON.stringify(groupName[0].assignedFields.count));\n  cy.get('table > tbody > :last > :nth-child(1)').contains(groupName[0].label);\n  cy.get('table > tbody > :last > :nth-child(3) #actions').click();\n  if (groupName[0].assignedFields.count == 0) {\n    cy.get(\"#delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n  } else {\n    cy.get(\"#delete\").trigger(\"mouseover\", {\n      force: true\n    });\n    cy.get('.MuiTooltip-tooltip').contains(\"Private group can't be deleted\");\n  }\n});",
              "err": {},
              "uuid": "1bc02125-8902-42f8-9deb-2895f97a303d",
              "parentUUID": "95e120aa-8445-4dba-a130-b11573f603c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "45a3a0e8-a978-43af-ae33-76fc1d92f402",
            "de5e5b00-d4ae-4c00-ae84-b447f7449a74",
            "3fbcc54b-1ce6-4da0-9a28-d6ffe9ae2aae",
            "a1a4b226-0117-46d0-8a48-12db43fbb406",
            "1bc02125-8902-42f8-9deb-2895f97a303d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30706,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9a17bc3e-9151-4f48-830d-3ebd79ab3451",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "07e29b94-148d-41a9-9b67-e38991ae2395",
          "title": "Navigate to setting page and create and update fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create Multi line text field",
              "fullTitle": "Navigate to setting page and create and update fields Create Multi line text field",
              "timedOut": null,
              "duration": 12393,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Multiline-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Multi line text\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${globalSel.butextfield}`, \"input\").type(3); // set min\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${globalSel.butextfield}`, \"input\").type(100); // set max\n// butextField(globalSel.butextfield, \"#max\").type(100)\ntextCaseFormat();\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"] > label`).should(\"have.text\", fieldLabel);\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"]`).find(\"textarea\").should(\"have.attr\", \"placeholder\", `Enter ${fieldLabel}`);\n// preview(fieldLabel, `Enter ${fieldLabel}`)\nbuSaveButton().click();\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.created);",
              "err": {},
              "uuid": "7791e88c-82c8-40aa-ab87-e05613f1b4f2",
              "parentUUID": "07e29b94-148d-41a9-9b67-e38991ae2395",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Multi line text field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Multi line text field",
              "timedOut": null,
              "duration": 11592,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Multiline-${new Date().valueOf()}`;\ncy.visit(`${Cypress.env(\"lmsUrl\")}/setting/properties`);\n// cy.wait(2000)\ncy.wait(\"@assetsPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let assetPipId = response.body.result.values.map(ele => ele.id);\n  cy.wrap(assetPipId[0]).as(\"assetPipId\");\n});\ncy.get(\"@assetPipId\").then(response => {\n  assetPipelineId = response;\n});\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\nfieldTypeFilterOnSetting(\"Multi line text\");\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"Multi line text\");\nsearchField(\"txa\", null, 'Edit');\n// cy.get(\"@mobileId\").then((response) => { mobFieldId = response?.id })\n// cy.get(\"@stageId\").then((response) => { stgFieldId = response?.id })\n// cy.get(\"@ownerId\").then((response) => { ownFieldId = response?.id })\n// cy.get('@fieldResp').then((response) => { fieldId = response?.id });\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${globalSel.butextfield}`, \"input\").clear().type(3); // edit min\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${globalSel.butextfield}`, \"input\").clear().type(150); // edit max\ntextCaseFormat();\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"] > label`).should(\"have.text\", fieldLabel);\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"]`).find(\"textarea\").should(\"have.attr\", \"placeholder\", `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", messages.updated);",
              "err": {},
              "uuid": "e4e8f8e7-105e-4eae-ae99-6ba54c4d83c8",
              "parentUUID": "07e29b94-148d-41a9-9b67-e38991ae2395",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7791e88c-82c8-40aa-ab87-e05613f1b4f2",
            "e4e8f8e7-105e-4eae-ae99-6ba54c4d83c8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23985,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4888141b-7fc6-4e81-a723-ee420aa3830c",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
      "file": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "92ccb423-4891-4691-b182-71edea9edc02",
          "title": "Nevigate the lead page and Test Header componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
          "file": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Header componet of lead management",
              "fullTitle": "Nevigate the lead page and Test Header componet Header componet of lead management",
              "timedOut": null,
              "duration": 10248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\n    Company profile Icon and Name should be present\n    Action, Export, Import and Create lead button should be present\n    Pipeline-user Show and add icon should be present\n    List view, Kanban view and Chart view button should be present\n*/\n// Company profile Icon and Name\ncy.wait(\"@appAuth\").then(({\n  response\n}) => {\n  cy.get('#bu-layout h6').should(\"have.text\", response.body.result.company.label);\n});\n// Action button\ncyGet(`[data-testid=\"Action\"]`).should(\"contain.text\", \"Action\");\n// Export button\ncyGet(`[data-testid=\"Export\"]`).should(\"contain.text\", \"Export\");\n// Import Button\ncyGet(`[data-testid=\"Import\"]`).should(\"contain.text\", \"Import\");\n// Create record button\ncyGet(`[data-testid=\"Create ${assetName}\"]`).should(\"contain.text\", `Create ${assetName}`);\n// Pipeline-user Show and add icon\ncy.wait(\"@crewPipelines\").then(({\n  response\n}) => {\n  let userOnPip = response.body.result.values.length;\n  if (userOnPip > 4) {\n    let userInPlusIcon = response.body.result.pages.totalRecords - 3;\n    cy.get('#bu-layout [data-testid=\"activitybar-box-txgt1t82k\"] [data-testid=\"buavatargroup-avatargroup-dovjvw4cl\"] .MuiAvatarGroup-avatar').contains(userInPlusIcon);\n  } else {\n    cy.get('#bu-layout [data-testid=\"activitybar-box-txgt1t82k\"] [data-testid=\"buavatargroup-avatargroup-dovjvw4cl\"] .MuiAvatarGroup-avatar').then($el => {\n      expect($el.length).be.eq(userOnPip);\n    });\n  }\n});\n// List view button\ncy.get('#bu-layout [aria-label=\"Grid view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");\n// Kanban view button\ncy.get('#bu-layout [aria-label=\"Kanban view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");\n// Chart view button\ncy.get('#bu-layout [aria-label=\"Chart view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");",
              "err": {},
              "uuid": "6f3d88b1-bf48-4f1d-a975-8fe04e24b2ff",
              "parentUUID": "92ccb423-4891-4691-b182-71edea9edc02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f3d88b1-bf48-4f1d-a975-8fe04e24b2ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10248,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fb7483c1-b736-4795-ae93-301178c9cc49",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
      "file": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "96201060-bdfa-4556-829f-0d37cba70ab4",
          "title": "Nevigate the lead page and Test Header componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
          "file": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Header componet of lead management",
              "fullTitle": "Nevigate the lead page and Test Header componet Header componet of lead management",
              "timedOut": null,
              "duration": 6483,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#app-routes > header > .MuiToolbar-root .MuiButtonBase-root > :first ');\n// .should(\"have.css\", \"color\", \"rgba(0, 0, 0, 0.6)\").and(\"have.css\", \"height\")\n// .and(\"have.css\", \"width\")\ncy.get('#app-routes > header a[href=\"/dashboard\"]').should(\"have.attr\", \"style\", \"display: flex;\");\ncy.get('#app-routes > header h6').should(\"have.text\", formatModuleName(module));\n// Check Light/Dark mode functionality\ncy.get('#app-routes > header [aria-label] :first .MuiTypography-root').then($item => {\n  let data = $item.text();\n  cy.log(data);\n  if (data === \"OFF\") {\n    cy.get('#app-routes > header [role=\"switch\"]').click({\n      force: true\n    });\n    cy.get('#app-routes > header [aria-label] :first .MuiTypography-root').should(\"have.text\", \"ON\");\n  } else if (data === \"ON\") {\n    cy.get('#app-routes > header [role=\"switch\"]').click({\n      force: true\n    });\n    cy.get('#app-routes > header [aria-label] :first .MuiTypography-root').should(\"have.text\", \"OFF\");\n  }\n});\n// Check Notifications button present on header or not\ncy.get('#app-routes > header [aria-label=\"Notifications\"]').click();\ncy.get('.MuiDrawer-paperAnchorRight h6').should(\"have.text\", \"Notifications\");\ncy.get('.MuiDrawer-paperAnchorRight .MuiBox-root > .MuiButtonBase-root .MuiSvgIcon-fontSizeSmall').click();\n// Check Settings button present on header or not\ncy.get('#app-routes > header [aria-label=\"Settings\"] button').should(\"have.attr\", \"type\", \"button\");\n// Check User Profile button present on header or not\ncy.get('#app-routes > header [aria-label=\"User Profile\"] button').should(\"have.attr\", \"aria-label\", \"account of current user\").click();\ncy.wait(\"@appAuth\").then(({\n  response\n}) => {\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.user.email);\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.company.label);\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.company.name);\n});",
              "err": {},
              "uuid": "4258763e-c2ff-4f64-a90f-b3fb38117641",
              "parentUUID": "96201060-bdfa-4556-829f-0d37cba70ab4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4258763e-c2ff-4f64-a90f-b3fb38117641"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6483,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "889cde1e-36fc-4e8a-a369-70843de9c902",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "07f8152f-c32f-4d0e-ae67-7cd521fe1c02",
          "title": "Navigate on field config page",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the presence of the \"Attach Field\", \"Create field\", \"Cancel\" and \"Apply\" button",
              "fullTitle": "Navigate on field config page Verify the presence of the \"Attach Field\", \"Create field\", \"Cancel\" and \"Apply\" button",
              "timedOut": null,
              "duration": 8377,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"title-dialog\"]').should(\"have.text\", \"Edit fields\");\ncy.get('[data-testid=\"Attach field\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Attach field\");\ncy.get('[data-testid=\"Create field\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Create field\");\ncy.get('[data-testid=\"cancel\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"cancel\");\ncy.get('[data-testid=\"Apply\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Apply\");",
              "err": {},
              "uuid": "46826eae-bac6-45cb-9ade-77e97810622b",
              "parentUUID": "07f8152f-c32f-4d0e-ae67-7cd521fe1c02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the presence of the System required field on form config",
              "fullTitle": "Navigate on field config page Verify the presence of the System required field on form config",
              "timedOut": null,
              "duration": 8269,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait('@fieldConfig').then(interception => {\n  const responseBody = interception.response.body;\n  const values = responseBody.result.values;\n  const filteredFields = values.filter(field => field.system && field.required);\n  const labels = filteredFields.map(field => field.label);\n  cy.log(labels.join(', '));\n  cy.get('[data-testid=\"buformeditor-listitemtext-ofe56xosa\"]').contains(\"System Fields\");\n  labels.forEach(label => {\n    cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input[placeholder=\"Search...\"]').clear({\n      force: true\n    }).type(label, {\n      force: true\n    });\n    cy.get('[data-testid=\"propertylist-listitemtext-esgc2itka\"]').first().should('have.text', label);\n    cy.get('[data-testid=\"propertylist-checkbox-9qc6i0a6w\"] input').should('have.attr', 'disabled');\n    // .and('have.attr', 'checked');\n  });\n});",
              "err": {},
              "uuid": "0fcdef12-f1f6-4a13-8214-3d4bc08b1278",
              "parentUUID": "07f8152f-c32f-4d0e-ae67-7cd521fe1c02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the System field should be checkable or uncheckable on form config",
              "fullTitle": "Navigate on field config page Verify the System field should be checkable or uncheckable on form config",
              "timedOut": null,
              "duration": 6920,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait('@fieldConfig').then(interception => {\n  const responseBody = interception.response.body;\n  const values = responseBody.result.values;\n  const filteredFields = values.filter(field => field.system);\n  const labels = filteredFields.map(field => field.label);\n  cy.log(labels.join(', '));\n  cy.get('[data-testid=\"buformeditor-listitemtext-ofe56xosa\"]').contains(\"System Fields\");\n  labels.forEach(label => {\n    cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input[placeholder=\"Search...\"]').clear({\n      force: true\n    }).type(label, {\n      force: true\n    });\n    cy.get('[data-testid=\"propertylist-listitemtext-esgc2itka\"]').first().should('have.text', label);\n    cy.get('[data-testid=\"propertylist-checkbox-9qc6i0a6w\"] input').then($input => {\n      if ($input.is(':checked')) {\n        cy.wrap($input).uncheck({\n          force: true\n        });\n      } else {\n        cy.wrap($input).check({\n          force: true\n        });\n      }\n    });\n  });\n});",
              "err": {},
              "uuid": "efbe211f-1d67-4339-91e0-dcb69a29180b",
              "parentUUID": "07f8152f-c32f-4d0e-ae67-7cd521fe1c02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select property and Make required and remove required and de-select property ",
              "fullTitle": "Navigate on field config page Select property and Make required and remove required and de-select property ",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "//Check field from field config, make required and add on form config\ncy.wait(\"@fieldConfig\").then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(item => item.system === false).slice(-1);\n  let fieldId = fieldData[0].id.toString();\n  let fieldName = fieldData[0].label.toString();\n  cy.get('.MuiFormControl-root [placeholder=\"Search...\"]').type(fieldName);\n  cy.get(':nth-child(1) > .MuiListItem-root > .MuiFormControlLabel-root input').check();\n  cy.get(`[data-rbd-droppable-id=\"column\"]`).children(`[data-rbd-draggable-id=${fieldId}]`).contains(fieldName);\n});\n// cy.get(':nth-child(1) > .MuiListItem-root > .MuiFormControlLabel-root input').check()\n// cy.get('.MuiGrid-item > :last')\n// cy.get('.MuiFormControl-root [placeholder=\"Search...\"]')\n// .type(Cypress.env(\"fieldName\"))\n// cy.get('input[name=\"checkedB\"]').check(fieldName)\n// cy.get('[data-rbd-droppable-id=\"column\"]').find('[type=\"checkbox\"]').last().check()\n// cy.get(lead.typeBtn).contains(\"Apply\").click()\n// cy.get('#create-lead .MuiFormControl-root label').contains(Cypress.env(\"fieldName\"))\n// cy.get(`#create-lead .MuiFormControl-root [placeholder='Enter ${Cypress.env(\"fieldName\")}']`).\n//     should(\"have.attr\", \"required\")\n// //uncheck the field from field config\n// cy.get(lead.typeBtn).contains(\"Add fields\").click()\n// cy.get('[data-rbd-droppable-id=\"column\"]').find('[type=\"checkbox\"]').last().uncheck()\n// cy.get('.MuiFormControl-root [placeholder=\"Search...\"]').type(Cypress.env(\"fieldName\"))\n// cy.get('input[name=\"checkedB\"]').uncheck()\n// cy.get(lead.typeBtn).contains(\"Apply\").click()",
              "err": {},
              "uuid": "fa7a574c-7e25-4e1e-baa4-cb50f7f01fcb",
              "parentUUID": "07f8152f-c32f-4d0e-ae67-7cd521fe1c02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46826eae-bac6-45cb-9ade-77e97810622b",
            "0fcdef12-f1f6-4a13-8214-3d4bc08b1278",
            "efbe211f-1d67-4339-91e0-dcb69a29180b"
          ],
          "failures": [],
          "pending": [
            "fa7a574c-7e25-4e1e-baa4-cb50f7f01fcb"
          ],
          "skipped": [],
          "duration": 23566,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "90cd9833-47ec-4b97-9960-d915cb009f1a",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ab6023c3-3d2e-4092-be6f-652903d62229",
          "title": "Nevigate the lead page and create new fields",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create single line text field",
              "fullTitle": "Nevigate the lead page and create new fields Create single line text field",
              "timedOut": null,
              "duration": 10267,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let stringField = `String-${new Date().valueOf()}`;\ncy.get(lead.inputField).should(\"have.value\", \"Single line text\");\ncy.wait(\"@groupList\").then(({\n  response\n}) => {\n  let privateGroup = response.body.result.values.filter(ele => ele.scope == \"private\");\n  cy.get(`input[name=\"Select Group\"]`).should(\"have.value\", privateGroup[0].label);\n});\n(0, _field.labelNplaceholder)(stringField, `Enter ${stringField}`);\n(0, _global.butextField)(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${_globalSel.default.butextfield}`, \"input\").type(3); // set min\n(0, _global.butextField)(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${_globalSel.default.butextfield}`, \"input\").type(30); // set max\n(0, _field.textCaseFormat)();\n(0, _field.preview)(stringField, `Enter ${stringField}`);\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.created);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"Create Approval\"]`, but never found it.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Nevigate the lead page and ...`",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"Create Approval\"]`, but never found it.\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Nevigate the lead page and ...`\n    at buButton (webpack://bu-testing/./cypress/helpers/global.js:9:53)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/2_fields/addFields.js:17:17)",
                "diff": null
              },
              "uuid": "8a44d59a-2fdc-46d7-bfb3-7e48064366a8",
              "parentUUID": "ab6023c3-3d2e-4092-be6f-652903d62229",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create dropdown field",
              "fullTitle": "Nevigate the lead page and create new fields Create dropdown field",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dropdownField = `Dropdown-${new Date().valueOf()}`;\n(0, _global.budropdownInput)(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Dropdown\", _globalSel.default.dialogTitleText);\ncy.wait(\"@groupList\").then(({\n  response\n}) => {\n  let publicGroup = response.body.result.values.filter(ele => ele.scope == \"public\");\n  cy.get(`input[name=\"Select Group\"]`).click();\n  cy.get(lead.chooseOptions).contains(publicGroup[0].label).click();\n});\n(0, _field.labelNplaceholder)(dropdownField, `Enter ${dropdownField}`);\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"] input`).should(\"have.value\", \"Option 1\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get('[data-testid=\"optionslist-textfield-ud6koj7f1\"] input').eq(1).should(\"have.value\", \"Option 2\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get('[data-testid=\"optionslist-textfield-ud6koj7f1\"] input').eq(2).should(\"have.value\", \"Option 3\");\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.created);",
              "err": {},
              "uuid": "8c6ef334-50d0-471d-97db-cb1af01976a6",
              "parentUUID": "ab6023c3-3d2e-4092-be6f-652903d62229",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8a44d59a-2fdc-46d7-bfb3-7e48064366a8"
          ],
          "pending": [],
          "skipped": [
            "8c6ef334-50d0-471d-97db-cb1af01976a6"
          ],
          "duration": 10267,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ef0df73e-e818-4380-b9c0-c493821148e2",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8c64a791-b942-4e23-aafa-0d8b60ed154c",
          "title": "Test the functionality of attach field",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach field",
              "fullTitle": "Test the functionality of attach field Attach field",
              "timedOut": null,
              "duration": 14653,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"Attach field\"]').should(\"have.text\", \"Attach field\").click();\ncy.wait(500);\ncy.get(`[data-testid=\"title-dialog\"] p`).contains(\"Attach field\");\n// cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').last().type(\"jddnn\")\ncy.wait(\"@availableField\").then(({\n  response\n}) => {\n  if (response.body.result.values.length == 0) {\n    cy.log(\"Fields are not available for attach\");\n    cy.get('#cancel').click();\n  } else {\n    let field = response.body.result.values.map(ele => ele.label);\n    cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').last().type(field[0]);\n    // cy.get('.MuiDialog-container .MuiDialogContent-root > :last [placeholder=\"Search...\"]')\n    cy.wait(200);\n    cy.get('[data-testid=\"attachfields-collapse-uvsmqfw9l\"] [data-testid=\"propertylist-listitemtext-esgc2itka\"]').contains(field[0]).click();\n    cy.get('#attach').click();\n    cy.wait(500);\n    cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').type(field[0]);\n    cy.get('[data-testid=\"propertylist-box-k4wxytcqz\"] [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').last().should(\"have.text\", field[0]);\n    cy.get('[data-testid=\"propertylist-box-k4wxytcqz\"] input').last().should(\"be.checked\");\n  }\n});\ncy.get('[data-testid=\"close-dialog\"]').click();\ncy.get('[data-testid=\"title-dialog\"] p').eq(1).contains(\"Warning\");\ncy.get('[data-testid=\"buformeditor-typography-3mxztjea3\"]');\ncy.get('[data-testid=\"Confirm\"]').click();",
              "err": {},
              "uuid": "905cfff0-0f91-4674-b57b-81d2d5bbaf83",
              "parentUUID": "8c64a791-b942-4e23-aafa-0d8b60ed154c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "905cfff0-0f91-4674-b57b-81d2d5bbaf83"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d62ae6c3-4246-45ed-9b55-c08dbd6b10fb",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "65308839-f8c8-4c82-a3d9-e355bb792d58",
          "title": "Nevigate the lead page and Update fields",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Edit Single line text field",
              "fullTitle": "Nevigate the lead page and Update fields Edit Single line text field",
              "timedOut": null,
              "duration": 24769,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let singleField = `Single line-${new Date().valueOf()}`;\ncy.wait(\"@fieldList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(ele => ele.required == false && ele.system == false && ele.prop == \"str\").slice(-1);\n  cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input').type(fieldData[0].label);\n  cy.get('[data-testid=\"actions-iconbutton-4zbo8fvnl\"]').first().click();\n  cy.get('[data-testid=\"actions-box-qexr9sum4\"]').contains('Edit').click({\n    force: true\n  });\n  cy.get('[data-testid=\"input-muiinput-t8mkcx347\"] input[name=\"Select Field Type\"]').should(\"have.value\", \"Single line text\");\n  // Field label and Placeholder\n  (0, _field.labelNplaceholder)(singleField, `Enter ${singleField}`);\n  // Min and Max\n  cy.get('[data-testid=\"withtitle-box-mp6w6v7ka\"] label').contains(\"Min Length\").next().clear().type(faker.number.int({\n    min: 3,\n    max: 9\n  }));\n  cy.get('[data-testid=\"withtitle-box-mp6w6v7ka\"] label').contains(\"Max Length\").next().clear().type(faker.number.int({\n    min: 15,\n    max: 100\n  }));\n  // Text Case\n  (0, _field.textCaseFormat)();\n  // Preview\n  cy.get('#single_text_field-label').should(\"have.text\", singleField);\n  cy.get('#single_text_field').should(\"have.attr\", \"placeholder\", `Enter ${singleField}`);\n});\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.updated);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `.MuiSnackbarContent-message`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `.MuiSnackbarContent-message`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/2_fields/editFields.js:43:66)",
                "diff": null
              },
              "uuid": "b0a5ac0a-9de0-43da-9205-e168d6ceb947",
              "parentUUID": "65308839-f8c8-4c82-a3d9-e355bb792d58",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit dropdown field",
              "fullTitle": "Nevigate the lead page and Update fields Edit dropdown field",
              "timedOut": null,
              "duration": 15053,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let basField = `Dropdown-${new Date().valueOf()}`;\ncy.wait(500);\ncy.wait(\"@fieldList\").then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(ele => ele.required == false && ele.system == false && ele.prop == \"bas\").slice(-1);\n  // cy.log(\"fieldData\", JSON.stringify(fieldData[0].label))\n  cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input').type(fieldData[0].label);\n  cy.get('[data-testid=\"actions-iconbutton-4zbo8fvnl\"]').first().click();\n  cy.get('[data-testid=\"actions-box-qexr9sum4\"]').contains('Edit').click({\n    force: true\n  });\n  cy.get('[data-testid=\"input-muiinput-t8mkcx347\"] input[name=\"Select Field Type\"]').should(\"have.value\", \"Dropdown\").and(\"have.prop\", \"disabled\");\n  (0, _field.labelNplaceholder)(basField, `Enter ${basField}`);\n});\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"]`).first().clear().type(\"Edited Option 1\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"]`).last().clear().type(`Option-${new Date().valueOf()}`);\ncy.get('[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"] input[value=\"multi\"]').then($ele => {\n  if ($ele.is(':disabled')) {\n    cy.log(\"Multi-selection option type can't be edit\");\n  } else {\n    cy.get('[value=\"single\"]').click();\n    cy.get('[value=\"multi\"]').click();\n  }\n});\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.updated);",
              "err": {},
              "uuid": "5c28acab-a5f2-4c9f-88b8-23b1223931ad",
              "parentUUID": "65308839-f8c8-4c82-a3d9-e355bb792d58",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c28acab-a5f2-4c9f-88b8-23b1223931ad"
          ],
          "failures": [
            "b0a5ac0a-9de0-43da-9205-e168d6ceb947"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39822,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e8ea2859-56ed-4516-8755-dfa29cd66b7a",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f78d367e-5099-4c85-8097-d4356746c888",
          "title": "Nevigate the lead page and Create Lead",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "29aaf756-dfa9-4de6-8391-0d833586b3f0",
              "title": "Create record",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create record with \"str\", \"phn\", \"num\", \"txa\", \"eml\", \"url\" fields",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"str\", \"phn\", \"num\", \"txa\", \"eml\", \"url\" fields",
                  "timedOut": null,
                  "duration": 19635,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  userRole = response.body.result.user.role;\n  cy.wait(\"@existsPipeline\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    createAccess = response.body.result.tools.create;\n    cyGet(`[data-testid=\"butoolbar-grid-2yad1y8r5\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).click();\n    cy.wait(\"@getPipeline\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      pipelineIds = response.body.result.values.map(ele => ele.id);\n      createRecordScript([\"str\", \"phn\", \"num\", \"txa\", \"eml\", \"url\"], userRole, createAccess, pipelineIds);\n    });\n  });\n});",
                  "err": {},
                  "uuid": "19cb8892-1776-4cc7-bb25-0c0e35061369",
                  "parentUUID": "29aaf756-dfa9-4de6-8391-0d833586b3f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"bas\", \"rtg\"",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"bas\", \"rtg\"",
                  "timedOut": null,
                  "duration": 9404,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"bas\", \"rtg\"], userRole, createAccess, pipelineIds);",
                  "err": {},
                  "uuid": "beb6f17f-9eea-4ed5-874d-fba6c74cf721",
                  "parentUUID": "29aaf756-dfa9-4de6-8391-0d833586b3f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"dsrc\", \"asc\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"dsrc\", \"asc\" field",
                  "timedOut": null,
                  "duration": 6681,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"dsrc\", \"asc\"], userRole, createAccess, pipelineIds);",
                  "err": {
                    "message": "CypressError: `cy.request()` failed on:\n\nhttp://api.buopso.lcl/fms/forms/config/create?module=cnf&asset=approval&catId=6879f17dfc26c68689f98fb0\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: http://api.buopso.lcl/fms/forms/config/create?module=cnf&asset=approval&catId=6879f17dfc26c68689f98fb0\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJxYS5hdXRvbWF0aW9uMkB5b3BtYWlsLmNvbSIsInR5cGUiOiJlbWFpbCIsImlhdCI6MTc1MzM2MTE2MSwiZXhwIjoxNzUzMzYxNzYxfQ.ZMroHrXB1mnQfsDnCXe64RNzkyXKIt6XpAIteL_u4dg\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.14.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"refToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJxYS5hdXRvbWF0aW9uMkB5b3BtYWlsLmNvbSIsInR5cGUiOiJlbWFpbCIsInNlc3Npb25JZCI6IjY4ODIyYjA5ODQwNGFlMDgzZTZiMGRlMiIsImlhdCI6MTc1MzM2MTE2MSwiZXhwIjoxNzUzNDQ3NTYxfQ.WaAK7PzlIoOUMeNVPLHp72WBMuZHxCDaXgyC91SSk-0; ssid=68822b098404ae083e6b0de2; _rnm=one,cnf; mode=dark\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 125\n}\nBody: {\"fields\":[\"65166fe89a2d3227fe64e0c0\",\"65166fe89a2d3227fe64e0be\",\"64ec81c86ab5735fdd037fb4\",null,\"6879f1e7fc26c68689f990aa\"]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"server\": \"nginx\",\n  \"date\": \"Thu, 24 Jul 2025 12:46:33 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"101\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"vary\": \"Origin\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-trace-id\": \"e55743a3-a705-485b-9dba-9b5fd267e1f5\",\n  \"etag\": \"W/\\\"65-N1eAB50TKHnnFOYhWecoiW+85Eg\\\"\"\n}\nBody: {\n  \"success\": false,\n  \"message\": \"Invalid input fields.3\",\n  \"traceId\": \"e55743a3-a705-485b-9dba-9b5fd267e1f5\"\n}\n\n\nhttps://on.cypress.io/request",
                    "estack": "CypressError: `cy.request()` failed on:\n\nhttp://api.buopso.lcl/fms/forms/config/create?module=cnf&asset=approval&catId=6879f17dfc26c68689f98fb0\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: http://api.buopso.lcl/fms/forms/config/create?module=cnf&asset=approval&catId=6879f17dfc26c68689f98fb0\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJxYS5hdXRvbWF0aW9uMkB5b3BtYWlsLmNvbSIsInR5cGUiOiJlbWFpbCIsImlhdCI6MTc1MzM2MTE2MSwiZXhwIjoxNzUzMzYxNzYxfQ.ZMroHrXB1mnQfsDnCXe64RNzkyXKIt6XpAIteL_u4dg\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.14.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"refToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJxYS5hdXRvbWF0aW9uMkB5b3BtYWlsLmNvbSIsInR5cGUiOiJlbWFpbCIsInNlc3Npb25JZCI6IjY4ODIyYjA5ODQwNGFlMDgzZTZiMGRlMiIsImlhdCI6MTc1MzM2MTE2MSwiZXhwIjoxNzUzNDQ3NTYxfQ.WaAK7PzlIoOUMeNVPLHp72WBMuZHxCDaXgyC91SSk-0; ssid=68822b098404ae083e6b0de2; _rnm=one,cnf; mode=dark\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 125\n}\nBody: {\"fields\":[\"65166fe89a2d3227fe64e0c0\",\"65166fe89a2d3227fe64e0be\",\"64ec81c86ab5735fdd037fb4\",null,\"6879f1e7fc26c68689f990aa\"]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"server\": \"nginx\",\n  \"date\": \"Thu, 24 Jul 2025 12:46:33 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"101\",\n  \"connection\": \"keep-alive\",\n  \"x-powered-by\": \"Express\",\n  \"vary\": \"Origin\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-trace-id\": \"e55743a3-a705-485b-9dba-9b5fd267e1f5\",\n  \"etag\": \"W/\\\"65-N1eAB50TKHnnFOYhWecoiW+85Eg\\\"\"\n}\nBody: {\n  \"success\": false,\n  \"message\": \"Invalid input fields.3\",\n  \"traceId\": \"e55743a3-a705-485b-9dba-9b5fd267e1f5\"\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:133224:72)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1701:18)\n    at _drainQueueStep (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at request (webpack://bu-testing/./cypress/selector/utility.js:33:14)\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:338:23)",
                    "diff": null
                  },
                  "uuid": "c4a42594-e70f-4aca-82f1-217189bb3c43",
                  "parentUUID": "29aaf756-dfa9-4de6-8391-0d833586b3f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"rad\", \"chk\" fields",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"rad\", \"chk\" fields",
                  "timedOut": null,
                  "duration": 6951,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"rad\", \"chk\"], userRole, createAccess, pipelineIds);",
                  "err": {},
                  "uuid": "e96a0678-8c1e-42c8-89e5-246b60c76ec5",
                  "parentUUID": "29aaf756-dfa9-4de6-8391-0d833586b3f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "19cb8892-1776-4cc7-bb25-0c0e35061369",
                "beb6f17f-9eea-4ed5-874d-fba6c74cf721",
                "e96a0678-8c1e-42c8-89e5-246b60c76ec5"
              ],
              "failures": [
                "c4a42594-e70f-4aca-82f1-217189bb3c43"
              ],
              "pending": [],
              "skipped": [],
              "duration": 42671,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d996ec6e-1e01-4334-85e7-5b39696377c6",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7eb6d660-5a97-4918-9b4a-4db50757bb12",
          "title": "Nevigate on lead asset page and edit record",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Edit record with single line text field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with single line text field",
              "timedOut": null,
              "duration": 15248,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  userRole = response.body.result.user.role;\n  cy.wait(\"@existsPipeline\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    editAccess = response.body.result.tools.edit;\n    cyGet(`[data-testid=\"butoolbar-grid-2yad1y8r5\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).click();\n    cy.wait(\"@getPipeline\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      pipelineIds = response.body.result.values.map(ele => ele.id);\n      updateRecordScript([\"str\"], userRole, editAccess, pipelineIds);\n    });\n  });\n});",
              "err": {},
              "uuid": "5c1c65f7-ff53-4c1c-9ce3-846f08f09c8d",
              "parentUUID": "7eb6d660-5a97-4918-9b4a-4db50757bb12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with multi line text field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with multi line text field",
              "timedOut": null,
              "duration": 12580,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"txa\"], userRole, editAccess, pipelineIds);",
              "err": {},
              "uuid": "464a1089-49f8-449c-8a3f-6d5bb6f000e6",
              "parentUUID": "7eb6d660-5a97-4918-9b4a-4db50757bb12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with email field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with email field",
              "timedOut": null,
              "duration": 10040,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"eml\"], userRole, editAccess, pipelineIds);",
              "err": {},
              "uuid": "717d7261-e56b-4de9-adc4-156026c15180",
              "parentUUID": "7eb6d660-5a97-4918-9b4a-4db50757bb12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with number field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with number field",
              "timedOut": null,
              "duration": 10690,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"num\"], userRole, editAccess, pipelineIds);",
              "err": {},
              "uuid": "6159a5af-6d9f-4bb6-af0d-5ba5fd7fe7ca",
              "parentUUID": "7eb6d660-5a97-4918-9b4a-4db50757bb12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with url field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with url field",
              "timedOut": null,
              "duration": 13604,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"url\"], userRole, editAccess, pipelineIds);",
              "err": {},
              "uuid": "2fc9c96e-a410-400c-af9f-29e673b01325",
              "parentUUID": "7eb6d660-5a97-4918-9b4a-4db50757bb12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with simple dropdown field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with simple dropdown field",
              "timedOut": null,
              "duration": 10210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"bas\"], userRole, editAccess, pipelineIds);",
              "err": {},
              "uuid": "ad45ff9e-7d9b-451d-a016-05f56c0dc1a0",
              "parentUUID": "7eb6d660-5a97-4918-9b4a-4db50757bb12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with checkbox field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with checkbox field",
              "timedOut": null,
              "duration": 4245,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"chk\"], userRole, editAccess, pipelineIds);",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'body')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'body')\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:384:40)",
                "diff": null
              },
              "uuid": "f2dd4768-bb87-454f-a253-9167268385e5",
              "parentUUID": "7eb6d660-5a97-4918-9b4a-4db50757bb12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with radio field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with radio field",
              "timedOut": null,
              "duration": 10605,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"rad\"], userRole, editAccess, pipelineIds);",
              "err": {},
              "uuid": "0e68e3d6-e3ca-47e2-a811-2b9d5b029e5b",
              "parentUUID": "7eb6d660-5a97-4918-9b4a-4db50757bb12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with data source field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with data source field",
              "timedOut": null,
              "duration": 2079,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"dsrc\"], userRole, editAccess, pipelineIds);",
              "err": {
                "message": "Error: Field not found for given prop",
                "estack": "Error: Field not found for given prop\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:377:40)",
                "diff": null
              },
              "uuid": "6d9885ac-7be8-4de2-a9f8-7cbe124d7d7d",
              "parentUUID": "7eb6d660-5a97-4918-9b4a-4db50757bb12",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c1c65f7-ff53-4c1c-9ce3-846f08f09c8d",
            "464a1089-49f8-449c-8a3f-6d5bb6f000e6",
            "717d7261-e56b-4de9-adc4-156026c15180",
            "6159a5af-6d9f-4bb6-af0d-5ba5fd7fe7ca",
            "2fc9c96e-a410-400c-af9f-29e673b01325",
            "ad45ff9e-7d9b-451d-a016-05f56c0dc1a0",
            "0e68e3d6-e3ca-47e2-a811-2b9d5b029e5b"
          ],
          "failures": [
            "f2dd4768-bb87-454f-a253-9167268385e5",
            "6d9885ac-7be8-4de2-a9f8-7cbe124d7d7d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 89301,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c620bd46-f814-4af0-abb8-4ea2045d3d3d",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3b887dc0-8ea0-425d-852e-40a29ed118f0",
          "title": "Visit the import page and import record",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Ensure the asset box is available for import on the Import page.",
              "fullTitle": "Visit the import page and import record Ensure the asset box is available for import on the Import page.",
              "timedOut": null,
              "duration": 5318,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getAsset\", {\n  timeout: 15000\n}).then(({\n  response\n}) => {\n  var _response$body, _assetData, _assetData2;\n  assetData = response === null || response === void 0 || (_response$body = response.body) === null || _response$body === void 0 || (_response$body = _response$body.result) === null || _response$body === void 0 ? void 0 : _response$body.find(ast => ast.id === asset);\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData = assetData) === null || _assetData === void 0 ? void 0 : _assetData.label).next().should(\"contain.text\", assetDescription(asset));\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData2 = assetData) === null || _assetData2 === void 0 ? void 0 : _assetData2.label).parent().find(`button [aria-label=\"Select pipeline\"]`);\n});",
              "err": {},
              "uuid": "719c2a91-4bf6-47d3-81d2-0e9f34c45cef",
              "parentUUID": "3b887dc0-8ea0-425d-852e-40a29ed118f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ensure the Import button is disabled until a pipeline is selected.",
              "fullTitle": "Visit the import page and import record Ensure the Import button is disabled until a pipeline is selected.",
              "timedOut": null,
              "duration": 1122,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _assetData3;\n// cy.wait(\"@getAsset\", { timeout: 15000 }).then(({ response }) => {\n//     const assetData = response?.body?.result?.find(ast => ast.id === asset)\ncyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData3 = assetData) === null || _assetData3 === void 0 ? void 0 : _assetData3.label).parent().find(`button [aria-label=\"Select pipeline\"]`).should(\"contain.text\", \"Select pipeline\");\ncyGet(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).should(\"be.disabled\");\n// })",
              "err": {},
              "uuid": "6baa1fd7-4b0e-4723-bd9e-523568e0a2a5",
              "parentUUID": "3b887dc0-8ea0-425d-852e-40a29ed118f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Download sample spreadsheet",
              "fullTitle": "Visit the import page and import record Download sample spreadsheet",
              "timedOut": null,
              "duration": 1546,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _assetData4;\n// cy.wait(\"@getAsset\", { timeout: 10000 }).then(({ response }) => {\n//     const assetData = response?.body?.result?.find(ast => ast.id === asset)\ncyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData4 = assetData) === null || _assetData4 === void 0 ? void 0 : _assetData4.label).parent().find(`button [aria-label=\"Select pipeline\"]`).click();\ncy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _assetData5;\n  const totalPipelines = response.body.result.pages.totalRecords;\n  const pipelineLabel = response.body.result.values.slice(0, 1).map(pip => pip.label);\n  cy.log(JSON.stringify(pipelineLabel));\n  if (totalPipelines > 5) {\n    buSearchbox(globalSel.search, pipelineLabel[0]);\n  }\n  budropdownOption(pipelineLabel[0]).first().click();\n  cyGet(`[data-testid=\"download\"]`).contains(\"Download sample spreadsheet\").click();\n  cyGet(`[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`).contains(\"Download sample spreadsheet\");\n  cyGet(`[data-testid=\"downloaddrawer-typography-9qmfph90r\"]`).contains(\"Sample import files\");\n  cyGet(`[data-testid=\"downloaddrawer-typography-j1aqze5i1\"]`).contains(\"This sample file shows the required column headers you need for your import file\");\n  cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`).first().find(`[data-testid=\"downloaddrawer-box-yv4v1mdli\"] [data-testid=\"downloaddrawer-typography-lysrpjimb\"]`).contains((_assetData5 = assetData) === null || _assetData5 === void 0 ? void 0 : _assetData5.label);\n  cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`).first().find(`[data-testid=\"downloaddrawer-b-ft7iumddc\"]`).contains(pipelineLabel[0]);\n  cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`).first().find(`[data-testid=\"downloaddrawer-typography-xj4o496p9\"]`).contains(\"CSV\");\n});\n// cyGet(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).should(\"be.disabled\")\n// })",
              "err": {},
              "uuid": "792bf9b7-8805-48ef-b571-54f7374d876d",
              "parentUUID": "3b887dc0-8ea0-425d-852e-40a29ed118f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Import file and generate record",
              "fullTitle": "Visit the import page and import record Import file and generate record",
              "timedOut": null,
              "duration": 9010,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _assetData6;\n// cy.wait(\"@getAsset\", { timeout: 10000 }).then(({ response }) => {\n//     const assetData = response?.body?.result?.find(ast => ast.id === asset)\ncyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData6 = assetData) === null || _assetData6 === void 0 ? void 0 : _assetData6.label).parent().find(`button [aria-label=\"Select pipeline\"]`).click();\ncy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _assetData7;\n  const totalPipelines = response.body.result.pages.totalRecords;\n  const pipelineLabel = response.body.result.values.slice(0, 1).map(pip => pip.label);\n  const fileName = getFileForAsset(asset, pipelineLabel[0]);\n  cy.log(JSON.stringify(pipelineLabel));\n  if (totalPipelines > 5) {\n    buSearchbox(globalSel.search, pipelineLabel[0]);\n  }\n  budropdownOption(pipelineLabel[0]).first().click({\n    force: true\n  });\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData7 = assetData) === null || _assetData7 === void 0 ? void 0 : _assetData7.label).parent().find(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).click();\n  cyGet(`[data-testid=\"uploadfile-input-r5bkv246o\"]`).selectFile(fileName, {\n    force: true\n  });\n  twosecondWait();\n  cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n  twosecondWait();\n  cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n  cyGet(`#fileName-label`).should(\"contain.text\", \"Import file name\");\n  // cyGet(`input[placeholder=\"Enter file name\"]`).should(\"have.value\", fileName)\n  cy.wait(\"@requiredProps\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const requiredFields = response.body.result.values.filter(ele => ele.required === true);\n    if (requiredFields.length > 0) {\n      propwiseFields(requiredFields);\n    }\n  });\n  cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n  cyGet(`[data-testid=\"importcommit-box-8kavef2af\"] > button`).contains(\"Confirm import\").click();\n});\n// });",
              "err": {},
              "uuid": "d2eda497-6ddd-4f69-bc2d-78d26a19e932",
              "parentUUID": "3b887dc0-8ea0-425d-852e-40a29ed118f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "719c2a91-4bf6-47d3-81d2-0e9f34c45cef",
            "6baa1fd7-4b0e-4723-bd9e-523568e0a2a5",
            "792bf9b7-8805-48ef-b571-54f7374d876d",
            "d2eda497-6ddd-4f69-bc2d-78d26a19e932"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16996,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cdf3d34c-6909-48a3-9ed0-4086057fc77d",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6bafea50-32b9-4825-965b-0dc6c909ed80",
          "title": "Test the functionality of Activity log",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Activity log of update record",
              "fullTitle": "Test the functionality of Activity log Activity log of update record",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "// cy.get('table > tbody > :nth-child(1)').click()\ncy.wait(1000);\ncy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").clear();\ncy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").type(faker.string.numeric(10));\ncy.get(lead.typeBtn).contains(\"Save\").click();\ncy.wait(1000);\ncy.get('[aria-label=\"Activities\"] > .MuiButtonBase-root').click();\ncy.get('.MuiTooltip-tooltip').should(\"have.text\", \"Activities\");\ncy.wait(\"@activity\").then(({\n  response\n}) => {\n  // let preValue = response.body.result.values[0].prev\n  let curValue = response.body.result.values[0].currentValue;\n  // let previousValue = preValue.toString()\n  let currentValue = `${curValue} `.toString();\n  // let userIdKey = Object.keys(response.body.result.users)\n  // cy.get(`${lead.chooseOptions} > :first`).find(\"aria-label\",previousValue).should(\"have.text\", previousValue)\n  // cy.get(`.ReactVirtualized__Grid__innerScrollContainer [aria-label=${previousValue}]`).should(\"have.text\", previousValue)\n  cy.get(`.ReactVirtualized__Grid__innerScrollContainer [aria-label=${currentValue}]`).should(\"have.text\", currentValue);\n});",
              "err": {},
              "uuid": "cd5b61f0-5928-411f-9469-0635333399e8",
              "parentUUID": "6bafea50-32b9-4825-965b-0dc6c909ed80",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "cd5b61f0-5928-411f-9469-0635333399e8"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c71812c2-2318-4744-9cca-507ab4dde065",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "15c06b54-b0cc-42a6-a4e5-c2b2e7acb078",
          "title": "Navigate on lead and test Export functoinality",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check the behavior of the Export button based on the total number of records in a pipeline",
              "fullTitle": "Navigate on lead and test Export functoinality Check the behavior of the Export button based on the total number of records in a pipeline",
              "timedOut": null,
              "duration": 11086,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click()\n// cyGet(`[data-testid=\"title-dialog\"] p`).should(\"contain.text\", \"Export\");\ncy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  email = response.body.result.user.email;\n  role = response.body.result.user.role;\n  // const userRole = response.body.result.user.email;\n  cy.wait(\"@existsPipelines\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const accessToExport = response.body.result.tools.export;\n    if (role === \"std\" && !accessToExport) {\n      cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n    } else {\n      cy.wait(\"@recordGrid\", {\n        timeout: 10000\n      }).then(({\n        response\n      }) => {\n        const totalRecord = response.body.result.pages.totalRecords;\n        cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n        cyGet(`[data-testid=\"title-dialog\"] p`).should(\"contain.text\", \"Export\");\n        cyGet(`[data-testid=\"exportactor-typography-7vhpyacm5\"]`).contains(`Once exported, the file will be sent to ${email} and you will be notified.`);\n        cyGet(`[data-testid=\"exportactor-typography-awnrepr3p\"]`).contains(`Total number of records after all filters are applied:${totalRecord}`);\n        const total = Number(totalRecord);\n        cyGet('[role=\"dialog\"] [data-testid=\"Export\"]').should(total === 0 || total > 10000 ? 'be.disabled' : 'not.be.disabled');\n      });\n    }\n    ;\n  });\n});",
              "err": {},
              "uuid": "10fdb878-9f7f-466d-96bc-cec39f00ba22",
              "parentUUID": "15c06b54-b0cc-42a6-a4e5-c2b2e7acb078",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Export records based on the creation date range filter selected on the export page",
              "fullTitle": "Navigate on lead and test Export functoinality Export records based on the creation date range filter selected on the export page",
              "timedOut": null,
              "duration": 9646,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (role === \"std\" && !accessToExport) {\n  cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n} else {\n  cy.wait(\"@recordGrid\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const totalRecord = response.body.result.pages.totalRecords;\n    cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n    cyGet(`[data-testid=\"exportactor-typography-awnrepr3p\"]`).contains(`Total number of records after all filters are applied:${totalRecord}`);\n    cy.get('[data-testid=\"exportactor-grid-zywx8bilv\"] [data-testid=\"budate-iconbutton-v63dt06ut\"]').click();\n    cy.get('[aria-label=\"Previous month\"]').click();\n    cy.get('[role=\"row\"]').contains(pastDay).click();\n    cyGet(`[name=\"File format\"]`).click();\n    budropdownOption(\"csv\").first().click();\n    cy.get('[data-testid=\"exportactor-grid-ti62k6zn2\"] [data-testid=\"budate-iconbutton-v63dt06ut\"]').click();\n    cy.get('[role=\"dialog\"] [role=\"row\"]').filter(':visible').contains((0, _moment.default)().date()).click();\n    cy.wait(\"@recordCount\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const recordToExport = response.body.result;\n      if (recordToExport > 0 && recordToExport < 10000) {\n        cyGet(`[role=\"dialog\"] [data-testid=\"Export\"]`).click();\n      } else {\n        throw new Error(`Record for Export:${recordToExport}`);\n      }\n    });\n    cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Export request submitted successfully. Please check your email address after sometime.\");\n  });\n}\n;",
              "err": {},
              "uuid": "10219bd0-2950-4283-b9eb-d701bb6444d0",
              "parentUUID": "15c06b54-b0cc-42a6-a4e5-c2b2e7acb078",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter record and Export records",
              "fullTitle": "Navigate on lead and test Export functoinality Filter record and Export records",
              "timedOut": null,
              "duration": 8737,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (role === \"std\" && !accessToExport) {\n  cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n} else {\n  cy.wait(\"@existsPipelines\", {\n    timeout: 10000\n  });\n  cyGet(`#filter`).click();\n  cy.wait(\"@filters\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const uidField = response.body.result.find(ele => ele.prop === \"uid\");\n    cyGet(`[placeholder=\"Search...\"]`).type(uidField.label);\n    onesecondWait();\n    cyGet(`[data-testid=\"filterheader-box-jox1agcx8\"] > [aria-label=\"${uidField.label}\"]`).click();\n    cyGet(`[data-testid=\"comparestringfilter-box-f914y6cfe\"] [placeholder=\"Add value...\"]`).type(1);\n    onesecondWait();\n    cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalRecord = response.body.result.pages.totalRecords;\n      if (totalRecord > 0 && totalRecord < 10000) {\n        cyGet(`[role=\"dialog\"] [data-testid=\"Export\"]`).click();\n      } else {\n        throw new Error(`Record for Export:${totalRecord}`);\n      }\n      cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Export request submitted successfully. Please check your email address after sometime.\");\n    });\n  });\n}\n;",
              "err": {
                "message": "Error: Record for Export:0",
                "estack": "Error: Record for Export:0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/export.js:110:30)",
                "diff": null
              },
              "uuid": "3400aabb-82a8-4e2b-9c05-83b22744c921",
              "parentUUID": "15c06b54-b0cc-42a6-a4e5-c2b2e7acb078",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10fdb878-9f7f-466d-96bc-cec39f00ba22",
            "10219bd0-2950-4283-b9eb-d701bb6444d0"
          ],
          "failures": [
            "3400aabb-82a8-4e2b-9c05-83b22744c921"
          ],
          "pending": [],
          "skipped": [],
          "duration": 29469,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "52685e90-d054-44f3-96b1-d4bc16cd9c65",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "41d44656-0594-4823-9a9d-307a00b779f8",
          "title": "Navigate on filter and test filter functoinality",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ea6100c2-3294-409e-a6c7-22109db0426d",
              "title": "Apply filter on string-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Apply “contains” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “contains” filter",
                  "timedOut": null,
                  "duration": 14813,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues[0].substring(0, 3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Contains\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const filterdValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n    expect(filterdValues[0]).contains(firstThreeChars);\n    response.body.result.values.forEach(valueArray => {\n      expect(valueArray[stringBasedProp.id]).to.contain(firstThreeChars);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "9f715453-32df-40e0-a731-530eb30431a2",
                  "parentUUID": "ea6100c2-3294-409e-a6c7-22109db0426d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Does not contains” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Does not contains” filter",
                  "timedOut": null,
                  "duration": 10441,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues[0].substring(0, 3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Does not contains\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      expect(valueArray[stringBasedProp.id]).not.contain(firstThreeChars);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "aa23c2e8-0693-4eeb-b90c-84b0acb8603a",
                  "parentUUID": "ea6100c2-3294-409e-a6c7-22109db0426d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Starts with” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Starts with” filter",
                  "timedOut": null,
                  "duration": 12567,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues[0].substring(0, 3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Starts with\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(value => {\n      const startingDigit = value[stringBasedProp.id].substring(0, 3);\n      expect(startingDigit).to.equal(firstThreeChars);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "3b5d4bbf-5c79-4a14-91c0-459d731cc9b2",
                  "parentUUID": "ea6100c2-3294-409e-a6c7-22109db0426d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply \"Ends with\" filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply \"Ends with\" filter",
                  "timedOut": null,
                  "duration": 11281,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n  const lastThreeChars = findFieldValues[0].slice(-3);\n  filterElements(stringBasedProp.label, lastThreeChars, \"Ends with\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(value => {\n      const lastDigits = value[stringBasedProp.id].slice(-3);\n      expect(lastDigits).to.equal(lastThreeChars);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "acbf0fa0-a5be-4396-b6c3-175fe22121d1",
                  "parentUUID": "ea6100c2-3294-409e-a6c7-22109db0426d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Equals” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Equals” filter",
                  "timedOut": null,
                  "duration": 11203,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n  filterElements(stringBasedProp.label, findFieldValues[0], \"Equals\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      expect(valueArray[stringBasedProp.id]).eq(findFieldValues[0]);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "602ad69a-b051-469c-8ac7-1b1fc88aee4f",
                  "parentUUID": "ea6100c2-3294-409e-a6c7-22109db0426d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Does not equals” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Does not equals” filter",
                  "timedOut": null,
                  "duration": 11551,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n  filterElements(stringBasedProp.label, findFieldValues[0], \"Does not equals\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      expect(valueArray[stringBasedProp.id]).not.eq(findFieldValues[0]);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "34605339-16b8-41c1-90bb-b92c4bf94f72",
                  "parentUUID": "ea6100c2-3294-409e-a6c7-22109db0426d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9f715453-32df-40e0-a731-530eb30431a2",
                "aa23c2e8-0693-4eeb-b90c-84b0acb8603a",
                "3b5d4bbf-5c79-4a14-91c0-459d731cc9b2",
                "acbf0fa0-a5be-4396-b6c3-175fe22121d1",
                "602ad69a-b051-469c-8ac7-1b1fc88aee4f",
                "34605339-16b8-41c1-90bb-b92c4bf94f72"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 71856,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "06c55b7d-44d4-4b1e-b8ff-48601f99605f",
              "title": "Apply filter on dropdown-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Apply  filter on stage",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on dropdown-based field to filter the records Apply  filter on stage",
                  "timedOut": null,
                  "duration": 9600,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "dropdownFilter(\"stg\", this);",
                  "err": {},
                  "uuid": "0aac0787-eaa4-46f5-ae1a-4521fdc8b9d2",
                  "parentUUID": "06c55b7d-44d4-4b1e-b8ff-48601f99605f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply  filter on owner",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on dropdown-based field to filter the records Apply  filter on owner",
                  "timedOut": null,
                  "duration": 8813,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "dropdownFilter(\"own\", this);",
                  "err": {},
                  "uuid": "b73dd082-1573-4868-ad44-78f542b6cae5",
                  "parentUUID": "06c55b7d-44d4-4b1e-b8ff-48601f99605f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0aac0787-eaa4-46f5-ae1a-4521fdc8b9d2",
                "b73dd082-1573-4868-ad44-78f542b6cae5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18413,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "159c7e03-4335-43b2-b376-105de5f937dc",
              "title": "Apply filter on date&time-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Filter records based on the date & time field",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on date&time-based field to filter the records Filter records based on the date & time field",
                  "timedOut": null,
                  "duration": 11279,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.get('#filter').click();\ncy.wait(\"@filters\").then(({\n  response\n}) => {\n  let propDtm = response.body.result.filter(ele => ele.prop == \"dtm\");\n  cy.get(lead.searchInfilter).type(propDtm[0].label);\n  cy.wait(500);\n  cy.get(`span[aria-label=\"${propDtm[0].label}\"]`).click();\n});\ncy.get(lead.filerCaption).contains(\"Today till midnight\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 7 days\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 30 days\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 3 months\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Custom Date\").click();\ncy.get('.rdrMonthPicker > select').select(previousMonth); // Select previous month\ncy.get('.rdrDayStartOfMonth > .rdrDayNumber').click(); // Choose date of previous month\ncy.get('.rdrNextButton').click(); // Click on next button to move on current month\ncy.get('.rdrDayToday > .rdrDayNumber').click(); // Choose date of current month",
                  "err": {},
                  "uuid": "903e8780-61d5-420b-b17c-89aeb31459c4",
                  "parentUUID": "159c7e03-4335-43b2-b376-105de5f937dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "903e8780-61d5-420b-b17c-89aeb31459c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11279,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c4826a86-aabc-4905-9d34-30b010274387",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2bf4ef11-0098-423f-8d33-d4caa596fcde",
          "title": "Test the functionality of notes",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "save button should be disable without input notes",
              "fullTitle": "Test the functionality of notes save button should be disable without input notes",
              "timedOut": null,
              "duration": 12475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[data-testid=\"notes-box-q3iecxru9\"] button`).contains(\"Create\").wait(2000).click({\n  force: true\n});\n// twosecondWait()\ncyGet(`#tool-container [data-testid=\"Save\"]`).contains(\"Save\").trigger('mouseover', {\n  force: true\n}).should(\"be.disabled\");\ncyGet('.MuiTooltip-tooltip').should(\"have.text\", \"There is some error in form.\");",
              "err": {},
              "uuid": "ebe2ed25-d7d6-4686-95f9-b7b428b54836",
              "parentUUID": "2bf4ef11-0098-423f-8d33-d4caa596fcde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a notes",
              "fullTitle": "Test the functionality of notes Add a notes",
              "timedOut": null,
              "duration": 8299,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[data-testid=\"notes-box-q3iecxru9\"] button`).contains(\"Create\").wait(2000).click({\n  force: true\n});\ncyGet(\"[data-testid='bunotepad-box-8lxcermoa']\").type(faker.lorem.sentence());\ncyGet(`#tool-container [data-testid=\"Save\"]`).click();",
              "err": {},
              "uuid": "a4495fcd-a89e-4c52-93ae-c81b3088a256",
              "parentUUID": "2bf4ef11-0098-423f-8d33-d4caa596fcde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update notes",
              "fullTitle": "Test the functionality of notes Update notes",
              "timedOut": null,
              "duration": 19483,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const updateNote = faker.lorem.sentence();\ncyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(\"[data-testid='bunotepad-box-8lxcermoa']\").first().clear().type(updateNote);\ncy.wait(500);\ncyGet('[data-testid=\"buwrapper-iconbutton-s8exp1h26\"]').click();\ncyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n  force: true\n});\ncyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(updateNote);\ncyGet(`[data-testid=\"card-typography-8vfwf8lhh\"]`).should(\"contain.text\", updateNote);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"card-typography-8vfwf8lhh\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"card-typography-8vfwf8lhh\"]`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/notes.js:40:59)",
                "diff": null
              },
              "uuid": "dc4dc018-f635-4a13-b6a7-4e21fc59d161",
              "parentUUID": "2bf4ef11-0098-423f-8d33-d4caa596fcde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pin the notes",
              "fullTitle": "Test the functionality of notes Pin the notes",
              "timedOut": null,
              "duration": 6853,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const unpinnedNotes = response.body.result.values.find(note => note.pinned === false);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(unpinnedNotes.body);\n  cyGet(`#tool-container [role=\"rowgroup\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\n  cyGet('#pin').click();\n});",
              "err": {},
              "uuid": "3ff7b932-1c1d-480d-9057-abbc816d638b",
              "parentUUID": "2bf4ef11-0098-423f-8d33-d4caa596fcde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unpin the notes",
              "fullTitle": "Test the functionality of notes Unpin the notes",
              "timedOut": null,
              "duration": 7052,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pinnedNotes = response.body.result.values.find(note => note.pinned === true);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(pinnedNotes.body);\n  cyGet(`#tool-container [role=\"rowgroup\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\n  cyGet('#unpin').click();\n});",
              "err": {},
              "uuid": "06c562f0-de39-47be-8c04-321f112c7591",
              "parentUUID": "2bf4ef11-0098-423f-8d33-d4caa596fcde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Like notes",
              "fullTitle": "Test the functionality of notes Like notes",
              "timedOut": null,
              "duration": 6779,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pinnedNotes = response.body.result.values.find(note => note.liked === false);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(pinnedNotes.body);\n  cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\n  cyGet('#tool-container [type=\"button\"]').contains(\"Likes\").click(); // like button\n});",
              "err": {},
              "uuid": "ff790622-8263-4960-b6ee-c5793b44b9fc",
              "parentUUID": "2bf4ef11-0098-423f-8d33-d4caa596fcde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a comment on note",
              "fullTitle": "Test the functionality of notes Add a comment on note",
              "timedOut": null,
              "duration": 8717,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const comment = faker.lorem.sentence();\ncyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(`[data-testid=\"addcomment-typography-34tc065nz\"]`).click();\ncyGet('#note-comment').type(comment);\ncyGet(`[data-testid=\"toolbar-button-b9qu80nyb\"]`).contains(\"Save\").click();\ncyGet(`[data-testid=\"bunotepad-box-8lxcermoa\"]`).contains(comment);",
              "err": {},
              "uuid": "14204362-290a-4c1e-b197-455fd282d030",
              "parentUUID": "2bf4ef11-0098-423f-8d33-d4caa596fcde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Comment on a notes",
              "fullTitle": "Test the functionality of notes Update Comment on a notes",
              "timedOut": null,
              "duration": 7552,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(`[data-testid=\"commentlist-box-0u6rpj17w\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\ncyGet('#edit').click();\ncyGet(\"[data-testid='bunotepad-box-8lxcermoa']\").last().clear().type(faker.lorem.sentence());\ncyGet(`[data-testid=\"toolbar-button-b9qu80nyb\"]`).contains(\"Save\").click();",
              "err": {},
              "uuid": "12a427d7-4337-4065-921b-42ff66b71c17",
              "parentUUID": "2bf4ef11-0098-423f-8d33-d4caa596fcde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Comment on a notes",
              "fullTitle": "Test the functionality of notes Delete Comment on a notes",
              "timedOut": null,
              "duration": 7529,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(`[data-testid=\"commentlist-box-0u6rpj17w\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\ncyGet('#delete').click();\ncyGet(`[role=\"dialog\"] #customized-dialog-title p`).should(\"contain.text\", \"Delete Comment\");\ncyGet(`[data-testid=\"buconfirmation-typography-9lgofl82d\"]`).should(\"contain.text\", \"Are you sure you want to delete comment?\");\ncyGet(`[data-testid=\"Delete\"]`).contains(\"Delete\").click();",
              "err": {},
              "uuid": "749bc602-e15f-482c-a824-53f576ed6080",
              "parentUUID": "2bf4ef11-0098-423f-8d33-d4caa596fcde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unlike notes",
              "fullTitle": "Test the functionality of notes Unlike notes",
              "timedOut": null,
              "duration": 7368,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pinnedNotes = response.body.result.values.find(note => note.liked === true);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(pinnedNotes.body);\n  cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\n  cyGet('#tool-container [type=\"button\"]').contains(\"Likes\").click(); // like button\n});",
              "err": {},
              "uuid": "9d3a4a9e-b807-4e82-b741-72d8cdf9e5d3",
              "parentUUID": "2bf4ef11-0098-423f-8d33-d4caa596fcde",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete notes",
              "fullTitle": "Test the functionality of notes Delete notes",
              "timedOut": null,
              "duration": 7110,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`#tool-container [role=\"rowgroup\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).as(\"ellipsis\").first().click();\ncyGet('#delete').click();\ncyGet(`[role=\"dialog\"] #customized-dialog-title p`).should(\"contain.text\", \"Delete Note\");\ncyGet(`[data-testid=\"buconfirmation-typography-9lgofl82d\"]`).should(\"contain.text\", \"Are you sure you want to delete this note?\");\ncyGet(`[data-testid=\"Delete\"]`).contains(\"Delete\").click();",
              "err": {},
              "uuid": "b9fcb7a6-924e-4e34-b47d-f8c59c3179cc",
              "parentUUID": "2bf4ef11-0098-423f-8d33-d4caa596fcde",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ebe2ed25-d7d6-4686-95f9-b7b428b54836",
            "a4495fcd-a89e-4c52-93ae-c81b3088a256",
            "3ff7b932-1c1d-480d-9057-abbc816d638b",
            "06c562f0-de39-47be-8c04-321f112c7591",
            "ff790622-8263-4960-b6ee-c5793b44b9fc",
            "14204362-290a-4c1e-b197-455fd282d030",
            "12a427d7-4337-4065-921b-42ff66b71c17",
            "749bc602-e15f-482c-a824-53f576ed6080",
            "9d3a4a9e-b807-4e82-b741-72d8cdf9e5d3",
            "b9fcb7a6-924e-4e34-b47d-f8c59c3179cc"
          ],
          "failures": [
            "dc4dc018-f635-4a13-b6a7-4e21fc59d161"
          ],
          "pending": [],
          "skipped": [],
          "duration": 99217,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "616b4982-91a2-4bff-b21e-cbd7c75cca97",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b33d23b5-65d1-4f6b-ad8c-8ed9db7b7a45",
          "title": "Test the functionality of notes",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify auto assignment to login user",
              "fullTitle": "Test the functionality of notes Verify auto assignment to login user",
              "timedOut": null,
              "duration": 22072,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const loginUser = response.body.result.user;\n  cy.wait(\"@existsPipelines\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    cyGet(`button[type=\"button\"]`).contains(\"Create task\").click({\n      force: true\n    });\n    cy.wait(\"@owners\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const findLoginUser = response.body.result.values.find(ele => ele.subLabel === loginUser.email);\n      cyGet(`#buForm [data-testid=\"avatarinput-textfield-ojwxr8kdk\"]`).contains(\"Assigned to\").next().find(`[data-testid=\"buchip-chip-5r51zm55o\"] span`).should(\"contain.text\", findLoginUser === null || findLoginUser === void 0 ? void 0 : findLoginUser.label);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 10000ms: `cy.wait()` timed out waiting `10000ms` for the 1st request to the route: `owners`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                "estack": "CypressError: Timed out retrying after 10000ms: `cy.wait()` timed out waiting `10000ms` for the 1st request to the route: `owners`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:76025:18)\n    at Object.errByPath (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:76079:10)\n    at checkForXhr (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:135700:84)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:135726:28)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144102:68)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144043:14)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/task.js:38:19)",
                "diff": null
              },
              "uuid": "04717d33-83ef-478a-b7b6-3bf749a8f50e",
              "parentUUID": "b33d23b5-65d1-4f6b-ad8c-8ed9db7b7a45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create task in approval",
              "fullTitle": "Test the functionality of notes Create task in approval",
              "timedOut": null,
              "duration": 16117,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cyGet(`button[type=\"button\"]`).contains(\"Create task\").click({\n    force: true\n  });\n  cy.wait(\"@getformDetails\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    propwiseFields(response.body.result.values);\n    cyGet(`[data-testid=\"buttongroup-dialogactions-fb25djtod\"] [data-testid=\"Save\"]`).click();\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 10000ms: `cy.wait()` timed out waiting `10000ms` for the 1st request to the route: `getformDetails`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                "estack": "CypressError: Timed out retrying after 10000ms: `cy.wait()` timed out waiting `10000ms` for the 1st request to the route: `getformDetails`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:76025:18)\n    at Object.errByPath (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:76079:10)\n    at checkForXhr (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:135700:84)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:135726:28)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144102:68)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144043:14)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/task.js:53:15)",
                "diff": null
              },
              "uuid": "238ae2f2-c3a1-472c-9947-7d0db31ca9dc",
              "parentUUID": "b33d23b5-65d1-4f6b-ad8c-8ed9db7b7a45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit task in approval",
              "fullTitle": "Test the functionality of notes Edit task in approval",
              "timedOut": null,
              "duration": 6605,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  searchAndChooseTask(\"Edit\").then(() => {\n    cy.wait(\"@getTaskById\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const profile = response.body.result.profile;\n      propwiseFields(profile);\n    });\n    cyGet(`[data-testid=\"buttongroup-dialogactions-fb25djtod\"] [data-testid=\"Save\"]`).click();\n  });\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'id')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'id')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/task.js:25:60)",
                "diff": null
              },
              "uuid": "5f4438f8-bd10-4006-8868-adfa865f29ce",
              "parentUUID": "b33d23b5-65d1-4f6b-ad8c-8ed9db7b7a45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete task",
              "fullTitle": "Test the functionality of notes Delete task",
              "timedOut": null,
              "duration": 6778,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const msg1 = \"Delete task\";\nconst msg2 = \"Are you sure you want to delete this task?\";\ncy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  searchAndChooseTask(\"Delete\").then(() => {\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    cyGet(globalSel.deltestid).click();\n  });\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'id')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'id')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/task.js:25:60)",
                "diff": null
              },
              "uuid": "631aecaa-d6bc-4f32-852e-6e02787725dd",
              "parentUUID": "b33d23b5-65d1-4f6b-ad8c-8ed9db7b7a45",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "04717d33-83ef-478a-b7b6-3bf749a8f50e",
            "238ae2f2-c3a1-472c-9947-7d0db31ca9dc",
            "5f4438f8-bd10-4006-8868-adfa865f29ce",
            "631aecaa-d6bc-4f32-852e-6e02787725dd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 51572,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5ce57fde-ba70-4c25-ac23-72e5a5c27ac5",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "878d9e7e-dbe8-401e-b0a4-21c6c4755ab8",
          "title": "Test the functionality of Addresses",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a80f2cea-82b8-4948-a0ec-acfff173ebe1",
              "title": "Test the functionality of add address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Add address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of add address Add address",
                  "timedOut": null,
                  "duration": 12036,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _addressField, _addressField2;\n  addressField = response.body.result.find(fld => fld.prop === \"add\");\n  if (!addressField) {\n    this.skip();\n  }\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField = addressField) === null || _addressField === void 0 ? void 0 : _addressField.label}]`).should(\"contain.text\", (_addressField2 = addressField) === null || _addressField2 === void 0 ? void 0 : _addressField2.label).click();\n  cy.wait(\"@addressDeatail\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const addressView = response.body.result.view;\n    cyGet(`[data-testid=\"Add\"]`).click();\n    // twosecondWait()\n    propwiseFields(addressView, {}, [], true);\n    cyGet(`#clone`).check();\n    cyGet('[data-testid=\"buwrapper-box-2gkcmtrgi\"] > [data-testid=\"buttongroup-box-ell22p9ne\"] > [data-testid=\"buttongroup-dialogactions-fb25djtod\"] > * > [data-testid=\"Save\"]').click();\n    cyGet('.MuiSnackbarContent-message').should(\"contain.text\", messages.created);\n  });\n});",
                  "err": {},
                  "uuid": "f61c86fe-7212-45ce-8e40-7616aad9252a",
                  "parentUUID": "a80f2cea-82b8-4948-a0ec-acfff173ebe1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "f61c86fe-7212-45ce-8e40-7616aad9252a"
              ],
              "skipped": [],
              "duration": 12036,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4c6ae725-e7d8-4e92-9775-188fdf64256d",
              "title": "Test the functionality of edit address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Edit address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of edit address Edit address",
                  "timedOut": null,
                  "duration": 1782,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "var _addressField3, _addressField4;\nif (!addressField) {\n  this.skip();\n}\ncyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField3 = addressField) === null || _addressField3 === void 0 ? void 0 : _addressField3.label}]`).should(\"contain.text\", (_addressField4 = addressField) === null || _addressField4 === void 0 ? void 0 : _addressField4.label).click();\ncy.wait(\"@addressDeatail\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const addressView = response.body.result.view;\n  const billingAddress = response.body.result.billing;\n  const shippingAddress = response.body.result.shipping;\n  if (billingAddress || shippingAddress) {\n    const country = addressView.find(view => view.prop === \"cnt\");\n    const fieldValues = billingAddress ? billingAddress.values[0][country.id] : shippingAddress.values[0][country.id];\n    cyGet(`[data-testid=\"addresssection-box-ykc0hvq21\"] [data-testid=\"busimpledropdown-box-l5z1y823c\"]`).first().click();\n    cyGet(`#edit`).click();\n    propwiseFields(addressView, {}, fieldValues, true);\n    cyGet('[data-testid=\"buwrapper-box-2gkcmtrgi\"] > [data-testid=\"buttongroup-box-ell22p9ne\"] > [data-testid=\"buttongroup-dialogactions-fb25djtod\"] > * > [data-testid=\"Save\"]').click();\n    cyGet('.MuiSnackbarContent-message').should(\"contain.text\", messages.updated);\n  }\n});",
                  "err": {},
                  "uuid": "cb80199d-4de8-4d71-8286-84c2a4bc447b",
                  "parentUUID": "4c6ae725-e7d8-4e92-9775-188fdf64256d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "cb80199d-4de8-4d71-8286-84c2a4bc447b"
              ],
              "skipped": [],
              "duration": 1782,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "808d0a0b-e934-49b4-86eb-2ac5ab0738db",
              "title": "Test the functionality of delete address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of delete address Delete address",
                  "timedOut": null,
                  "duration": 4439,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "var _addressField5, _addressField6;\nif (!addressField) {\n  this.skip();\n}\ncyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField5 = addressField) === null || _addressField5 === void 0 ? void 0 : _addressField5.label}]`).should(\"contain.text\", (_addressField6 = addressField) === null || _addressField6 === void 0 ? void 0 : _addressField6.label).click();\ncyGet(`[data-testid=\"addresssection-box-ykc0hvq21\"] [data-testid=\"busimpledropdown-box-l5z1y823c\"]`).first().click();\ncyGet(`#delete`).click();\ncyGet('#customized-dialog-title p').should(\"have.text\", \"Delete Address\");\ncyGet(`[role=\"dialog\"] [data-testid=\"buconfirmation-typography-9lgofl82d\"]`).should(\"contain.text\", \"Are you sure to delete this address?\");\ncyGet(`[data-testid=\"Delete\"]`).contains(\"Delete\").click();",
                  "err": {},
                  "uuid": "c80f0a47-3879-4668-b1e8-bf9797b7e399",
                  "parentUUID": "808d0a0b-e934-49b4-86eb-2ac5ab0738db",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "c80f0a47-3879-4668-b1e8-bf9797b7e399"
              ],
              "skipped": [],
              "duration": 4439,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "284166a0-1dac-4a12-bf8c-7069265273f5",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1a8eb23a-ee11-407f-9f5f-adbe368fdbe6",
          "title": "Test the functionality of Association",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7282f5f8-b684-47a1-8b04-130a8700b2a5",
              "title": "Test the functionality of Association",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Associate the record",
                  "fullTitle": "Test the functionality of Association Test the functionality of Association Associate the record",
                  "timedOut": null,
                  "duration": 17089,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let associatonField = response.body.result.find(ele => ele.prop === \"asc\");\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${associatonField === null || associatonField === void 0 ? void 0 : associatonField.label}\"]`).should(\"contain.text\", associatonField === null || associatonField === void 0 ? void 0 : associatonField.label).click();\n  if ((associatonField === null || associatonField === void 0 ? void 0 : associatonField.selection) == \"single\") {\n    cy.wait(\"@associations\").then(({\n      response\n    }) => {\n      if (response.body.result.values.length == 0) {\n        cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1)`).click();\n        cy.wait(1500);\n      } else {\n        cy.log(\"Association alredy exist\");\n      }\n    });\n  } else {\n    cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n    cy.wait(\"@associable\").then(({\n      response\n    }) => {\n      if (response.body.result.values.length > 1) {\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n        cy.get(`${lead.selectAssociableRecord} :nth-child(2) input`).click();\n        cy.wait(1500);\n      } else if (response.body.result.values.length = 1) {\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n        cy.wait(1500);\n      } else if (response.body.result.values.length = 0) {\n        expect(response.body.result.values).to.be.length.eq(0);\n      }\n      ;\n    });\n  }\n  ;\n});",
                  "err": {},
                  "uuid": "3216c7f1-e59d-462e-ac58-319baaf1bcf9",
                  "parentUUID": "7282f5f8-b684-47a1-8b04-130a8700b2a5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3216c7f1-e59d-462e-ac58-319baaf1bcf9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17089,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "b00be149-bb6b-4e2c-8d2b-4f3f6292b221",
              "title": "Test the functionality of Remove Association",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Remove associated record from association list",
                  "fullTitle": "Test the functionality of Association Test the functionality of Remove Association Remove associated record from association list",
                  "timedOut": null,
                  "duration": 9562,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let associatonField = response.body.result.find(ele => ele.prop === \"asc\");\n  // expect(associatonField).be.length.greaterThan(0)\n  // cy.get(lead.simpleTab).contains(associatonField[0].label).click()\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${associatonField === null || associatonField === void 0 ? void 0 : associatonField.label}\"]`).should(\"contain.text\", associatonField === null || associatonField === void 0 ? void 0 : associatonField.label).click();\n  cy.wait(\"@associations\").then(({\n    response\n  }) => {\n    if (response.body.result.values == 0) {\n      cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n      cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n      cy.wait(1500);\n      cy.get('[data-testid=\"commoncard-box-ze66boaek\"]').first().click();\n      cy.get(\"#remove\").click();\n    } else {\n      cy.get('[data-testid=\"commoncard-box-ze66boaek\"]').first().click();\n      cy.get(\"#remove\").click();\n    }\n    ;\n    cy.wait(\"@deleteAssociation\").then(({\n      response\n    }) => {\n      expect(response.body).has.property(\"message\", \"Associations removed successfully.\");\n    });\n  });\n});",
                  "err": {},
                  "uuid": "e9ef2c5e-cfe9-4c77-ae9b-0b712327f55e",
                  "parentUUID": "b00be149-bb6b-4e2c-8d2b-4f3f6292b221",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e9ef2c5e-cfe9-4c77-ae9b-0b712327f55e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9562,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "02c7bbc7-1035-4b20-b0ca-e80262bdbf53",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7cf33e6c-6633-47e8-80c7-36d50b0e5325",
          "title": "Test the functionality of Attachment",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach file",
              "fullTitle": "Test the functionality of Attachment Attach file",
              "timedOut": null,
              "duration": 12354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(lead.simpleTab).contains(\"Attachment\").click();\ncy.get(lead.tabpanelBtn).contains(\"Add\").click();\ncy.get('input[type=\"file\"]').selectFile(\"cypress/fixtures/data.csv\", {\n  force: true\n});\ncy.get('[role=\"tabpanel\"] .MuiTypography-noWrap').first().dblclick();\n// cy.wait(1000)\n// cy.get(lead.dialogTitle).contains(\"data.csv\")\ncy.get(`#customized-dialog-title ${lead.typeBtn}`).contains(\"Download\");\ncy.get('#customized-dialog-title .MuiIconButton-root').click();",
              "err": {},
              "uuid": "2bf32741-4189-42ba-aaee-a228531026f2",
              "parentUUID": "7cf33e6c-6633-47e8-80c7-36d50b0e5325",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Download file",
              "fullTitle": "Test the functionality of Attachment Download file",
              "timedOut": null,
              "duration": 6633,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(lead.simpleTab).contains(\"Attachment\").click();\ncy.get('#attachment-action').click();\ncy.get('#download').click();",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[aria-label=\"Simple Tab\"] button`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[aria-label=\"Simple Tab\"] button`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/5_biztab/attachment.js:22:11)",
                "diff": null
              },
              "uuid": "60a24a08-7f96-4d49-b84b-a5cf015ffa52",
              "parentUUID": "7cf33e6c-6633-47e8-80c7-36d50b0e5325",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete attached file",
              "fullTitle": "Test the functionality of Attachment delete attached file",
              "timedOut": null,
              "duration": 6567,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let msg2 = \"Are you sure want to delete this file?\";\ncy.get(lead.simpleTab).contains(\"Attachment\").click();\ncy.get('#attachment-action').click();\ncy.get('#delete').click();\ncy.roleDialog(lead.dialogTitle, \"Confirmation\", lead.dialogDesc, msg2, `.MuiDialogActions-root ${lead.typeBtn}`, \"Delete\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[aria-label=\"Simple Tab\"] button`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[aria-label=\"Simple Tab\"] button`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/5_biztab/attachment.js:29:11)",
                "diff": null
              },
              "uuid": "d87628fc-426b-4fcd-9214-46b30a98deb9",
              "parentUUID": "7cf33e6c-6633-47e8-80c7-36d50b0e5325",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2bf32741-4189-42ba-aaee-a228531026f2"
          ],
          "failures": [
            "60a24a08-7f96-4d49-b84b-a5cf015ffa52",
            "d87628fc-426b-4fcd-9214-46b30a98deb9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25554,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d3f6e159-439a-4b25-a2a7-fd6ef78a567f",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "208810ed-e59b-44a9-8555-ee17ac8f37ac",
          "title": "Test the functionality of bulk edit",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Bulk edit the record",
              "fullTitle": "Test the functionality of bulk edit Bulk edit the record",
              "timedOut": null,
              "duration": 13901,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncyGet('table > thead input').check();\ncyGet('#bulkActions [data-testid=\"Edit\"]').contains(\"Edit\").click();\ncyGet(lead.dialogTitle).should(\"have.text\", \"Bulk record update\");\ncyGet(`[aria-label=\"Select Field\"]`).click();\ncy.wait(\"@getbulkEdit\").then(({\n  response\n}) => {\n  const bulkeditValues = response.body.result.values;\n  const lengthgetbulkEdit = bulkeditValues.length;\n  let stageField = bulkeditValues.find(ele => ele.label === \"Stage\");\n  if (lengthgetbulkEdit > 5) {\n    buSearchbox(globalSel.search, stageField === null || stageField === void 0 ? void 0 : stageField.label);\n  }\n  budropdownOption(stageField === null || stageField === void 0 ? void 0 : stageField.label).first().click({\n    force: true\n  });\n  handleDropdownField(stageField, `[data-testid=\"fields-box-xhbyf34nj\"]`, `[data-testid=\"buchip-chip-5r51zm55o\"]`);\n  if (lengthgetbulkEdit > 1) {\n    const otherField = bulkeditValues.find(ele => ele.label !== \"Stage\");\n    cyGet(`[data-testid=\"staticfieldcard-iconbutton-u6zoboy9a\"]`).click();\n    cyGet(`[aria-label=\"Select Field\"]`).click();\n    if (lengthgetbulkEdit > 5) {\n      buSearchbox(globalSel.search, otherField === null || otherField === void 0 ? void 0 : otherField.label);\n    }\n    budropdownOption(otherField === null || otherField === void 0 ? void 0 : otherField.label).first().click({\n      force: true\n    });\n    handleDropdownField(otherField, `[data-testid=\"fields-box-xhbyf34nj\"]`);\n  }\n  buSaveButton().click();\n  cyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.requestSuccess);\n});",
              "err": {},
              "uuid": "9355fd1f-0dfe-4353-95b2-b343340bac29",
              "parentUUID": "208810ed-e59b-44a9-8555-ee17ac8f37ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9355fd1f-0dfe-4353-95b2-b343340bac29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13901,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0a2a2a5c-c2a7-4be4-9b40-cb773c386ae8",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "06e4daf3-5c9f-408f-87c3-aa41712aebfe",
          "title": "Test the functionality of bulk Assign",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Single owner assignment",
              "fullTitle": "Test the functionality of bulk Assign Single owner assignment",
              "timedOut": null,
              "duration": 11707,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  const totalOwner = response.body.result.values.length;\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (totalOwner > 5) {\n    buSearchbox(globalSel.search, subLabel[0]);\n  }\n  ownerIndex(ownerLabel[0], subLabel[0]);\n  cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n  buSaveButton().click({\n    force: true\n  });\n});",
              "err": {},
              "uuid": "df1e3351-f1c9-4df9-9dea-7f4b78778a04",
              "parentUUID": "06e4daf3-5c9f-408f-87c3-aa41712aebfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assign lead equally",
              "fullTitle": "Test the functionality of bulk Assign Assign lead equally",
              "timedOut": null,
              "duration": 8788,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  const totalOwner = response.body.result.values.length;\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (response.body.result.values.length > 1) {\n    if (totalOwner > 5) {\n      buSearchbox(globalSel.search, subLabel[0]);\n    }\n    ownerIndex(ownerLabel[0], subLabel[0]);\n    if (totalOwner > 5) {\n      buSearchbox(globalSel.search, subLabel[1]);\n    }\n    ownerIndex(ownerLabel[1], subLabel[1]);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"eq\"]').click();\n    cyGet('[aria-label=\"Assign lead equally\"]').should(\"have.text\", \"Assign lead equally\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label === ownerLabel[0]);\n      let ownerName_1 = response.body.result.values.filter(ele => ele[ownerFieldId][0].label === ownerLabel[1]);\n      let recordLength = response.body.result.values.length;\n      if (recordLength % 2 === 0) {\n        expect(ownerName).have.length(recordLength / 2);\n        expect(ownerName_1).have.length(recordLength / 2);\n      } else {\n        expect(ownerName).have.length((recordLength + 1) / 2);\n        expect(ownerName_1).have.length((recordLength - 1) / 2);\n      }\n    });\n  } else {\n    ownerIndex(ownerLabel[0], subLabel[0]);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n    });\n  }\n});",
              "err": {},
              "uuid": "b2b670e5-ab0d-4385-8683-8778edd7478b",
              "parentUUID": "06e4daf3-5c9f-408f-87c3-aa41712aebfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assign all lead",
              "fullTitle": "Test the functionality of bulk Assign Assign all lead",
              "timedOut": null,
              "duration": 7908,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (response.body.result.values.length > 1) {\n    ownerIndex(ownerLabel[0], subLabel[0], 1);\n    ownerIndex(ownerLabel[1], subLabel[1], 2);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"all\"]').should(\"be.checked\");\n    cyGet('[aria-label=\"Assign all\"]').should(\"have.text\", \"Assign all\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let ownerName_1 = response.body.result.values.filter(ele => ele[ownerFieldId][1].label == ownerLabel[1]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n      expect(ownerName_1).have.length(recordLength);\n    });\n  } else {\n    ownerIndex(ownerLabel[0], subLabel[0], 1);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"all\"]').should(\"be.checked\");\n    cyGet('[aria-label=\"Assign all\"]').should(\"have.text\", \"Assign all\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n    });\n  }\n  ;\n});",
              "err": {},
              "uuid": "9d570e01-1d4c-45b9-a196-b3699a722d64",
              "parentUUID": "06e4daf3-5c9f-408f-87c3-aa41712aebfe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df1e3351-f1c9-4df9-9dea-7f4b78778a04",
            "b2b670e5-ab0d-4385-8683-8778edd7478b",
            "9d570e01-1d4c-45b9-a196-b3699a722d64"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28403,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "588909ef-f7ff-4b8a-ba4b-870700403c8a",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e6b43c3d-0b9a-4680-8382-34983774d484",
          "title": "Test the functionality of bulk delete",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Soft delete records",
              "fullTitle": "Test the functionality of bulk delete Soft delete records",
              "timedOut": null,
              "duration": 13358,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncy.wait(\"@getRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  if (recordLength === 0) {\n    cyGet('table > thead input').should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    bulkdeletedialogElements(recordLength, asset, \"soft\", remainsRecord);\n  }\n  ;\n});",
              "err": {},
              "uuid": "9e851a5b-1574-4f23-aa83-cc23b3485173",
              "parentUUID": "e6b43c3d-0b9a-4680-8382-34983774d484",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Hard delete records",
              "fullTitle": "Test the functionality of bulk delete Hard delete records",
              "timedOut": null,
              "duration": 6144,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncy.wait(\"@getRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  if (recordLength === 0) {\n    cyGet('table > thead input').should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    bulkdeletedialogElements(recordLength, asset, \"hard\", remainsRecord);\n  }\n  ;\n});",
              "err": {},
              "uuid": "fa42d160-061e-4171-a884-28228a395ce7",
              "parentUUID": "e6b43c3d-0b9a-4680-8382-34983774d484",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e851a5b-1574-4f23-aa83-cc23b3485173",
            "fa42d160-061e-4171-a884-28228a395ce7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19502,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a7043237-752c-42d5-85c0-0eb961b9dfa1",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
      "file": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a42bede4-6e6b-4d2c-ba99-a456c435400b",
          "title": "Nevigate the lead page and test grid view componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
          "file": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add Field on grid view",
              "fullTitle": "Nevigate the lead page and test grid view componet Add Field on grid view",
              "timedOut": null,
              "duration": 15947,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const {\n    label,\n    catId\n  } = response.body.result;\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const allGroup = response.body.result.values.filter(ele => ele.group === label);\n    const selectedField = response.body.result.selectedProperties;\n    const lastIndexfield = allGroup.slice(-1);\n    if (selectedField.length >= 20) {\n      const attachFieldOnView = selectedField.slice(0, 10);\n      const apiUrl = Cypress.env(\"apiurl\");\n      const gridViewUrl = `${apiUrl}/fms/views/grid`;\n      const reqQs = {\n        module,\n        asset,\n        \"catId\": catId\n      };\n      const reqHeader = {\n        Authorization: \"Bearer \" + Cypress.env(\"token\")\n      };\n      const payload = {\n        fields: [...attachFieldOnView]\n      };\n      request(\"PATCH\", gridViewUrl, reqHeader, reqQs, payload).then(({\n        body\n      }) => {\n        expect(body).to.have.property(\"success\", true);\n      });\n      cyGet(`[data-testid=\"cancel\"]`).click();\n      cyGet('#fields').click();\n      cyGet('#editCol').click();\n    }\n    setFieldOnViewConfig('[role=\"dialog\"] [type=\"text\"]', lastIndexfield[0].label, lead.chkbxOnfieldConfig);\n    cyGet(lead.typeBtn).contains(\"Apply\").click();\n    cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\").then(({\n      response\n    }) => {\n      let fieldView = response.body.result.view.columns.filter(ele => ele.label == lastIndexfield[0].label);\n      expect(fieldView[0].label).to.eq(lastIndexfield[0].label);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 4000ms: `cy.clear()` failed because this element:\n\n`<input aria-invalid=\"false\" id=\":r3k:\" placeholder=\"Search...\" type=\"text\" class=\"MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd css-zx4ddm\" value=\"\">`\n\nis being covered by another element:\n\n`<div class=\"jss57 MuiBox-root css-0\" data-testid=\"notificationpopupcomponent-slide-7prnho3oe\" style=\"translate: 0px -130px; width: 580px; z-index: 1398; transform: none; transition: transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms;\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying after 4000ms: `cy.clear()` failed because this element:\n\n`<input aria-invalid=\"false\" id=\":r3k:\" placeholder=\"Search...\" type=\"text\" class=\"MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd css-zx4ddm\" value=\"\">`\n\nis being covered by another element:\n\n`<div class=\"jss57 MuiBox-root css-0\" data-testid=\"notificationpopupcomponent-slide-7prnho3oe\" style=\"translate: 0px -130px; width: 580px; z-index: 1398; transform: none; transition: transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms;\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at ensureIsDescendent (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112861:68)\n    at ensureDescendents (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112912:5)\n    at ensureDescendentsAndScroll (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112918:14)\n    at ensureElIsNotCovered (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113049:5)\n    at runAllChecks (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113248:52)\n    at retryActionability (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113285:16)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144102:68)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144043:14)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/grid.js:42:24)",
                "diff": null
              },
              "uuid": "f1b789c3-ad44-4c2d-90b6-89d274d24cf4",
              "parentUUID": "a42bede4-6e6b-4d2c-ba99-a456c435400b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Field from grid view",
              "fullTitle": "Nevigate the lead page and test grid view componet Remove Field from grid view",
              "timedOut": null,
              "duration": 10439,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipName = response.body.result.label;\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let allGroup = response.body.result.values.filter(ele => ele.group == pipName);\n    let lstindexfield = allGroup.slice(-1);\n    cy.get('[role=\"dialog\"] [type=\"text\"]').clear().type(lstindexfield[0].label);\n    cy.get('.MuiBox-root > .MuiListItem-root input').first().then($ele => {\n      if ($ele.is(':checked')) {\n        cy.wrap($ele).first().click();\n      } else {\n        cy.wrap($ele).first().click(); //check then\n        cy.wrap($ele).first().click(); // uncheck\n      }\n    });\n    cy.get(lead.typeBtn).contains(\"Apply\").click();\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\").then(({\n      response\n    }) => {\n      let fieldView = response.body.result.view.columns.map(ele => ele.label);\n      fieldView.forEach(ele => {\n        expect(ele).be.not.eq(lstindexfield[0].label);\n      });\n    });\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 4000ms: `cy.clear()` failed because this element:\n\n`<input aria-invalid=\"false\" id=\":r1j:\" placeholder=\"Search...\" type=\"text\" class=\"MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd css-zx4ddm\" value=\"\">`\n\nis being covered by another element:\n\n`<div class=\"jss129 MuiBox-root css-0\" data-testid=\"notificationpopupcomponent-slide-7prnho3oe\" style=\"translate: 0px -130px; width: 580px; z-index: 1398; transform: none; transition: transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms;\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying after 4000ms: `cy.clear()` failed because this element:\n\n`<input aria-invalid=\"false\" id=\":r1j:\" placeholder=\"Search...\" type=\"text\" class=\"MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd css-zx4ddm\" value=\"\">`\n\nis being covered by another element:\n\n`<div class=\"jss129 MuiBox-root css-0\" data-testid=\"notificationpopupcomponent-slide-7prnho3oe\" style=\"translate: 0px -130px; width: 580px; z-index: 1398; transform: none; transition: transform 225ms cubic-bezier(0, 0, 0.2, 1) 0ms;\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at ensureIsDescendent (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112861:68)\n    at ensureDescendents (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112912:5)\n    at ensureDescendentsAndScroll (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112918:14)\n    at ensureElIsNotCovered (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113049:5)\n    at runAllChecks (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113248:52)\n    at retryActionability (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113285:16)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144102:68)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144043:14)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/grid.js:68:56)",
                "diff": null
              },
              "uuid": "dc0602a1-47cc-46dd-9a63-77eff9b23a1f",
              "parentUUID": "a42bede4-6e6b-4d2c-ba99-a456c435400b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Re-order field on grid view config page",
              "fullTitle": "Nevigate the lead page and test grid view componet Re-order field on grid view config page",
              "timedOut": null,
              "duration": 5665,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(() => {\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let selectedProp = response.body.result.selectedProperties;\n    if (selectedProp.length > 3) {\n      cy.dragAndDrop(`[data-rbd-draggable-id=\"${selectedProp[1]}\"]`, `[data-rbd-draggable-id=\"${selectedProp[2]}\"]`);\n      onesecondWait();\n      cyGet(lead.typeBtn).contains(\"Apply\").click();\n      cy.wait(\"@recordGrid\");\n      cy.wait(\"@recordGrid\").then(({\n        response\n      }) => {\n        expect(response.body.result.view.columns[1]).have.property(\"id\", selectedProp[2]);\n        expect(response.body.result.view.columns[2]).have.property(\"id\", selectedProp[1]);\n      });\n    } else {\n      this.skip();\n    }\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 4050ms: `cy.click()` failed because this element:\n\n`<li class=\"MuiButtonBase-root MuiMenuItem-root MuiMenuItem-gutters MuiMenuItem-root MuiMenuItem-gutters menuItem css-1ijflm4\" tabindex=\"-1\" role=\"menuitem\" id=\"editCol\" data-testid=\"busimpledropdown-menuitem-78eqrxt4n\">...</li>`\n\nis being covered by another element:\n\n`<div class=\"jss5 jss53\" data-testid=\"loadingoverlay-div-yizhe8l76\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying after 4050ms: `cy.click()` failed because this element:\n\n`<li class=\"MuiButtonBase-root MuiMenuItem-root MuiMenuItem-gutters MuiMenuItem-root MuiMenuItem-gutters menuItem css-1ijflm4\" tabindex=\"-1\" role=\"menuitem\" id=\"editCol\" data-testid=\"busimpledropdown-menuitem-78eqrxt4n\">...</li>`\n\nis being covered by another element:\n\n`<div class=\"jss5 jss53\" data-testid=\"loadingoverlay-div-yizhe8l76\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at ensureIsDescendent (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112861:68)\n    at ensureDescendents (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112912:5)\n    at ensureDescendentsAndScroll (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112918:14)\n    at ensureElIsNotCovered (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113049:5)\n    at runAllChecks (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113248:52)\n    at retryActionability (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113285:16)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144102:68)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144043:14)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/grid.js:94:30)",
                "diff": null
              },
              "uuid": "8326918f-70cc-4580-8dc4-dfa827867b0d",
              "parentUUID": "a42bede4-6e6b-4d2c-ba99-a456c435400b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Redirect on field setting page after clicking on \"manage field\" button",
              "fullTitle": "Nevigate the lead page and test grid view componet Redirect on field setting page after clicking on \"manage field\" button",
              "timedOut": null,
              "duration": 6029,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet('#fields').click();\ncyGet('#editCol').click();\ncyGet(`[data-testid=\"Manage fields\"]`).contains(\"Manage fields\").click();\ncy.url().should(\"eq\", `${updatedUrl}/setting/properties`);\ncyGet('.MuiTypography-caption').contains(`Fields store information about ${moduleName}.`);",
              "err": {
                "message": "CypressError: Timed out retrying after 4050ms: `cy.click()` failed because this element:\n\n`<button class=\"MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorSecondary MuiButton-root MuiButton-text MuiButton-textSecondary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorSecondary css-1qt99jx\" tabindex=\"0\" type=\"button\" id=\"3\" data-testid=\"Manage fields\" style=\"text-wrap: nowrap;\">Manage ...</button>`\n\nis being covered by another element:\n\n`<div class=\"jss5 jss53\" data-testid=\"loadingoverlay-div-yizhe8l76\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying after 4050ms: `cy.click()` failed because this element:\n\n`<button class=\"MuiButtonBase-root MuiButton-root MuiButton-text MuiButton-textSecondary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorSecondary MuiButton-root MuiButton-text MuiButton-textSecondary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButton-colorSecondary css-1qt99jx\" tabindex=\"0\" type=\"button\" id=\"3\" data-testid=\"Manage fields\" style=\"text-wrap: nowrap;\">Manage ...</button>`\n\nis being covered by another element:\n\n`<div class=\"jss5 jss53\" data-testid=\"loadingoverlay-div-yizhe8l76\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at ensureIsDescendent (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112861:68)\n    at ensureDescendents (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112912:5)\n    at ensureDescendentsAndScroll (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112918:14)\n    at ensureElIsNotCovered (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113049:5)\n    at runAllChecks (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113248:52)\n    at retryActionability (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113285:16)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144102:68)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144043:14)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/grid.js:115:73)",
                "diff": null
              },
              "uuid": "19969164-a273-46e7-9ebb-7aa62325239e",
              "parentUUID": "a42bede4-6e6b-4d2c-ba99-a456c435400b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the detail page",
              "fullTitle": "Nevigate the lead page and test grid view componet Should redirected to the detail page",
              "timedOut": null,
              "duration": 4625,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@recordGrid\").then(({\n  response\n}) => {\n  const recordId = response.body.result.values[0].id;\n  const uidField = response.body.result.view.columns.find(ele => ele.prop === \"uid\");\n  const uidFieldValue = response.body.result.values[0][uidField.id];\n  cy.contains(`tr`, uidFieldValue).find(`td`).contains(uidFieldValue).click({\n    force: true\n  });\n  cy.url().should(\"contain\", `${updatedUrl}/${asset}s/${recordId}`);\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'id')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'id')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/grid.js:138:60)",
                "diff": null
              },
              "uuid": "3a4cd2c7-5d48-43be-931a-bd4bb0c93a17",
              "parentUUID": "a42bede4-6e6b-4d2c-ba99-a456c435400b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f1b789c3-ad44-4c2d-90b6-89d274d24cf4",
            "dc0602a1-47cc-46dd-9a63-77eff9b23a1f",
            "8326918f-70cc-4580-8dc4-dfa827867b0d",
            "19969164-a273-46e7-9ebb-7aa62325239e",
            "3a4cd2c7-5d48-43be-931a-bd4bb0c93a17"
          ],
          "pending": [],
          "skipped": [],
          "duration": 42705,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8ce581ad-f4b4-49bb-8378-797baf233e57",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
      "file": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "da179132-60cc-42ea-9506-99637615751c",
          "title": "Nevigate the lead page and test kanban view componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
          "file": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify uid field should be required and selected on kanban view",
              "fullTitle": "Nevigate the lead page and test kanban view componet Verify uid field should be required and selected on kanban view",
              "timedOut": null,
              "duration": 12660,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncy.wait(\"@kanbanViewConfig\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  getKanbanResult = response.body.result;\n  const uidField = getKanbanResult.values.find(ele => ele.required === true);\n  expect(uidField).has.property(\"label\", `${assetName} Id`);\n  expect(uidField).has.property(\"required\", true);\n  expect(uidField).has.property(\"selected\", true);\n  cyGet('[variant=\"standard\"] [type=\"search\"]').type(uidField === null || uidField === void 0 ? void 0 : uidField.label);\n  cyGet(lead.chkbxOnfieldConfig).first().should(\"be.checked\").and(\"be.disabled\");\n});",
              "err": {},
              "uuid": "a0414793-49eb-48fe-b90a-43386716eb65",
              "parentUUID": "da179132-60cc-42ea-9506-99637615751c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Field on Kanban view if selected field less than 5",
              "fullTitle": "Nevigate the lead page and test kanban view componet Add Field on Kanban view if selected field less than 5",
              "timedOut": null,
              "duration": 6344,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\nconst selectedFields = getKanbanResult.selectedProperties;\nif (selectedFields.length < 5) {\n  const unselectedFields = getKanbanResult.values.find(ele => ele.selected === false);\n  cy.log(JSON.stringify(selectedFields));\n  cy.log(JSON.stringify(unselectedFields));\n  setFieldOnViewConfig('[variant=\"standard\"] [type=\"search\"]', unselectedFields === null || unselectedFields === void 0 ? void 0 : unselectedFields.label, lead.chkbxOnfieldConfig);\n  cyGet(lead.typeBtn).contains(\"Save\").click();\n} else {\n  cy.log(`5 field already selected`);\n}",
              "err": {},
              "uuid": "b24987d4-afcb-4e35-943d-94ad92cf4571",
              "parentUUID": "da179132-60cc-42ea-9506-99637615751c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Field on Kanban view",
              "fullTitle": "Nevigate the lead page and test kanban view componet Remove Field on Kanban view",
              "timedOut": null,
              "duration": 6999,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet('[data-rbd-droppable-id=\"column\"]').children().then(childlength => {\n  let count = Cypress.$(childlength).length;\n  let nth = count - 1;\n  cy.log('option count: ', count);\n  cyGet(`[data-rbd-droppable-id=\"column\"] > :nth-child(${nth}) > :nth-child(1) > :nth-child(1) > :nth-child(2)`).click();\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();",
              "err": {},
              "uuid": "6addaf10-d942-4ab3-ad28-06a444f4d129",
              "parentUUID": "da179132-60cc-42ea-9506-99637615751c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Card style: Compact",
              "fullTitle": "Nevigate the lead page and test kanban view componet Card style: Compact",
              "timedOut": null,
              "duration": 7324,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet(`[name=\"compact\"]`).then($ele => {\n  if ($ele.is(':checked')) {\n    cy.log(`Compact already checked`);\n  } else {\n    cy.wrap($ele).check();\n  }\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\ncy.wait(\"@recordKanben\");\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.config).have.property(\"cardStyle\", \"compact\");\n});",
              "err": {},
              "uuid": "516a2e9f-4b47-4daa-b7c8-15ac234f12f1",
              "parentUUID": "da179132-60cc-42ea-9506-99637615751c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Card style: Default",
              "fullTitle": "Nevigate the lead page and test kanban view componet Card style: Default",
              "timedOut": null,
              "duration": 7056,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet(`[name=\"default\"]`).then($ele => {\n  if ($ele.is(':checked')) {\n    cy.log(`Default already checked`);\n  } else {\n    cy.wrap($ele).check();\n  }\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\ncy.wait(1000);\ncy.wait(\"@recordKanben\");\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.config).have.property(\"cardStyle\", \"default\");\n});",
              "err": {},
              "uuid": "e6be4aee-7d57-419b-bb3d-a31f5fddcd69",
              "parentUUID": "da179132-60cc-42ea-9506-99637615751c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Re-order field on kanban view config page",
              "fullTitle": "Nevigate the lead page and test kanban view componet Re-order field on kanban view config page",
              "timedOut": null,
              "duration": 6251,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncy.wait(\"@kanbanViewConfig\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let selectedProp = response.body.result.selectedProperties;\n  expect(response.body.result.selectedProperties).be.length.greaterThan(2);\n  cy.dragAndDrop(`[data-rbd-draggable-id=\"${selectedProp[1]}\"]`, `[data-rbd-draggable-id=\"${selectedProp[2]}\"]`);\n  onesecondWait();\n  cyGet(lead.typeBtn).contains(\"Save\").click();\n  cy.wait(\"@recordKanben\");\n  cy.wait(\"@recordKanben\").then(({\n    response\n  }) => {\n    expect(response.body.result.config.fields[0]).have.property(\"id\", selectedProp[2]);\n    expect(response.body.result.config.fields[1]).have.property(\"id\", selectedProp[1]);\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 4050ms: `cy.click()` failed because this element:\n\n`<button class=\"MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeMedium simple-dropdown-button css-10qwo59\" tabindex=\"0\" type=\"button\" id=\"fields\" variant=\"text\" title=\"\" data-testid=\"busimpledropdown-iconbutton-81obeefh3\">...</button>`\n\nis being covered by another element:\n\n`<div class=\"jss5 jss53\" data-testid=\"loadingoverlay-div-yizhe8l76\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying after 4050ms: `cy.click()` failed because this element:\n\n`<button class=\"MuiButtonBase-root MuiIconButton-root MuiIconButton-sizeMedium simple-dropdown-button css-10qwo59\" tabindex=\"0\" type=\"button\" id=\"fields\" variant=\"text\" title=\"\" data-testid=\"busimpledropdown-iconbutton-81obeefh3\">...</button>`\n\nis being covered by another element:\n\n`<div class=\"jss5 jss53\" data-testid=\"loadingoverlay-div-yizhe8l76\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at ensureIsDescendent (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112861:68)\n    at ensureDescendents (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112912:5)\n    at ensureDescendentsAndScroll (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:112918:14)\n    at ensureElIsNotCovered (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113049:5)\n    at runAllChecks (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113248:52)\n    at retryActionability (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:113285:16)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144102:68)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144043:14)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/kanban.js:110:25)",
                "diff": null
              },
              "uuid": "072bfac4-1c7a-46dd-b12e-8cf982ccac13",
              "parentUUID": "da179132-60cc-42ea-9506-99637615751c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the create record form after clicking the \"Add Lead\" button",
              "fullTitle": "Nevigate the lead page and test kanban view componet Should redirected to the create record form after clicking the \"Add Lead\" button",
              "timedOut": null,
              "duration": 6990,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData = response.body.result.values[stageOnKanban[1]];\n  cyGet(`[data-rbd-draggable-id=\"${stageOnKanban[1]}\"] > :nth-child(1) > :nth-child(1)> :nth-child(1) > :nth-child(1)`).should(\"have.text\", stageData.label);\n  cyGet(`[data-rbd-draggable-id=\"${stageOnKanban[1]}\"] > :nth-child(1) > :nth-child(4) button`).click();\n  cy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").type(faker.string.numeric(10));\n  cy.componentLabel(lead.formLabel, \"Stage\", \"span\").should(\"have.text\", stageData.label);\n  cyGet(lead.saveBtn).click();\n  cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Created successfully.\");\n});",
              "err": {},
              "uuid": "def6ef29-2590-42d6-8f7c-fe30a00506a3",
              "parentUUID": "da179132-60cc-42ea-9506-99637615751c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Drag and drop an item one stage to another stage",
              "fullTitle": "Nevigate the lead page and test kanban view componet Drag and drop an item one stage to another stage",
              "timedOut": null,
              "duration": 11679,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[1]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cy.dragAndDrop(`[data-rbd-draggable-id=\"${itemId_1[0]}\"]`, `[data-rbd-draggable-id=\"${stageOnKanban[0]}\"]`);\n  cy.wait(1000);\n  cy.wait(\"@kanbanStage\").then(({\n    response\n  }) => {\n    expect(response.body).have.property(\"message\", \"Updated successfully.\");\n    expect(response.body.result.source).have.property(\"id\", stageOnKanban[1]);\n    expect(response.body.result.target).have.property(\"id\", stageOnKanban[0]);\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `kanbanStage`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `kanbanStage`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:76025:18)\n    at Object.errByPath (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:76079:10)\n    at checkForXhr (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:135700:84)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:135726:28)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144102:68)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:144043:14)\n    at tryCatcher (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (http://api.buopso.lcl/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/kanban.js:148:15)",
                "diff": null
              },
              "uuid": "2ed87a74-377a-47ef-a9be-4abcdbaf67c3",
              "parentUUID": "da179132-60cc-42ea-9506-99637615751c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the detail page after clicking the \"edit\" button",
              "fullTitle": "Nevigate the lead page and test kanban view componet Should redirected to the detail page after clicking the \"edit\" button",
              "timedOut": null,
              "duration": 15966,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[0]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cyGet(`[data-rbd-draggable-id=\"${itemId_1[0]}\"] [aria-controls=\"more\"]`).click();\n  cyGet('[role=\"menu\"] > :nth-child(1) > li').first().find(\"span\").contains(\"Edit\").click();\n  cy.url().should(\"contain\", `${updatedUrl}/${asset}s/${itemId_1[0]}`);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-rbd-draggable-id=\"undefined\"] [aria-controls=\"more\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-rbd-draggable-id=\"undefined\"] [aria-controls=\"more\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:10:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/kanban.js:162:12)",
                "diff": null
              },
              "uuid": "700be722-8591-40aa-b1a6-2d5e79b62e72",
              "parentUUID": "da179132-60cc-42ea-9506-99637615751c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete record from kanban view page",
              "fullTitle": "Nevigate the lead page and test kanban view componet delete record from kanban view page",
              "timedOut": null,
              "duration": 16388,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let dialogDecs = `Are you sure you want to delete this ${asset}?`;\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[0]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cyGet(`[data-rbd-draggable-id=\"${itemId_1[0]}\"] [aria-controls=\"more\"]`).click();\n  cyGet('[role=\"menu\"] > :nth-child(1) > li').last().find(\"span\").contains(\"Delete\").click();\n  cy.roleDialog(lead.dialogTitle, `Delete ${asset}`, lead.dialogDesc, dialogDecs, '#delete', \"Delete\");\n  cy.wait(\"@deleteRecord\").then(({\n    response\n  }) => {\n    expect(response.body).have.property(\"message\", \"Deleted successfully.\");\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-rbd-draggable-id=\"undefined\"] [aria-controls=\"more\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-rbd-draggable-id=\"undefined\"] [aria-controls=\"more\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:10:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/kanban.js:175:12)",
                "diff": null
              },
              "uuid": "d212bf1c-3e6e-4028-b5da-57d04d1c6377",
              "parentUUID": "da179132-60cc-42ea-9506-99637615751c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0414793-49eb-48fe-b90a-43386716eb65",
            "b24987d4-afcb-4e35-943d-94ad92cf4571",
            "6addaf10-d942-4ab3-ad28-06a444f4d129",
            "516a2e9f-4b47-4daa-b7c8-15ac234f12f1",
            "e6be4aee-7d57-419b-bb3d-a31f5fddcd69",
            "def6ef29-2590-42d6-8f7c-fe30a00506a3"
          ],
          "failures": [
            "072bfac4-1c7a-46dd-b12e-8cf982ccac13",
            "2ed87a74-377a-47ef-a9be-4abcdbaf67c3",
            "700be722-8591-40aa-b1a6-2d5e79b62e72",
            "d212bf1c-3e6e-4028-b5da-57d04d1c6377"
          ],
          "pending": [],
          "skipped": [],
          "duration": 97657,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "55325939-db2a-491e-be45-a510e2a0f53f",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
      "file": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9be5370a-ea32-482b-a29c-fd63d2530feb",
          "title": "Nevigate the setting page and delete and restore field",
          "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
          "file": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete or detach a field and verify that it is stored in the deleted field section",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete or detach a field and verify that it is stored in the deleted field section",
              "timedOut": null,
              "duration": 9835,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${updatedUrl}/setting/properties`);\n// cy.visit(`${Cypress.env(\"lmsUrl\")}/setting/properties`)\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const nonSystemFields = response.body.result.values.filter(field => field.system === false);\n  // cy.log(JSON.stringify(nonSystemFields))\n  let fieldData = nonSystemFields.slice(-1);\n  // cy.log(JSON.stringify(fieldData))\n  let attachedCount = nonSystemFields[0].attachedCount.count;\n  if (attachedCount <= 1) {\n    (0, _global.fieldSearchAndAct)(fieldData[0].label, \"#delete\");\n    cy.get(\"#delete\").click();\n  } else {\n    (0, _global.fieldSearchAndAct)(fieldData[0].label, \"#detach\");\n    cy.get(\"#detach\").click();\n  }\n  cy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n    timeout: 10000\n  }).contains(\"Deleted fields\").click();\n  cy.wait(\"@binList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let binField = response.body.result.values.map(ele => ele.label);\n    cy.log(JSON.stringify(binField));\n    // if (response.body.result.pages.totalNoOfPages == 1) {\n    //     expect(binField.slice(-1)).to.be.contains(fieldData[0].label)\n    // } else {\n    //     cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click()\n    //     cy.wait(\"@binList\", { timeout: 10000 }).then(({ response }) => {\n    //         let binField = response.body.result.values.map(ele => ele.label)\n    //         expect(binField.slice(-1)).to.be.contains(fieldData[0].label)\n    //     })\n    // }\n  });\n});",
              "err": {},
              "uuid": "fb758e52-10cf-48e4-a831-1c90143bc6e4",
              "parentUUID": "9be5370a-ea32-482b-a29c-fd63d2530feb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore field from field tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Restore field from field tab",
              "timedOut": null,
              "duration": 2008,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Restore 1 field ?\";\nlet desc = \"Are you sure you want to  restore 1 field ?\";\ncy.visit(`${updatedUrl}/setting/properties`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Deleted fields\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#restore\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[data-testid=\"Restore\"]`, \"Restore\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:77:58)",
                "diff": ""
              },
              "uuid": "490869cc-fdc9-4ceb-8526-68beeaee7253",
              "parentUUID": "9be5370a-ea32-482b-a29c-fd63d2530feb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete field from field tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete field from field tab",
              "timedOut": null,
              "duration": 1128,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Delete 1 field ?\";\nlet desc = \"Are you sure you want to  delete 1 field ?\";\ncy.visit(`${updatedUrl}/setting/properties`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Deleted fields\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#delete\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:90:58)",
                "diff": ""
              },
              "uuid": "cf35ac4a-2993-475d-a0e3-bbf52919a357",
              "parentUUID": "9be5370a-ea32-482b-a29c-fd63d2530feb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter single line field and verify column with rows us",
              "fullTitle": "Nevigate the setting page and delete and restore field Filter single line field and verify column with rows us",
              "timedOut": null,
              "duration": 4566,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.recordCountOnPage(\"10\");\ncy.get('[aria-label=\"Select field type\"]').click();\nfieldTypeFilterSel(\"Multi line text\");\ncy.get('.MuiButton-endIcon').click();\ncy.wait(\"@binList\");\ncy.wait(\"@binList\");\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  let binFieldLabel = response.body.result.values.map(ele => ele.label);\n  let deletedType = response.body.result.values.map(ele => {\n    return ele.type.charAt(0).toUpperCase() + ele.type.slice(1);\n  });\n  let deletedBy = response.body.result.values.map(ele => ele.deletedBy);\n  let userName = deletedBy.map(key => {\n    let label = key.label;\n    return label;\n  });\n  let fieldTypeArray = Array(binFieldLabel.length).fill(\"Multi line text\");\n  verifyTablecolNrow(lead.thead, 2, \"Field name\", lead.tbody, binFieldLabel);\n  verifyTablecolNrow(lead.thead, 3, \"Field type\", lead.tbody, fieldTypeArray);\n  verifyTablecolNrow(lead.thead, 4, \"Deleted by\", lead.tbody, userName);\n  verifyTablecolNrow(lead.thead, 5, \"Deleted type\", lead.tbody, deletedType);\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:107:58)",
                "diff": ""
              },
              "uuid": "eaaec4df-c6ad-4138-90dc-eca61977c751",
              "parentUUID": "9be5370a-ea32-482b-a29c-fd63d2530feb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore field from bin tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Restore field from bin tab",
              "timedOut": null,
              "duration": 2038,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Restore 1 field ?\";\nlet desc = \"Are you sure you want to restore 1 field ? \";\ncy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#restore\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Restore\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:131:58)",
                "diff": ""
              },
              "uuid": "60c2441f-c3b4-4d2d-b8cc-5f816f392ace",
              "parentUUID": "9be5370a-ea32-482b-a29c-fd63d2530feb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete field from bin tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete field from bin tab",
              "timedOut": null,
              "duration": 1149,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Delete 1  field ?\";\nlet desc = \"Are you sure you want to delete 1 field ? \";\ncy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#delete\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:144:58)",
                "diff": ""
              },
              "uuid": "50b331cf-506a-47bc-b9d3-6b29934c1cfb",
              "parentUUID": "9be5370a-ea32-482b-a29c-fd63d2530feb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb758e52-10cf-48e4-a831-1c90143bc6e4"
          ],
          "failures": [
            "490869cc-fdc9-4ceb-8526-68beeaee7253",
            "cf35ac4a-2993-475d-a0e3-bbf52919a357",
            "eaaec4df-c6ad-4138-90dc-eca61977c751",
            "60c2441f-c3b4-4d2d-b8cc-5f816f392ace",
            "50b331cf-506a-47bc-b9d3-6b29934c1cfb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 20724,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b3f32bb1-90f5-4d13-b107-8f052b3a39f2",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
      "file": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bbe829a8-23e1-42b2-b92c-fd0b0f5b059c",
          "title": "Test the functionality of restore approval from bin",
          "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
          "file": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check if the Cancel button is working when restoring approval from bin",
              "fullTitle": "Test the functionality of restore approval from bin Check if the Cancel button is working when restoring approval from bin",
              "timedOut": null,
              "duration": 8340,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(lead.typeBtn).contains(\"Delete\").should(\"be.disabled\");\ncy.get(lead.typeBtn).contains(\"Restore\").should(\"be.disabled\");\ncy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  uidFeild = response.body.result.view.columns.find(fld => fld.prop === \"uid\");\n  const msg1 = `Restore ${recordLength} ${asset} ?`;\n  const msg2 = `Are you sure you want to restore ${recordLength} ${asset} ? `;\n  if (totalRecord === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(totalRecord).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Restore\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, lead.typeBtn, \"Cancel\");\n    cy.wait(500);\n    cy.get(lead.countOnGrid).contains(totalRecord);\n  }\n});",
              "err": {},
              "uuid": "d72e69eb-59fe-4dc5-a3ef-e809f2e673b5",
              "parentUUID": "bbe829a8-23e1-42b2-b92c-fd0b0f5b059c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore the approval from bin",
              "fullTitle": "Test the functionality of restore approval from bin Restore the approval from bin",
              "timedOut": null,
              "duration": 6440,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  let msg1 = `Restore ${recordLength} lead ?`;\n  let msg2 = `Are you sure you want to restore ${recordLength} lead ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Restore\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `.MuiDialogActions-root ${lead.typeBtn}`, \"Restore\");\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Request successful.\");\n    cy.get(lead.countOnGrid).contains(remainsRecord);\n  }\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<p.MuiTypography-root.MuiTypography-body2.css-u4fxa1>' to have text 'Restore 10 lead ?', but the text was 'Restore 10 approval ?'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<p.MuiTypography-root.MuiTypography-body2.css-u4fxa1>' to have text 'Restore 10 lead ?', but the text was 'Restore 10 approval ?'\n    at Context.eval (webpack://bu-testing/./cypress/support/commands.js:210:21)",
                "diff": "- 'Restore 10 approval ?'\n+ 'Restore 10 lead ?'\n"
              },
              "uuid": "42a7ec3d-d0dc-4d5f-a2ae-4bcbe7518041",
              "parentUUID": "bbe829a8-23e1-42b2-b92c-fd0b0f5b059c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check if the Cancel button is working when deleting approval from bin",
              "fullTitle": "Test the functionality of restore approval from bin Check if the Cancel button is working when deleting approval from bin",
              "timedOut": null,
              "duration": 3701,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let msg1 = `Delete ${recordLength} ${asset} ?`;\n  let msg2 = `Are you sure you want to delete ${recordLength} ${asset} ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, lead.typeBtn, \"Cancel\");\n    cy.wait(500);\n    cy.get(lead.countOnGrid).contains(totalRecord);\n  }\n});",
              "err": {},
              "uuid": "f38788c7-bff6-40e4-8212-7de075170b99",
              "parentUUID": "bbe829a8-23e1-42b2-b92c-fd0b0f5b059c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the approval from bin",
              "fullTitle": "Test the functionality of restore approval from bin Delete the approval from bin",
              "timedOut": null,
              "duration": 3137,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  let msg1 = `Delete ${recordLength} ${asset} ?`;\n  let msg2 = `Are you sure you want to delete ${recordLength} ${asset} ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Deleted successfully.\");\n    cy.get(lead.countOnGrid).contains(remainsRecord);\n  }\n});",
              "err": {},
              "uuid": "c406db0b-ac4d-4ad0-8811-f9be90889f63",
              "parentUUID": "bbe829a8-23e1-42b2-b92c-fd0b0f5b059c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d72e69eb-59fe-4dc5-a3ef-e809f2e673b5",
            "f38788c7-bff6-40e4-8212-7de075170b99",
            "c406db0b-ac4d-4ad0-8811-f9be90889f63"
          ],
          "failures": [
            "42a7ec3d-d0dc-4d5f-a2ae-4bcbe7518041"
          ],
          "pending": [],
          "skipped": [],
          "duration": 21618,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[datetime]",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "Buopso-UI-Report",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "reportFilename": "[datetime]",
        "timestamp": "isoDateTime",
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\.jsons",
        "saveJson": true
      },
      "version": "6.2.0"
    }
  }
}