{
  "stats": {
    "suites": 50,
    "tests": 240,
    "passes": 203,
    "pending": 4,
    "failures": 25,
    "testsRegistered": 240,
    "passPercent": 84.58333333333333,
    "pendingPercent": 1.6666666666666667,
    "other": 0,
    "hasOther": false,
    "skipped": 8,
    "hasSkipped": true,
    "start": "2025-08-27T11:04:32.746Z",
    "end": "2025-08-27T12:01:52.949Z",
    "duration": 3440203
  },
  "results": [
    {
      "uuid": "db77754f-1027-45cc-b846-0825abe9ffbe",
      "title": "",
      "fullFile": "cypress\\e2e\\auth\\login.js",
      "file": "cypress\\e2e\\auth\\login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "20293ab6-5c3c-4ca9-b077-189cc8a8cf57",
          "title": "Test case for login",
          "fullFile": "cypress\\e2e\\auth\\login.js",
          "file": "cypress\\e2e\\auth\\login.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Pass invalid email",
              "fullTitle": "Test case for login Pass invalid email",
              "timedOut": null,
              "duration": 2332,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(\"abc.xyzgmail.com\");\n  cy.get('.MuiFormHelperText-root').should(\"contain\", \"Please provide proper username\");\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Please enter a valid email.\");",
              "err": {},
              "uuid": "dc1a1d8c-119e-4549-89dc-2d16e466383f",
              "parentUUID": "20293ab6-5c3c-4ca9-b077-189cc8a8cf57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass wrong email",
              "fullTitle": "Test case for login Pass wrong email",
              "timedOut": null,
              "duration": 842,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(\"abc@xyx.com\");\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"user not found.\");",
              "err": {},
              "uuid": "be68e9fc-a6ab-4077-be3c-59d330163766",
              "parentUUID": "20293ab6-5c3c-4ca9-b077-189cc8a8cf57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass invalid password",
              "fullTitle": "Test case for login Pass invalid password",
              "timedOut": null,
              "duration": 1677,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(Cypress.env(\"email\"));\n  cy.get(\"@password\").type(132134344);\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Invalid username or password.\");",
              "err": {},
              "uuid": "c2904e91-455d-4693-be66-0a07103269ab",
              "parentUUID": "20293ab6-5c3c-4ca9-b077-189cc8a8cf57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass wrong password",
              "fullTitle": "Test case for login Pass wrong password",
              "timedOut": null,
              "duration": 1615,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(Cypress.env(\"email\"));\n  cy.get(\"@password\").type(\"AAsdf1234\");\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Invalid username or password.\");",
              "err": {},
              "uuid": "5811b053-b1d9-483c-91ab-d31052ae88d7",
              "parentUUID": "20293ab6-5c3c-4ca9-b077-189cc8a8cf57",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass the valid email in upper-case",
              "fullTitle": "Test case for login Pass the valid email in upper-case",
              "timedOut": null,
              "duration": 2587,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let email = Cypress.env(\"email\").toUpperCase();\ncy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(email);\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.wait(\"@loginApi\").then(({\n  response\n}) => {\n  if (response.body.result === \"session_exists\") {\n    cy.get('[role=\"presentation\"] .MuiDialog-container .MuiPaper-root button').contains(\"Ok\").click();\n  }\n});\ncy.get('[aria-label=\"User Profile\"] > .MuiButtonBase-root').click();\ncy.get('.MuiPaper-root .MuiTypography-root').contains(\"Sign out\").click();",
              "err": {},
              "uuid": "43cdb4e3-ae4a-4cf0-a1af-74411f19b776",
              "parentUUID": "20293ab6-5c3c-4ca9-b077-189cc8a8cf57",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc1a1d8c-119e-4549-89dc-2d16e466383f",
            "be68e9fc-a6ab-4077-be3c-59d330163766",
            "c2904e91-455d-4693-be66-0a07103269ab",
            "5811b053-b1d9-483c-91ab-d31052ae88d7",
            "43cdb4e3-ae4a-4cf0-a1af-74411f19b776"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9053,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b40dfa74-6b08-4f29-a207-a4ec2f809254",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\allSoftware.js",
      "file": "cypress\\e2e\\one\\allSoftware.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "11aa5db5-c5ab-46be-ba6a-acdb58648f86",
          "title": "Test case for allSoftware",
          "fullFile": "cypress\\e2e\\one\\allSoftware.js",
          "file": "cypress\\e2e\\one\\allSoftware.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Asset : Lead Management Software(lms)",
              "fullTitle": "Test case for allSoftware Asset : Lead Management Software(lms)",
              "timedOut": null,
              "duration": 5539,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let lmsDes = 'Efficiently manage and assign lead information.';\ncy.Modules(`#lms ${one.moduleNameID}`, _helper.modules.lms, `#lms ${one.moduleDescID}`, lmsDes, `#lms ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.lms);",
              "err": {},
              "uuid": "3ec18699-0f61-43a2-9127-0771e7eda1b7",
              "parentUUID": "11aa5db5-c5ab-46be-ba6a-acdb58648f86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Customer relationship management Software(crm)",
              "fullTitle": "Test case for allSoftware Asset : Customer relationship management Software(crm)",
              "timedOut": null,
              "duration": 4129,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let crmDes = 'Drive sales success, build stronger client relationships, and grow revenue with our CRM.';\ncy.Modules(`#crm  ${one.moduleNameID}`, _helper.modules.crm, `#crm  ${one.moduleDescID}`, crmDes, `#crm  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.crm);",
              "err": {},
              "uuid": "0c50310a-86d5-40ad-a6a9-1e15cadac1fb",
              "parentUUID": "11aa5db5-c5ab-46be-ba6a-acdb58648f86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Approval Management Software(cnf)",
              "fullTitle": "Test case for allSoftware Asset : Approval Management Software(cnf)",
              "timedOut": null,
              "duration": 3783,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let aprDes = 'The approver can approve public and private data as required.';\ncy.Modules(`#cnf  ${one.moduleNameID}`, _helper.modules.apr, `#cnf  ${one.moduleDescID}`, aprDes, `#cnf ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.apr);",
              "err": {},
              "uuid": "b39e5110-c921-4450-95a1-fe33807820fa",
              "parentUUID": "11aa5db5-c5ab-46be-ba6a-acdb58648f86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Buopso Form",
              "fullTitle": "Test case for allSoftware Asset : Buopso Form",
              "timedOut": null,
              "duration": 3656,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let formsDes = 'Build your form as required and gather the form data.';\ncy.Modules(`#forms  ${one.moduleNameID}`, _helper.modules.buForms, `#forms  ${one.moduleDescID}`, formsDes, `#forms  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.buForms);",
              "err": {},
              "uuid": "57be9f8f-4a8c-4d05-8c9f-31027831924a",
              "parentUUID": "11aa5db5-c5ab-46be-ba6a-acdb58648f86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Task Management",
              "fullTitle": "Test case for allSoftware Asset : Task Management",
              "timedOut": null,
              "duration": 3703,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let taskDes = 'Task management system. Manage task records and assign tasks to the user.';\ncy.Modules(`#task  ${one.moduleNameID}`, _helper.modules.taskManagement, `#task  ${one.moduleDescID}`, taskDes, `#task  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.taskManagement);",
              "err": {},
              "uuid": "413b8080-ca59-4a01-963b-a41f0f748c2b",
              "parentUUID": "11aa5db5-c5ab-46be-ba6a-acdb58648f86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Invoice",
              "fullTitle": "Test case for allSoftware Asset : Invoice",
              "timedOut": null,
              "duration": 4420,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let InvoiceDes = 'Invoice for customers and manage payment and ledger history.';\ncy.Modules(`#invoice ${one.moduleNameID}`, _helper.modules.invoice, `#invoice  ${one.moduleDescID}`, InvoiceDes, `#invoice ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.invoice);",
              "err": {},
              "uuid": "70011142-bdf8-4b7d-b634-3710a6126223",
              "parentUUID": "11aa5db5-c5ab-46be-ba6a-acdb58648f86",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ec18699-0f61-43a2-9127-0771e7eda1b7",
            "0c50310a-86d5-40ad-a6a9-1e15cadac1fb",
            "b39e5110-c921-4450-95a1-fe33807820fa",
            "57be9f8f-4a8c-4d05-8c9f-31027831924a",
            "413b8080-ca59-4a01-963b-a41f0f748c2b",
            "70011142-bdf8-4b7d-b634-3710a6126223"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25230,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bd36b724-3571-4f62-8d6f-635052631d30",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\addUser.js",
      "file": "cypress\\e2e\\one\\myAccount\\addUser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "76523efb-b604-48a0-9a8a-0d8f66d27691",
          "title": "Add User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\addUser.js",
          "file": "cypress\\e2e\\one\\myAccount\\addUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test with a valid unique Valid email",
              "fullTitle": "Add User functionality test Test with a valid unique Valid email",
              "timedOut": null,
              "duration": 19777,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet('[placeholder=\"Email id\"]').type(uniqueEmail);\ncy.contains(\"Select permission template\").click();\ncy.wait(\"@getTemplate\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let teplateName = response.body.result.values.map(ele => ele.label);\n  // cy.log(teplateName)\n  cy.wrap(teplateName).as(\"templates\");\n  if (response.body.result.values.length > 0) {\n    cy.assetDropdownSel(teplateName[0]).should(\"have.text\", teplateName[0]);\n  }\n  customElements;\n});\ncyGet(\"@templates\").then(response => {\n  templateLabel = response;\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\n// cy.pause()\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.requestSuccess);",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[placeholder=\"Email id\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[placeholder=\"Email id\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:3:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/one/myAccount/addUser.js:18:4)",
                "diff": null
              },
              "uuid": "6f6b94da-9bec-49c8-80ed-57688f9ad6dc",
              "parentUUID": "76523efb-b604-48a0-9a8a-0d8f66d27691",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with a invalid email",
              "fullTitle": "Add User functionality test Test with a invalid email",
              "timedOut": null,
              "duration": 5533,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let randomString_1 = Math.random().toString(36).substring(2, 11);\nlet uniqueEmail_1 = `testuser${randomString_1}example.com`;\ncy.get('[placeholder=\"Email id\"]').type(uniqueEmail_1);\ncy.contains(\"Select permission template\").click();\ncy.get('[data-testid=\"chipinput-chip-nkx7xamrs\"]').trigger('mouseover');\ncy.wait(500);\ncy.get('.MuiTooltip-tooltip').should('have.text', 'Email is not valid.');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[placeholder=\"Email id\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[placeholder=\"Email id\"]`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/one/myAccount/addUser.js:40:7)",
                "diff": null
              },
              "uuid": "308892ee-dd7e-4b1a-97f2-1ac5341004c4",
              "parentUUID": "76523efb-b604-48a0-9a8a-0d8f66d27691",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with a Exist email",
              "fullTitle": "Add User functionality test Test with a Exist email",
              "timedOut": null,
              "duration": 5705,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"Email id\"]').type(uniqueEmail);\ncy.contains(\"Select permission template\").click();\ncy.get('[data-testid=\"chipinput-chip-nkx7xamrs\"]').trigger('mouseover');\ncy.get('.MuiTooltip-tooltip').should('have.text', 'User already exist.');\ncy.get(lead.typeBtn).contains(\"Save\").should(\"be.disabled\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[placeholder=\"Email id\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[placeholder=\"Email id\"]`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/one/myAccount/addUser.js:48:7)",
                "diff": null
              },
              "uuid": "0712f482-2b6a-429d-ae1c-a88c39b76c3e",
              "parentUUID": "76523efb-b604-48a0-9a8a-0d8f66d27691",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test For addTemplate from Add user page",
              "fullTitle": "Add User functionality test Test For addTemplate from Add user page",
              "timedOut": null,
              "duration": 5817,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//  cy.componentLabel(lead.formLabel, \"Select permission template\", \"button\").click()\ncy.get('[data-testid=\"button-typography-8x5inumxs\"]').first().click(); //select the template\n// cy.assetDropdownSel(templateLabel[0]).click()\ncy.get('[data-testid=\"dropdown-footer\"]').contains('Add template').click(); // add new template\n// cy.contains('Add template').click();\ncy.url().should('eq', `${Cypress.env(\"url\")}/template`);\ncy.contains('Create').should('be.visible').should('not.be.disabled').click();",
              "err": {
                "message": "CypressError: Timed out retrying after 4050ms: `cy.click()` failed because it requires a DOM element, window or document.\n\nNo elements in the current DOM matched your query:\n\n  > cy.get([data-testid=\"dropdown-footer\"]).contains(Add template)",
                "estack": "CypressError: Timed out retrying after 4050ms: `cy.click()` failed because it requires a DOM element, window or document.\n\nNo elements in the current DOM matched your query:\n\n  > cy.get([data-testid=\"dropdown-footer\"]).contains(Add template)\n    at isElement (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:148556:62)\n    at validateType (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:148414:14)\n    at Object.isType (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:148445:7)\n    at Array.<anonymous> (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:135693:22)\n    at $Cy.getSubjectFromChain (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:142173:34)\n    at Object.subjectFn (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:114214:51)\n    at retryActionability (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:114916:27)\n    at tryCatcher (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:147344:68)\n    at <unknown> (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:147285:14)\n    at tryCatcher (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:5420:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/e2e/one/myAccount/addUser.js:59:71)",
                "diff": null
              },
              "uuid": "decaa085-ab6e-44d3-89f2-3cb7ffce9dc8",
              "parentUUID": "76523efb-b604-48a0-9a8a-0d8f66d27691",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6f6b94da-9bec-49c8-80ed-57688f9ad6dc",
            "308892ee-dd7e-4b1a-97f2-1ac5341004c4",
            "0712f482-2b6a-429d-ae1c-a88c39b76c3e",
            "decaa085-ab6e-44d3-89f2-3cb7ffce9dc8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 36832,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d099e7d5-b155-4c9e-91d0-fe42699096c7",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
      "file": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b663f4ff-0060-4051-957a-ab8205b2ceff",
          "title": "Manage User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
          "file": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check system default required field should be already required and should not be changeable  ",
              "fullTitle": "Manage User functionality test Check system default required field should be already required and should not be changeable  ",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.get('[placeholder=\"search....\"]').type(uniqueTemplateName);\ncy.get('table> tbody').children(\"tr\").contains(uniqueTemplateName).next().click();\ncy.get(\"#edit\").click();\ncy.wait(1000);\ncy.get('input[placeholder=\"Enter template name\"]').clear().type(uniqueTemplateNameupdated);\ncy.get('[role=\"list\"] [type=\"button\"]').click();\ncy.wait('@getPipelines', {\n  timeout: 10000\n}).then(interception => {\n  const responseBody = interception.response.body;\n  const leadName = responseBody.result.values[0].label;\n  cy.get(`${lead.chooseOptions} > :nth-child(2)`).click();\n  cy.contains(leadName).click();\n  cy.get('[data-testid=\"recordaccesstable-tablebody-circtrpwp\"] > [data-testid=\"ownershiprow-tablerow-6gy8mx6fe\"] > :nth-child(4) > [data-testid=\"ownershiprow-checkbox-y6wgiibo8\"] > .PrivateSwitchBase-input');\n  cy.get('[data-testid=\"ownershiprow-tablecell-jgp2w36xa\"] button').eq(1).click();\n  cy.wait(\"@tempFieldsList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const fieldLabel = response.body.result.values.map(ele => ele.label);\n    const fieldId = response.body.result.values.map(ele => ele.id);\n    cy.log(fieldLabel[0]);\n    cy.get('input[placeholder=\"Search...\"]').type(fieldLabel[0]);\n    cy.get(`[data-rbd-draggable-id=\"${fieldId[0]}\"] > .MuiGrid-root > :nth-child(2) > :nth-child(1) button`).click();\n    cy.contains('Required').should('have.class', 'Mui-disabled');\n    cy.get('[data-testid=\"bupopper-dialogactions-0zh9xps0l\"]').find('[data-testid=\"Cancel\"]').click();\n    cy.get('#send').click();\n    cy.get(lead.typeBtn).contains(\"Save\").click();\n  });\n  // })\n});",
              "err": {},
              "uuid": "fa2a6eee-369f-4e9b-9e9f-acdd125fee24",
              "parentUUID": "b663f4ff-0060-4051-957a-ab8205b2ceff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "b82446ec-3be4-4843-9dfc-53db0cfcca93",
              "title": "Add Template",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify the selected software and available softwares on the Create Template page",
                  "fullTitle": "Manage User functionality test Add Template Verify the selected software and available softwares on the Create Template page",
                  "timedOut": null,
                  "duration": 7163,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncyGet(globalSel.createtestid).contains(\"Create\").click();\ncy.wait(\"@modulePermission\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const [firstModule, ...availableModules] = response.body.result.add;\n  cyGet(`[data-testid=\"permissionsoftwarelist-typography-ftrzexyr7\"]`).should(\"contain.text\", \"Selected software\");\n  cyGet(`[data-testid=\"permissionsoftwarelist-menulist-aafxej4yj\"]`).first().find('[data-testid=\"permissionsoftwarelist-typography-zackmqq0q\"]').should('contain.text', formatModuleName(firstModule)); // e.g. Lead Management\n  availableModules.forEach(module => {\n    cyGet('[data-testid=\"permissionsoftwarelist-menulist-2qkcm4j30\"]').find(`[data-testid=\"permissionsoftwarelist-typography-86cpoqkhp\"]`).should('contain.text', formatModuleName(module));\n  });\n});",
                  "err": {},
                  "uuid": "6b81fc07-f324-42ad-b0cd-12aa9b42935a",
                  "parentUUID": "b82446ec-3be4-4843-9dfc-53db0cfcca93",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Add user template",
                  "fullTitle": "Manage User functionality test Add Template Add user template",
                  "timedOut": null,
                  "duration": 7296,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncyGet(globalSel.createtestid).contains(\"Create\").click();\n// Fill template name\nbutextField(`[data-testid=\"index-textfield-fm1l89cxe\"]`, `label`).contains(\"Template name\");\nbutextField(`[data-testid=\"index-textfield-fm1l89cxe\"]`, `input[placeholder=\"Enter template name\"]`).type(uniqueTemplateName);\n// Open dropdown and select pipeline\nbudropdown(`[data-testid=\"managepermission-stack-m3in09ace\"] > :first`, `[data-testid=\"button-typography-8x5inumxs\"]`, `Select Pipeline`);\ncy.wait(\"@getPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pipelines = response.body.result.values.map(ele => ele.label);\n  const firstPipeline = pipelines[0];\n  // Search if more than 5 pipelines\n  if (pipelines.length > 5) {\n    buSearchbox(globalSel.search, firstPipeline);\n  }\n  budropdownOption(firstPipeline).first().click();\n  // Verify ownership permissions UI\n  cyGet('[data-testid=\"ownershiprow-iconbutton-ph6ah241c\"]').click();\n  cy.contains('thead', 'Permission');\n  cy.contains('thead', 'Owner only');\n  cy.contains('thead', 'Everything');\n  cy.contains('thead', 'Select fields');\n  cy.contains('tr', firstPipeline);\n  // View permission should be checked and disabled\n  cy.contains('tr', 'View').find('input[type=\"checkbox\"]').eq(0).should('be.checked').and('be.disabled');\n  // Save\n  buSaveButton().click();\n});",
                  "err": {},
                  "uuid": "fcc4b1cb-3d6b-428c-9361-a142c0fc677a",
                  "parentUUID": "b82446ec-3be4-4843-9dfc-53db0cfcca93",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6b81fc07-f324-42ad-b0cd-12aa9b42935a",
                "fcc4b1cb-3d6b-428c-9361-a142c0fc677a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14459,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e27f824c-7c2b-40d8-aad4-5653ec11470e",
              "title": "Assign and Edit Template",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Assign Template to user",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Assign Template to user",
                  "timedOut": null,
                  "duration": 15653,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageUsers`);\ncy.wait(\"@userGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _user, _user2;\n  user = response.body.result.values.find(ele => ele.role === \"std\");\n  if (!user) {\n    this.skip();\n  }\n  cy.intercept('GET', `**/crew/users//${user.id}`).as('getUserById');\n  cyGet(`[data-testid=\"activitybar-textfield-8eiuz4v4a\"] input`).type((_user = user) === null || _user === void 0 ? void 0 : _user.label);\n  onesecondWait();\n  cy.contains('tr', (_user2 = user) === null || _user2 === void 0 ? void 0 : _user2.label).find(`[data-testid=\"Action\"]`).click();\n  cyGet(\"#edit\").click({\n    force: true\n  });\n  twosecondWait();\n  cy.wait(\"@getUserById\").then(({\n    response\n  }) => {\n    const assignedTemplate = response.body.result.profile.template.label;\n    cyGet(`[data-testid=\"chipinput-iconbutton-ycchky4nm\"]`).click();\n    cy.wait(\"@getTempalte\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalTemplates = response.body.result.pages.totalRecords;\n      const templates = response.body.result.values.map(ele => ele.label);\n      if (assignedTemplate === \"No template\") {\n        userTemplate = templates[0];\n        if (totalTemplates > 5) {\n          buSearchbox(globalSel.search, userTemplate);\n        }\n        budropdownOption(userTemplate, `[data-testid=\"buchip-chip-5r51zm55o\"]`).click();\n      } else {\n        userTemplate = templates.find(ele => ele !== assignedTemplate);\n        if (totalTemplates > 5) {\n          buSearchbox(globalSel.search, userTemplate);\n        }\n        budropdownOption(userTemplate, `[data-testid=\"buchip-chip-5r51zm55o\"]`).click();\n      }\n      twosecondWait();\n      buSaveButton().click();\n      cyGet('.MuiSnackbarContent-message').should(\"contain.text\", \"User Permissions Updated\");\n      logout();\n      // cy.clearCookies();\n    });\n  });\n});",
                  "err": {},
                  "uuid": "3e24f2fc-e074-406a-8965-42c9ea91042c",
                  "parentUUID": "e27f824c-7c2b-40d8-aad4-5653ec11470e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to create a record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to create a record.",
                  "timedOut": null,
                  "duration": 17456,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user3;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const create = recordPermission.create;\n  setPermissionOnRoleSwitch(create, false, \"Create\", 0);\n  // Login with standard user\n  cy.login((_user3 = user) === null || _user3 === void 0 ? void 0 : _user3.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Create Lead\"]`).should(\"not.be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "d34215ed-2038-4011-ad37-95c4d3148605",
                  "parentUUID": "e27f824c-7c2b-40d8-aad4-5653ec11470e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to import the record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to import the record.",
                  "timedOut": null,
                  "duration": 16042,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user4;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const imp = recordPermission.import;\n  setPermissionOnRoleSwitch(imp, false, \"Import\", 0);\n  // Login with standard user\n  cy.login((_user4 = user) === null || _user4 === void 0 ? void 0 : _user4.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Import\"]`).should(\"not.be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "e0399583-141f-4a39-a0af-0752fe6b0a74",
                  "parentUUID": "e27f824c-7c2b-40d8-aad4-5653ec11470e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to activity of record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to activity of record.",
                  "timedOut": null,
                  "duration": 17256,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user5;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const activity = recordPermission.activity;\n  setPermissionOnRoleSwitch(activity, false, \"Activity\", 0);\n  // Login with standard user\n  cy.login((_user5 = user) === null || _user5 === void 0 ? void 0 : _user5.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"buelementgroup-box-n1f8dc7ag\"] [aria-label=\"Split view\"]`).click();\n  cyGet(`[data-testid=\"communicationbar-box-951cbwqi4\"]`).find(`[aria-label=\"Activities\"]`);\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "937d469d-df35-44aa-8566-64324500005d",
                  "parentUUID": "e27f824c-7c2b-40d8-aad4-5653ec11470e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to Whatsapp.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to Whatsapp.",
                  "timedOut": null,
                  "duration": 16507,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user6;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const wa = recordPermission.wa;\n  setPermissionOnRoleSwitch(wa, false, \"Whatsapp\", 0);\n  // Login with standard user\n  cy.login((_user6 = user) === null || _user6 === void 0 ? void 0 : _user6.email);\n  // twosecondWait()\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"buelementgroup-box-n1f8dc7ag\"] [aria-label=\"Split view\"]`).click();\n  cyGet('[data-testid=\"communicationbar-box-951cbwqi4\"]').find(`[aria-label=\"Whatsapp\"]`);\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "073f36f0-4be9-4ac8-950c-de0a81bfea61",
                  "parentUUID": "e27f824c-7c2b-40d8-aad4-5653ec11470e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has not permission to create a record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has not permission to create a record.",
                  "timedOut": null,
                  "duration": 15566,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user7;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const create = recordPermission.create;\n  setPermissionOnRoleSwitch(create, true, \"Create\", 0);\n  // Login with standard user\n  cy.login((_user7 = user) === null || _user7 === void 0 ? void 0 : _user7.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Create Lead\"]`).should(\"be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "5fa7e18d-6fa9-4955-9dc2-63f580301ca3",
                  "parentUUID": "e27f824c-7c2b-40d8-aad4-5653ec11470e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has not permission to import the record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has not permission to import the record.",
                  "timedOut": null,
                  "duration": 14785,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user8;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const imp = recordPermission.import;\n  setPermissionOnRoleSwitch(imp, true, \"Import\", 0);\n  // Login with standard user\n  cy.login((_user8 = user) === null || _user8 === void 0 ? void 0 : _user8.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Import\"]`).should(\"be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "4715976e-c411-4157-89f4-dfb1bf92e947",
                  "parentUUID": "e27f824c-7c2b-40d8-aad4-5653ec11470e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3e24f2fc-e074-406a-8965-42c9ea91042c",
                "d34215ed-2038-4011-ad37-95c4d3148605",
                "e0399583-141f-4a39-a0af-0752fe6b0a74",
                "937d469d-df35-44aa-8566-64324500005d",
                "073f36f0-4be9-4ac8-950c-de0a81bfea61",
                "5fa7e18d-6fa9-4955-9dc2-63f580301ca3",
                "4715976e-c411-4157-89f4-dfb1bf92e947"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 113265,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4e4367bc-7047-428e-97f8-fe5f449fe608",
              "title": "Delete TemPlate functionality",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete Template",
                  "fullTitle": "Manage User functionality test Delete TemPlate functionality Delete Template",
                  "timedOut": null,
                  "duration": 5917,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let msg1 = \"Delete template\";\nlet msg2 = \"Are you sure you want to delete this Template ?\";\ncy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncy.wait(\"@templateGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const unAssignedTemplate = response.body.result.values.filter(ele => ele.assignedTo.length === 0);\n  if (unAssignedTemplate.length > 0) {\n    cyGet(`[data-testid=\"templatelist-textfield-e9dj43sha\"] input`).type(unAssignedTemplate[0].label);\n    cy.contains('tr', unAssignedTemplate[0].label).find(`[data-testid=\"Action\"]`).click();\n    cyGet(\"#delete\").click();\n    buCaption(`[role=\"dialog\"]`, `#customized-dialog-title p`, msg1, `[role=\"dialog\"] [data-testid=\"deletetemplate-typography-5sxlboqg8\"]`, msg2);\n    cyGet(`[data-testid=\"Delete\"]`).click();\n  } else {\n    cy.log(`Teplate not available for delete`);\n  }\n});",
                  "err": {},
                  "uuid": "e67c9987-38d0-4654-8f23-2672e11267ea",
                  "parentUUID": "4e4367bc-7047-428e-97f8-fe5f449fe608",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Assigned Tempale should not be delete",
                  "fullTitle": "Manage User functionality test Delete TemPlate functionality Assigned Tempale should not be delete",
                  "timedOut": null,
                  "duration": 5750,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncy.wait(\"@templateGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const assignedTemplate = response.body.result.values.filter(ele => ele.assignedTo.length > 0);\n  if (assignedTemplate.length > 0) {\n    cyGet(`[data-testid=\"templatelist-textfield-e9dj43sha\"] input`).type(assignedTemplate[0].label);\n    cy.contains('tr', assignedTemplate[0].label).find(`[data-testid=\"Action\"]`).click();\n    cy.get(\"#delete\").should(\"have.attr\", \"aria-disabled\", \"true\");\n  } else {\n    cy.log(`Teplate not available for delete`);\n  }\n});",
                  "err": {},
                  "uuid": "7664819e-0f34-43c7-9610-8ae9c52e08eb",
                  "parentUUID": "4e4367bc-7047-428e-97f8-fe5f449fe608",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e67c9987-38d0-4654-8f23-2672e11267ea",
                "7664819e-0f34-43c7-9610-8ae9c52e08eb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11667,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [
            "fa2a6eee-369f-4e9b-9e9f-acdd125fee24"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6279c384-d9b7-454a-b0c2-bcfcaf6f4c04",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\manageUser.js",
      "file": "cypress\\e2e\\one\\myAccount\\manageUser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "494bbd6d-bc09-4fb5-903f-9bd7319d9f90",
          "title": "search User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\manageUser.js",
          "file": "cypress\\e2e\\one\\myAccount\\manageUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Search user by search user functionality on second page",
              "fullTitle": "search User functionality test Search user by search user functionality on second page",
              "timedOut": null,
              "duration": 6686,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@userList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const userName = response.body.result.values.filter(ele => ele.status > 0);\n  const user = userName.slice(-1)[0];\n  cy.get('[placeholder=\"search....\"]').type(user.label);\n  cy.wait(\"@userList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    expect(response.body.result.values[0]).has.property(\"label\", user.label);\n  });\n});",
              "err": {},
              "uuid": "cf92bd3a-a18f-4069-9841-5344aaf239ac",
              "parentUUID": "494bbd6d-bc09-4fb5-903f-9bd7319d9f90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf92bd3a-a18f-4069-9841-5344aaf239ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6686,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ab2bfabb-0530-40d3-8243-0951967c5b1e",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\profile.js",
      "file": "cypress\\e2e\\one\\myAccount\\profile.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ba6d3194-0061-48cf-8cb2-b48a8a796b81",
          "title": "Verify My Profile Page",
          "fullFile": "cypress\\e2e\\one\\myAccount\\profile.js",
          "file": "cypress\\e2e\\one\\myAccount\\profile.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update user name and verify with profile",
              "fullTitle": "Verify My Profile Page Update user name and verify with profile",
              "timedOut": null,
              "duration": 7905,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const UpdatedUsername = faker.person.fullName();\ncyGet(\"#name-label\").should(\"have.text\", \"Name *\");\ncyGet('input#name').should(\"have.attr\", \"required\");\ncyGet('input#name').clear().type(UpdatedUsername);\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\ncy.reload();\ncy.wait(500);\ncy.contains(`${UpdatedUsername}'s Profile`).should('be.visible');",
              "err": {},
              "uuid": "a0608508-7357-4e1b-ba82-c73b7f5e6a18",
              "parentUUID": "ba6d3194-0061-48cf-8cb2-b48a8a796b81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User name should be required",
              "fullTitle": "Verify My Profile Page User name should be required",
              "timedOut": null,
              "duration": 1350,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('input[placeholder=\"Name\"]').clear();\ncy.get('#name-helper-text').should('have.text', \"Field is required!\");",
              "err": {},
              "uuid": "5609bd73-9755-43d7-bd65-8f3757f9cbee",
              "parentUUID": "ba6d3194-0061-48cf-8cb2-b48a8a796b81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify email Address",
              "fullTitle": "Verify My Profile Page Verify email Address",
              "timedOut": null,
              "duration": 1335,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.componentLabel('#email-label', \"Email address\", \"input\").should(\"have.value\", Cypress.env(\"email\"));",
              "err": {},
              "uuid": "442a7430-7cf1-46f6-8173-34be81c2b19b",
              "parentUUID": "ba6d3194-0061-48cf-8cb2-b48a8a796b81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Mobile number",
              "fullTitle": "Verify My Profile Page Update Mobile number",
              "timedOut": null,
              "duration": 2676,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#mobile-label').should(\"have.text\", \"Mobile number *\");\n// cy.get('#mobile').should(\"have.attr\", \"required\");\ncy.get('#mobile').clear().type(faker.string.numeric(10));\ncy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");",
              "err": {},
              "uuid": "af264905-6625-457e-be9b-e9005d30e039",
              "parentUUID": "ba6d3194-0061-48cf-8cb2-b48a8a796b81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Mobile number should be in mobile number format",
              "fullTitle": "Verify My Profile Page Mobile number should be in mobile number format",
              "timedOut": null,
              "duration": 2318,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#mobile').clear();\ncy.get('#mobile').type('wesfd');\ncy.get('#mobile-helper-text').should('have.text', \"Mobile number is not valid\");\ncy.get('.MuiSnackbarContent-message').should('have.text', \"Invalid mobile\");",
              "err": {},
              "uuid": "d00e886a-beb1-4af4-9bca-231e9a71fb4e",
              "parentUUID": "ba6d3194-0061-48cf-8cb2-b48a8a796b81",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that total listed user is equal to Total users",
              "fullTitle": "Verify My Profile Page Verify that total listed user is equal to Total users",
              "timedOut": null,
              "duration": 1048,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@usersList\").then(({\n  response\n}) => {\n  let totalCount = response.body.result.pages.totalRecords;\n  cy.get('[role=\"tabpanel\"] > :nth-child(1) > :nth-child(2) > :nth-child(1) > :nth-child(1) > :nth-child(2) ').contains(totalCount);\n});",
              "err": {},
              "uuid": "63516075-f79f-4250-b9d5-94e4e93333a2",
              "parentUUID": "ba6d3194-0061-48cf-8cb2-b48a8a796b81",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0608508-7357-4e1b-ba82-c73b7f5e6a18",
            "5609bd73-9755-43d7-bd65-8f3757f9cbee",
            "442a7430-7cf1-46f6-8173-34be81c2b19b",
            "af264905-6625-457e-be9b-e9005d30e039",
            "d00e886a-beb1-4af4-9bca-231e9a71fb4e",
            "63516075-f79f-4250-b9d5-94e4e93333a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16632,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "39f3ad76-01b7-4526-958d-ebb67564275a",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c5c7ccc7-26cf-40af-abb8-3dc3ed842430",
          "title": "Nevigate the setting page and create pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Pipeline name can't be blank",
              "fullTitle": "Nevigate the setting page and create pipeline Pipeline name can't be blank",
              "timedOut": null,
              "duration": 7354,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\nbutextField(pipelineSel.piptextfield, \"input\").click();\ncy.get('.MuiFormHelperText-root').should(\"contain\", `${messages.blankPip}.`);\nbuButton(globalSel.savetestid).should(\"be.disabled\").click({\n  force: true\n});\ncy.get('.MuiTooltip-tooltip').should(\"contain\", `${messages.blankPip}.`);",
              "err": {},
              "uuid": "84debd3e-f30e-4657-af85-c5e50b4e1d20",
              "parentUUID": "c5c7ccc7-26cf-40af-abb8-3dc3ed842430",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline already exist ",
              "fullTitle": "Nevigate the setting page and create pipeline Pipeline already exist ",
              "timedOut": null,
              "duration": 4717,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let piplabel = response.body.result.values[0].label;\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\n  butextField(pipelineSel.piptextfield, \"input\").type(piplabel);\n});\ncy.get('.MuiFormHelperText-root').should(\"have.text\", messages.existsPip);\nbuButton(globalSel.savetestid).should(\"be.disabled\").click({\n  force: true\n});\ncy.get('.MuiTooltip-tooltip').should(\"contain\", messages.existsPip);",
              "err": {},
              "uuid": "964cbdbf-f5de-45ac-888c-442192d81f3a",
              "parentUUID": "c5c7ccc7-26cf-40af-abb8-3dc3ed842430",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add new pipeline",
              "fullTitle": "Nevigate the setting page and create pipeline Add new pipeline",
              "timedOut": null,
              "duration": 4152,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\nbutextField(pipelineSel.piptextfield, \"input\").type(`${faker.commerce.product()}-${new Date().valueOf()}`);\nbuButton(globalSel.savetestid).should(\"not.be.disabled\").click();",
              "err": {},
              "uuid": "c4b54704-994d-43ae-92d4-9470286e3341",
              "parentUUID": "c5c7ccc7-26cf-40af-abb8-3dc3ed842430",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should pipeline selectable",
              "fullTitle": "Nevigate the setting page and create pipeline Should pipeline selectable",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let pipelines = response.body.result.values;\n  let lastPip = pipelines[pipelines.length - 1].label;\n  // cy.log(`Total Pipelines: ${pipelines.length}`);\n  // cy.log(`Last Item: ${lastPip}`);\n  if (pipelines.length > 5) {\n    cy.get('[data-testid=\"pipeline-box-hlum28yao\"] > [data-testid=\"budropdown-box-ty1opau5a\"] > [data-testid=\"button-box-72cmtvy8r\"] > .MuiButtonBase-root > .MuiButton-icon > [data-testid=\"button-stack-alorzfaoj\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"]').click();\n    cy.get('[data-testid=\"searchbox-textfield-8k19ikenc\"]').type(lastPip);\n  } else {\n    cy.get('[data-testid=\"pipeline-box-hlum28yao\"] > [data-testid=\"budropdown-box-ty1opau5a\"] > [data-testid=\"button-box-72cmtvy8r\"] > .MuiButtonBase-root > .MuiButton-icon > [data-testid=\"button-stack-alorzfaoj\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"]').click();\n    cy.contains(lastPip).click();\n  }\n});",
              "err": {},
              "uuid": "a69b7141-5e27-4fa7-82e3-ad7cc4d5c09c",
              "parentUUID": "c5c7ccc7-26cf-40af-abb8-3dc3ed842430",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84debd3e-f30e-4657-af85-c5e50b4e1d20",
            "964cbdbf-f5de-45ac-888c-442192d81f3a",
            "c4b54704-994d-43ae-92d4-9470286e3341"
          ],
          "failures": [],
          "pending": [
            "a69b7141-5e27-4fa7-82e3-ad7cc4d5c09c"
          ],
          "skipped": [],
          "duration": 16223,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c51fe8ff-bda9-4817-8423-c1477515dfe7",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "16d4cc74-5133-4e8c-b008-c078cb6a1ea1",
          "title": "Nevigate the setting page and rename pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Rename pipeline",
              "fullTitle": "Nevigate the setting page and rename pipeline Rename pipeline",
              "timedOut": null,
              "duration": 7726,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let editedPIpLabel = `${faker.commerce.product()}-${new Date().valueOf()}`;\ncy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  cy.get(\"#customized-dialog-title p\").should(\"have.text\", messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"label\").should(\"have.text\", messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").should(\"have.value\", pipLabel[0]);\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.existsPip1);\n  buButton(globalSel.renametestid).should(\"be.disabled\");\n  // Rename the pipeline name\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear().type(editedPIpLabel);\n  buButton(globalSel.renametestid).click();\n  cy.get('.MuiSnackbarContent-message').should(\"have.text\", messages.updated);\n});",
              "err": {},
              "uuid": "be9cf721-b982-4904-89a6-0937553d82b5",
              "parentUUID": "16d4cc74-5133-4e8c-b008-c078cb6a1ea1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline already exist",
              "fullTitle": "Nevigate the setting page and rename pipeline Pipeline already exist",
              "timedOut": null,
              "duration": 3557,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear().type(pipLabel[1]);\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.existsPip1);\n  buButton(globalSel.renametestid).should(\"be.disabled\").and(\"have.text\", \"Rename\");\n});",
              "err": {},
              "uuid": "15df2710-eaed-4c7b-823a-527aff4dfbfe",
              "parentUUID": "16d4cc74-5133-4e8c-b008-c078cb6a1ea1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline name cant't be blank",
              "fullTitle": "Nevigate the setting page and rename pipeline Pipeline name cant't be blank",
              "timedOut": null,
              "duration": 2905,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear();\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.blankPip);\n  buButton(globalSel.renametestid).should(\"be.disabled\").and(\"have.text\", \"Rename\");\n});",
              "err": {},
              "uuid": "d3044872-f1d8-4ac8-95ac-dd2957790750",
              "parentUUID": "16d4cc74-5133-4e8c-b008-c078cb6a1ea1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be9cf721-b982-4904-89a6-0937553d82b5",
            "15df2710-eaed-4c7b-823a-527aff4dfbfe",
            "d3044872-f1d8-4ac8-95ac-dd2957790750"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14188,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "37faebdd-5911-496d-88b8-7662a17e6e6c",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "181845e8-1cbf-400c-9d7f-17eb448e8ad3",
          "title": "Navigate the setting page and reorder pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reorder pipeline",
              "fullTitle": "Navigate the setting page and reorder pipeline Reorder pipeline",
              "timedOut": null,
              "duration": 8898,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const movements = 1;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\n// cy.get(\"#app-routes p\").contains(\"leads\")\n// cy.get('.MuiTypography-caption').contains(\"You can Create/ Rename/ Delete Pipeline for lead only.\")\ncy.wait(1000);\nbusimpledropdown(pipelineSel.options, messages.pipAction, globalSel.reorder, messages.reorderPip);\n// cy.get('.MuiPaper-root > :nth-child(2) > div > .MuiButtonBase-root').should(\"have.text\", \"Options\").click()\n// cy.get(\"#reorder\").click()\n// get the pipeline-id using intercept and wait method\ncy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let pipId = response.body.result.values.map(ele => ele.id);\n  cy.get(`[data-rbd-draggable-id=${pipId[0]}]`).as('item');\n  cy.get('@item').invoke('attr', 'data-rbd-drag-handle-draggable-id').as('item-id');\n  cy.get('@item').invoke('attr', 'tabindex').as('item-index').should('equal', '0');\n  // lift the element\n  cy.get('@item').focus().trigger('keydown', {\n    keyCode: 32\n  }).get('@item'); // need to re-query for a clone\n  cy.wrap(Array.from({\n    length: movements\n  })).each(() => {\n    cy.get('@item').trigger('keydown', {\n      keyCode: 40,\n      force: true\n    }).wait(1000);\n  });\n  // drop an element\n  cy.get('@item').trigger('keydown', {\n    keyCode: 32,\n    force: true\n  });\n  cy.get('@item-id').then(() => {\n    cy.get(`[data-rbd-draggable-id=${pipId[0]}]`).invoke('attr', 'tabindex');\n  });\n  // cy.get('#cancel').should(\"have.text\", \"Cancel\")\n  // cy.get(\"#save\").click()\n  buButton(globalSel.canceltestid).should(\"have.text\", \"Cancel\");\n  buButton(globalSel.savetestid).should(\"have.text\", \"Save\").click({\n    force: true\n  });\n});",
              "err": {},
              "uuid": "3b121124-1e2c-4bcd-84e6-8ac148cadb3e",
              "parentUUID": "181845e8-1cbf-400c-9d7f-17eb448e8ad3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b121124-1e2c-4bcd-84e6-8ac148cadb3e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8898,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c09520e2-c6cf-4bf8-a7eb-2bad2560e918",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "228f7560-d9c7-45da-9cb8-75b214c4f985",
          "title": "Stage functionality test for pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add new stage",
              "fullTitle": "Stage functionality test for pipeline Add new stage",
              "timedOut": null,
              "duration": 10270,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\nonesecondWait();\nbuButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\ncyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).type(stageName);\nonesecondWait();\nbuSaveButton().should(\"have.text\", \"Save\").click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);",
              "err": {},
              "uuid": "02e8be55-4b7f-4e14-b155-e3cfddbd2d4a",
              "parentUUID": "228f7560-d9c7-45da-9cb8-75b214c4f985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage can't be empty.",
              "fullTitle": "Stage functionality test for pipeline Stage can't be empty.",
              "timedOut": null,
              "duration": 2496,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\nbuSaveButton().should(\"be.disabled\").trigger(\"mouseover\", {\n  force: true\n});\ncyGet(globalSel.tooltip).invoke('text').should('include', \"Stage can't be empty.\");",
              "err": {},
              "uuid": "7392d772-90c0-4c11-961f-4635008a76af",
              "parentUUID": "228f7560-d9c7-45da-9cb8-75b214c4f985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage can't be duplicate.",
              "fullTitle": "Stage functionality test for pipeline Stage can't be duplicate.",
              "timedOut": null,
              "duration": 3816,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\ncy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stageName = response.body.result.values.map(ele => ele.label);\n  cyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).click().type(stageName[0]);\n});\nbuSaveButton().should(\"be.disabled\").trigger(\"mouseover\", {\n  force: true\n});\ncyGet(globalSel.tooltip).invoke('text').should('include', \"Duplicate stage name.\");",
              "err": {},
              "uuid": "56714189-c5dd-4f26-b050-7efae3de7d6e",
              "parentUUID": "228f7560-d9c7-45da-9cb8-75b214c4f985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "edit stage",
              "fullTitle": "Stage functionality test for pipeline edit stage",
              "timedOut": null,
              "duration": 4331,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\ncyGet(`${globalSel.inputItemtextfield} input`).last().clear();\ncyGet(`${globalSel.inputItemtextfield} input`).last().type(stageName);\nbuSaveButton().should(\"have.text\", \"Save\").click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);",
              "err": {},
              "uuid": "0409a075-7cad-4eb2-8a80-a75e80c8feac",
              "parentUUID": "228f7560-d9c7-45da-9cb8-75b214c4f985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete stage",
              "fullTitle": "Stage functionality test for pipeline delete stage",
              "timedOut": null,
              "duration": 6165,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\nconst msg2 = \"Are you sure! Want to delete this Stage?\";\nbuButton(`[data-testid=\"Add a ${asset} Stage\"]`).click();\ncyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).click().type(stageName);\nbuSaveButton().should(\"have.text\", \"Save\").click();\nonesecondWait();\ncyGet(`${pipelineSel.stageDelIconBtn}`).last().click();\nbuCaption(globalSel.dialogTitle, globalSel.dialogTitleText, \"Delete Stage\", pipelineSel.deletestagecaption, msg2);\nbuButton(`[data-testid=\"Delete Stage\"]`).click();",
              "err": {},
              "uuid": "131a9771-e167-4c89-bc71-5bce182f0b47",
              "parentUUID": "228f7560-d9c7-45da-9cb8-75b214c4f985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage should not be deleted which contains record",
              "fullTitle": "Stage functionality test for pipeline Stage should not be deleted which contains record",
              "timedOut": null,
              "duration": 3283,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stageWithCount = response.body.result.values.find(ele => ele.count > 0 && ele.winChance != \"Won\");\n  if (!stageWithCount) {\n    this.skip();\n  }\n  const msg2 = `You need to move ${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.count} ${asset} to delete this stage.`;\n  cyGet(`[data-rbd-draggable-id=\"${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.id}\"] ${pipelineSel.stageDelIconBtn}`).click({\n    force: true\n  });\n  buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, delNmvStg, pipelineSel.deletestageConfirmatiion, msg2);\n  budropdown(globalSel.dialogContent, globalSel.fieldlabelBox, fieldLabel);\n  budropdownInput(`[data-testid=\"input-muiinput-t8mkcx347\"] input`, stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label);\n  buButton(`[data-testid=\"Move ${asset} and delete Stage\"]`).should(\"be.disabled\");\n});",
              "err": {},
              "uuid": "74e88e75-e92e-49b8-88b9-1416cd9bd4ab",
              "parentUUID": "228f7560-d9c7-45da-9cb8-75b214c4f985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "move record and delete stage",
              "fullTitle": "Stage functionality test for pipeline move record and delete stage",
              "timedOut": null,
              "duration": 4889,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const values = response.body.result.values;\n  const length = values.length;\n  const stageWithCount = values.find(ele => ele.count > 0 && ele.winChance != \"Won\");\n  const msg2 = `You need to move ${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.count} ${asset} to delete this stage.`;\n  const moveRecordStage = values.find(ele => ele.label != (stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label) && ele.winChance != \"Won\");\n  const searchSelecor = `${globalSel.searchbox} ${globalSel.searchplaceholder}`;\n  if (!stageWithCount) {\n    this.skip();\n  }\n  cyGet(`[data-rbd-draggable-id=\"${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.id}\"] ${pipelineSel.stageDelIconBtn}`).click({\n    force: true\n  });\n  buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, delNmvStg, pipelineSel.deletestageConfirmatiion, msg2);\n  budropdownInput(`[data-testid=\"input-muiinput-t8mkcx347\"] input`, stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label, length, searchSelecor, moveRecordStage === null || moveRecordStage === void 0 ? void 0 : moveRecordStage.label, globalSel.dialogTitleText);\n  buButton(`[data-testid=\"Move ${asset} and delete Stage\"]`).click();\n});",
              "err": {},
              "uuid": "2fd203d7-5a0a-44d6-be45-8d76501013ee",
              "parentUUID": "228f7560-d9c7-45da-9cb8-75b214c4f985",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "02e8be55-4b7f-4e14-b155-e3cfddbd2d4a",
            "7392d772-90c0-4c11-961f-4635008a76af",
            "56714189-c5dd-4f26-b050-7efae3de7d6e",
            "0409a075-7cad-4eb2-8a80-a75e80c8feac",
            "131a9771-e167-4c89-bc71-5bce182f0b47",
            "74e88e75-e92e-49b8-88b9-1416cd9bd4ab",
            "2fd203d7-5a0a-44d6-be45-8d76501013ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35250,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f37dcfd2-678b-4df2-adf8-eb7af93161cd",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f98e3c0f-ef75-4358-b206-58dc7a43ddbb",
          "title": "Navigate the setting page and reorder stage",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reorder stage",
              "fullTitle": "Navigate the setting page and reorder stage Reorder stage",
              "timedOut": null,
              "duration": 8404,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const movements = 1;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\ncy.wait(\"@getStage\").then(({\n  response\n}) => {\n  const stageId = response.body.result.values.map(ele => ele.id);\n  expect(response.body.result.values).to.be.length.greaterThan(1);\n  if (stageId.length > 1) {\n    cyGet(`[data-rbd-draggable-id=${stageId[0]}]`).as('item');\n    cy.get('@item').invoke('attr', 'data-rbd-drag-handle-draggable-id').as('item-id');\n    cy.get('@item').invoke('attr', 'tabindex').as('item-index').should('equal', '0');\n    // lift the element\n    cy.get('@item').focus().trigger('keydown', {\n      keyCode: 32,\n      position: \"left\"\n    }).get('@item'); // need to re-query for a clone\n    cy.wrap(Array.from({\n      length: movements\n    })).each(() => {\n      cy.get('@item').trigger('keydown', {\n        keyCode: 40,\n        force: true\n      }).wait(1000);\n    });\n    // drop an element\n    cy.get('@item').trigger('keydown', {\n      keyCode: 32,\n      force: true\n    });\n    cy.get('@item-id').then(() => {\n      cyGet(`[data-rbd-draggable-id=${stageId[0]}]`).invoke('attr', 'tabindex');\n    });\n    buSaveButton().should(\"have.text\", \"Save\").click();\n    cyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);\n  } else {\n    cy.log(`Stage must be more than 1 but stage found: ${stageId.length}`);\n  }\n});",
              "err": {},
              "uuid": "a4ce68ad-ebda-4c7e-9de3-ad52da65fa5f",
              "parentUUID": "f98e3c0f-ef75-4358-b206-58dc7a43ddbb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a4ce68ad-ebda-4c7e-9de3-ad52da65fa5f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8404,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "038d4905-4041-4ca6-978d-06610ddb3149",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4f54e6fe-1084-4e8b-8978-7211f01d003e",
          "title": "Nevigate the setting page and delete pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete pipeline",
              "fullTitle": "Nevigate the setting page and delete pipeline Delete pipeline",
              "timedOut": null,
              "duration": 10878,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.pipelineData(module, asset).then(pipData => {\n  const piplabel = pipData.map(ele => ele.label);\n  let msg1 = \"Delete Pipeline Confirmation\";\n  if (pipData.length == 1) {\n    busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    buButton(globalSel.deltestid).click();\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Last pipeline can't be deleted\");\n  } else {\n    const piplength = pipData.length;\n    const countZeroPip = pipData.find(ele => ele.count === 0);\n    if (!countZeroPip) {\n      cy.log(\"Pipeline not found for delete\");\n    }\n    let msg2 = `You are about to delete the project titled ${countZeroPip === null || countZeroPip === void 0 ? void 0 : countZeroPip.label}.`;\n    budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, piplabel[0], piplength, globalSel.search, countZeroPip === null || countZeroPip === void 0 ? void 0 : countZeroPip.label, globalSel.dialogTitleText);\n    busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    buButton(globalSel.deltestid).click();\n  }\n  ;\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Sports-1740052338477' within the element: <span.MuiTypography-root.MuiTypography-body1.MuiTypography-noWrap.css-wv3nvc> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Sports-1740052338477' within the element: <span.MuiTypography-root.MuiTypography-body1.MuiTypography-noWrap.css-wv3nvc> but never did.\n    at Context.eval (webpack://bu-testing/./cypress/helpers/global.js:42:13)\n    at withinFn (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:136019:8)\n    at <unknown> (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:136100:16)\n    at __WEBPACK_DEFAULT_EXPORT__ (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:133958:10)\n    at Context.within (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:136086:67)\n    at wrapped (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)",
                "diff": null
              },
              "uuid": "fd22c4cd-d8fc-42ce-874a-fff1e22a64e1",
              "parentUUID": "4f54e6fe-1084-4e8b-8978-7211f01d003e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline should not delete which contains record",
              "fullTitle": "Nevigate the setting page and delete pipeline Pipeline should not delete which contains record",
              "timedOut": null,
              "duration": 7390,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.pipelineData(module, asset).then(pipData => {\n  const pipcontainRecord = pipData.find(ele => ele.count > 0);\n  if (pipData.length === 1) {\n    busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    buButton(globalSel.deltestid).click();\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Last pipeline can't be deleted\");\n  } else {\n    budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipcontainRecord === null || pipcontainRecord === void 0 ? void 0 : pipcontainRecord.label, pipData.length, globalSel.search, pipcontainRecord === null || pipcontainRecord === void 0 ? void 0 : pipcontainRecord.label, globalSel.dialogTitleText);\n    busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n    buButton(globalSel.del).should(\"have.attr\", \"aria-disabled\", \"true\").trigger(\"mouseover\", {\n      force: true\n    });\n    cy.get('.MuiTooltip-tooltip').should(\"have.text\", \"Pipeline contains lead\");\n  }\n  ;\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Sports-1740052338477' within the element: <span.MuiTypography-root.MuiTypography-body1.MuiTypography-noWrap.css-wv3nvc> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Sports-1740052338477' within the element: <span.MuiTypography-root.MuiTypography-body1.MuiTypography-noWrap.css-wv3nvc> but never did.\n    at Context.eval (webpack://bu-testing/./cypress/helpers/global.js:42:13)\n    at withinFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:136019:8)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:136100:16)\n    at __WEBPACK_DEFAULT_EXPORT__ (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:133958:10)\n    at Context.within (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:136086:67)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)",
                "diff": null
              },
              "uuid": "cd7bfdef-f394-4296-85c4-68046466be00",
              "parentUUID": "4f54e6fe-1084-4e8b-8978-7211f01d003e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fd22c4cd-d8fc-42ce-874a-fff1e22a64e1",
            "cd7bfdef-f394-4296-85c4-68046466be00"
          ],
          "pending": [],
          "skipped": [],
          "duration": 18268,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0cab42cf-93e9-4b63-b983-a5d9e4421010",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "798fc4bd-dba0-4d85-8474-88d839540f0b",
          "title": "Nevigate the setting page and create and update association fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create association field",
              "fullTitle": "Nevigate the setting page and create and update association fields Create association field",
              "timedOut": null,
              "duration": 16701,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(_fieldSel.default.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Association\", _globalSel.default.dialogTitleText);\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Group\");\ncyGet(`${_globalSel.default.muiInput} input[name=\"Select Group\"]`).should('be.disabled').and('have.value', \"System Fields\");\ncy.wait(\"@assetsPipeline\");\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  const apiLength = response.body.result.values.length;\n  const assetsPip = response.body.result.values.find(ele => ele.disable != true);\n  cyGet(`${_globalSel.default.withtitleinputlabel}`).contains(\"Select Asset\");\n  budropdown(_globalSel.default.dialogContent, `button ${_globalSel.default.buttonTypography}`, assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label, apiLength, _globalSel.default.search, assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label, _globalSel.default.dialogTitleText);\n  ascInput(`${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n  (0, _field.headingNsubheading)();\n  buradio(\"Single-selection\");\n  cyGet(`[data-testid=\"avatarinput-textfield-ojwxr8kdk\"] label`).contains(`${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n  cyGet(`[data-testid=\"avatarinput-textfield-ojwxr8kdk\"] input`).should(\"have.attr\", \"placeholder\", `Select ${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "c204b246-a4c5-489b-b545-d14372d0e859",
              "parentUUID": "798fc4bd-dba0-4d85-8474-88d839540f0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify dissabled aaset",
              "fullTitle": "Nevigate the setting page and create and update association fields Verify dissabled aaset",
              "timedOut": null,
              "duration": 4510,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(_fieldSel.default.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Association\", _globalSel.default.dialogTitleText);\ncy.wait(\"@assetsPipeline\");\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  const apiLength = response.body.result.values.length;\n  const assetspipLabels = response.body.result.values.map(ele => ele.label);\n  const disableassetsPip = response.body.result.values.find(ele => ele.disable === true);\n  const availablePip = response.body.result.values.find(ele => ele.disable !== true);\n  if (disableassetsPip) {\n    var _availablePip$label;\n    const assetDropdownContain = (_availablePip$label = availablePip.label) !== null && _availablePip$label !== void 0 ? _availablePip$label : `Select`;\n    budropdown(_globalSel.default.dialogContent, `button ${_globalSel.default.buttonTypography}`, assetDropdownContain);\n    if (apiLength > 5) buSearchbox(_globalSel.default.search, disableassetsPip === null || disableassetsPip === void 0 ? void 0 : disableassetsPip.label);\n    budropdownOption(disableassetsPip === null || disableassetsPip === void 0 ? void 0 : disableassetsPip.label, `[data-testid=\"virtuallist-listitembutton-w6znzg16f\"]`)\n    // .find(`[data-testid=\"virtuallist-listitembutton-w6znzg16f\"]`)\n    .should('have.attr', 'aria-disabled', 'true');\n  } else {\n    cy.log(\"Association field not available in bin\");\n  }\n});",
              "err": {},
              "uuid": "c98cf7dc-d8cd-4fee-80ba-f49fd291e87c",
              "parentUUID": "798fc4bd-dba0-4d85-8474-88d839540f0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit association field",
              "fullTitle": "Nevigate the setting page and create and update association fields Edit association field",
              "timedOut": null,
              "duration": 6652,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const totalPages = response.body.result.pages.totalNoOfPages;\n  const handleAscField = fieldData => {\n    const ascField = fieldData.values.find(ele => ele.prop === \"asc\");\n    cy.intercept(method.get, `**/fms/fields/${ascField.id}?*`).as(\"fieldDetail\");\n    (0, _field.searchNactionField)(ascField.label, _globalSel.default.edit, \"Edit\");\n    ascInput(ascField.label);\n    cy.wait(\"@fieldDetail\").then(({\n      response\n    }) => {\n      if (response.body.result.selection === \"multi\") {\n        (0, _utility.editMultiSelectionField)();\n      } else {\n        (0, _utility.editSingleSelectionField)();\n      }\n    });\n  };\n  if (totalPages === 1) {\n    handleAscField(response.body.result);\n  } else {\n    cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click();\n    cy.wait(\"@fieldGrid\").then(({\n      response\n    }) => {\n      handleAscField(response.body.result);\n    });\n  }\n});\nbuSaveButton().click();\ncyGet(_globalSel.default.SnackbarMessage).invoke('text').should('include', _messages.default.updated);",
              "err": {},
              "uuid": "4a622f46-13dd-40a3-84e6-502fd1cc09e5",
              "parentUUID": "798fc4bd-dba0-4d85-8474-88d839540f0b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c204b246-a4c5-489b-b545-d14372d0e859",
            "c98cf7dc-d8cd-4fee-80ba-f49fd291e87c",
            "4a622f46-13dd-40a3-84e6-502fd1cc09e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27863,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0421c69b-915d-457e-b321-62b19d340207",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "74fd1817-24a5-43bb-8f01-6036876c35ba",
          "title": "Nevigate the setting page and create and update association fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach Field",
              "fullTitle": "Nevigate the setting page and create and update association fields Attach Field",
              "timedOut": null,
              "duration": 12449,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"Attach field\"]').click();\ncy.wait(\"@availableFiels\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cy.log(JSON.stringify(response));\n  const availablefieldLabel = response.body.result.values.map(ele => ele.label);\n  buSearchbox(`${fieldSel.attachfieldstextfield} ${globalSel.searchplaceholder}`, availablefieldLabel[0]);\n  cyGet(`[data-testid=\"propertylist-formcontrollabel-z6t5ag0ev\"] input[type=\"checkbox\"]`).first().click();\n  cyGet(`[data-testid=\"propertylist-formcontrollabel-z6t5ag0ev\"] [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`).contains(availablefieldLabel[0]);\n  buButton('[data-testid=\"Attach\"]').click();\n  onesecondWait();\n  buSearchbox(`${fieldSel.searchBoxfieldGrid} ${globalSel.searchplaceholder}`, availablefieldLabel[0]);\n  cyGet(`table tbody tr [aria-label=\"${availablefieldLabel[0]}\"]`).contains(availablefieldLabel[0]);\n});",
              "err": {},
              "uuid": "e14a5e44-14c8-44d7-b900-8e64dcd5ff9c",
              "parentUUID": "74fd1817-24a5-43bb-8f01-6036876c35ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e14a5e44-14c8-44d7-b900-8e64dcd5ff9c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12449,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5fa2131a-3b33-4e46-afa9-141a4aa5f303",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "908f7fd6-0a0a-4634-84c7-1a151f36ca84",
          "title": "Nevigate the setting page and verify the field components",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify and select Asset Pipeline",
              "fullTitle": "Nevigate the setting page and verify the field components Verify and select Asset Pipeline",
              "timedOut": null,
              "duration": 10649,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const moduleName = module.toUpperCase();\nconst selectedAsset = asset === \"deal\" ? `${assetName}s` : `${assetName}`;\nconst subHeadingText = `Fields store information about ${moduleName}`;\nbuCaption(globalSel.settinglayoutbox, fieldSel.captionHeading, \"Fields\", fieldSel.captionSubHeading, subHeadingText);\ncyGet('[data-testid=\"properties-typography-ug3bego54\"]').contains(\"Select Asset\");\ncy.wait(\"@assetPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let piplabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `${globalSel.buttonBox} button`, piplabel[0]);\n  cyGet(`[data-testid=\"${selectedAsset}\"] [data-testid=\"groupbaseitems-typography-rnufjql1q\"]`).should(\"contain.text\", selectedAsset);\n  budropdownOption(piplabel[1]).contains(piplabel[1]).click();\n  budropdown(globalSel.settinglayoutbox, `${globalSel.buttonBox} button`, piplabel[1]);\n});\ncyGet('#simple-tab-0 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"All fields\");\ncyGet('#simple-tab-1 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"Groups\");\ncyGet('#simple-tab-2 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"Deleted fields\");",
              "err": {},
              "uuid": "b5443068-414c-4f89-a4f2-6285df49d963",
              "parentUUID": "908f7fd6-0a0a-4634-84c7-1a151f36ca84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the group filter is working as expected",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the group filter is working as expected",
              "timedOut": null,
              "duration": 4706,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@assetPipeline\", {\n  timeout: 10000\n}).then(() => {\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All groups\");\n  cy.wait(\"@groupList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let groupLabel = response.body.result.values.map(ele => ele.label);\n    budropdownOption(groupLabel[0]).contains(groupLabel[0]).click();\n    recordCountOnPage(\"5\");\n    validatetableRow(3, groupLabel[0]);\n  });\n});",
              "err": {},
              "uuid": "94d9e0ce-d95f-4ddb-82ae-25b8f7744b0f",
              "parentUUID": "908f7fd6-0a0a-4634-84c7-1a151f36ca84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the field type filter should contains all field type",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the field type filter should contains all field type",
              "timedOut": null,
              "duration": 33793,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\nfieldTypeFilterSel(\"Single line text\");\nfieldTypeFilterSel(\"Number\");\nfieldTypeFilterSel(\"Email\");\nfieldTypeFilterSel(\"URL\");\nfieldTypeFilterSel(\"Owner\");\nfieldTypeFilterSel(\"Created By\");\nfieldTypeFilterSel(\"Basic Dropdown\");\nfieldTypeFilterSel(\"Colored dropdown\");\nfieldTypeFilterSel(\"Date field\");\nfieldTypeFilterSel(\"Time field\");\nfieldTypeFilterSel(\"Date and time field\");\nfieldTypeFilterSel(\"Stage\");\nfieldTypeFilterSel(\"Attachment\");\nfieldTypeFilterSel(\"Address\");\nfieldTypeFilterSel(\"Image\");\nfieldTypeFilterSel(\"Multi line text\");\nfieldTypeFilterSel(\"Checkbox\");\nfieldTypeFilterSel(\"Radio\");\nfieldTypeFilterSel(\"Rating\");\nfieldTypeFilterSel(\"Formula\");\nfieldTypeFilterSel(\"Unique Id\");\nfieldTypeFilterSel(\"Custom form\");\nfieldTypeFilterSel(\"Data source\");",
              "err": {},
              "uuid": "af252d46-38e4-408d-bb63-6e2553f51d41",
              "parentUUID": "908f7fd6-0a0a-4634-84c7-1a151f36ca84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the field type filter is working as expected",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the field type filter is working as expected",
              "timedOut": null,
              "duration": 5839,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@assetPipeline\", {\n  timeout: 10000\n}).then(() => {\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\n  onesecondWait();\n  budropdownOption(\"Single line text\").contains(\"Single line text\").click();\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"Single line text\");\n  recordCountOnPage(\"5\");\n  validatetableRow(2, \"Single line text\");\n});",
              "err": {},
              "uuid": "1756ec91-cf5b-4a6f-befb-6d6a958e0603",
              "parentUUID": "908f7fd6-0a0a-4634-84c7-1a151f36ca84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate used count with API",
              "fullTitle": "Nevigate the setting page and verify the field components Validate used count with API",
              "timedOut": null,
              "duration": 4162,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-0 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"All fields\").click();\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n});\nrecordCountOnPage(\"10\");\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.recordCount);\n  cyGet('table > tbody > .MuiTableRow-root').each(($row, index) => {\n    cy.wrap($row).as(\"tableRow\");\n    cy.get(\"@tableRow\").find(':nth-child(5)').should('contain', abc[index]);\n  });\n});",
              "err": {},
              "uuid": "08356789-eab5-40ff-a9bc-6301ea649561",
              "parentUUID": "908f7fd6-0a0a-4634-84c7-1a151f36ca84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate attached count with API",
              "fullTitle": "Nevigate the setting page and verify the field components Validate attached count with API",
              "timedOut": null,
              "duration": 2912,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-0 > .MuiTypography-root').contains(\"All fields\").click();\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n});\nrecordCountOnPage(\"10\");\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.attachedCount);\n  let counts = abc.map(fields => {\n    return fields.count;\n  });\n  cyGet('table > tbody > .MuiTableRow-root').each(($row, index) => {\n    cy.wrap($row).as(\"tableRow\");\n    cy.get(\"@tableRow\").find(':nth-child(6)').should('contain', counts[index]);\n  });\n});",
              "err": {},
              "uuid": "3dd48f4f-07c2-45f5-acd9-4b79364ea762",
              "parentUUID": "908f7fd6-0a0a-4634-84c7-1a151f36ca84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5443068-414c-4f89-a4f2-6285df49d963",
            "94d9e0ce-d95f-4ddb-82ae-25b8f7744b0f",
            "af252d46-38e4-408d-bb63-6e2553f51d41",
            "1756ec91-cf5b-4a6f-befb-6d6a958e0603",
            "08356789-eab5-40ff-a9bc-6301ea649561",
            "3dd48f4f-07c2-45f5-acd9-4b79364ea762"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 62061,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "722b935b-1b37-4834-ade2-3ab6159e0b3b",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c8142b54-caf8-46f6-8f4e-95a49d7013d0",
          "title": "Navigate to setting page and create and update fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create URL field",
              "fullTitle": "Navigate to setting page and create and update fields Create URL field",
              "timedOut": null,
              "duration": 15886,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `URL-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"URL\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "b9fd13a0-5374-4139-a4ae-6d191b56a929",
              "parentUUID": "c8142b54-caf8-46f6-8f4e-95a49d7013d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit URL field",
              "fullTitle": "Navigate to setting page and create and update fields Edit URL field",
              "timedOut": null,
              "duration": 7115,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `URL-${new Date().valueOf()}`;\nsearchField(\"url\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);",
              "err": {},
              "uuid": "a4312579-50e6-4604-9a37-f419e76bb26b",
              "parentUUID": "c8142b54-caf8-46f6-8f4e-95a49d7013d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Mobile number field",
              "fullTitle": "Navigate to setting page and create and update fields Create Mobile number field",
              "timedOut": null,
              "duration": 5775,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Mobile-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Mobile number\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"none\", null, null, \"4-3-3\", globalSel.dialogTitleText);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "50b46bd4-858b-4104-bc05-55250db3c8b5",
              "parentUUID": "c8142b54-caf8-46f6-8f4e-95a49d7013d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get phn field details through interception for edit phn field",
              "fullTitle": "Navigate to setting page and create and update fields Get phn field details through interception for edit phn field",
              "timedOut": null,
              "duration": 4430,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchField(\"phn\", null, 'Edit').then(fieldData => {\n  cy.wrap(fieldData).as(\"fieldData\");\n});\ncy.get(\"@fieldData\").then(res => {\n  field = res;\n});",
              "err": {},
              "uuid": "e1c2f619-1070-4956-a9e9-5e628e7554b2",
              "parentUUID": "c8142b54-caf8-46f6-8f4e-95a49d7013d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Mobile number field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Mobile number field",
              "timedOut": null,
              "duration": 7916,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Mobile-${new Date().valueOf()}`;\ncy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\nsearchField(\"phn\", field.label, 'Edit');\ncy.wait(\"@getFieldById\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const format = response.body.result.format;\n  labelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\n  budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, format, null, null, \"4-4-2\", globalSel.dialogTitleText);\n  preview(fieldLabel, `Enter ${fieldLabel}`);\n  buSaveButton().click();\n  cyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);\n});",
              "err": {},
              "uuid": "0a440df4-a40c-4743-ab52-7ae1adba3220",
              "parentUUID": "c8142b54-caf8-46f6-8f4e-95a49d7013d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Number field",
              "fullTitle": "Navigate to setting page and create and update fields Create Number field",
              "timedOut": null,
              "duration": 7221,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Number-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Number\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\n// budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"none\", null, null, \"4-3-3\", globalSel.dialogTitleText);\nbutextField(globalSel.butextfield, \"#min\").type(2);\nbutextField(globalSel.butextfield, \"#max\").type(1000);\nbutextField(globalSel.butextfield, \"#decimal\").type(3);\n// cy.componentLabel(lead.formLabel, \"Min Number\", \"input\").type(2)\n// cy.componentLabel(lead.formLabel, \"Max Number\", \"input\").type(10)\n// cy.componentLabel(lead.formLabel, \"Decimal Points\", \"input\").type(2)\ncyGet('[data-testid=\"withtitle-inputlabel-9rg7j5v06\"]').contains(\"Max-3\");\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "06552b4f-8caf-4ac2-b47b-e36b065e0408",
              "parentUUID": "c8142b54-caf8-46f6-8f4e-95a49d7013d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Number field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Number field",
              "timedOut": null,
              "duration": 7578,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Number-${new Date().valueOf()}`;\nsearchField(\"num\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(globalSel.butextfield, \"#min\").clear().type(3);\nbutextField(globalSel.butextfield, \"#max\").clear().type(50000);\nbutextField(globalSel.butextfield, \"#decimal\").clear().type(2);\ncyGet('[data-testid=\"withtitle-inputlabel-9rg7j5v06\"]').contains(\"Max-3\");\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);",
              "err": {},
              "uuid": "72a7805c-87d6-49e7-baf7-c42959f7d32f",
              "parentUUID": "c8142b54-caf8-46f6-8f4e-95a49d7013d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Rating field",
              "fullTitle": "Navigate to setting page and create and update fields Create Rating field",
              "timedOut": null,
              "duration": 5232,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Rating-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Rating\", globalSel.dialogTitleText);\n// labelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\ncy.get('[data-testid=\"ratingfield-typography-34xvi9zqr\"]').contains(\"Type\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"Star\");\ncy.get('[data-testid=\"ratingfield-typography-lms2xp00s\"]').contains(\"Max\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"5\");\ncy.get('[data-testid=\"burating-formlabel-pfw5vth6c\"]').contains(fieldLabel);\ncy.get('[data-testid=\"burating-styledrating-i1n90l9jw\"] > label').click({\n  multiple: true,\n  force: true\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "ab4dce66-ef3e-4b3b-b7e7-6f1508a12887",
              "parentUUID": "c8142b54-caf8-46f6-8f4e-95a49d7013d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Rating field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Rating field",
              "timedOut": null,
              "duration": 5987,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Rating-${new Date().valueOf()}`;\nsearchField(\"rtg\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\ncy.get('[data-testid=\"ratingfield-typography-34xvi9zqr\"]').contains(\"Type\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"Star\");\ncy.get('[data-testid=\"ratingfield-typography-lms2xp00s\"]').contains(\"Max\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"5\");\ncy.get('[data-testid=\"burating-formlabel-pfw5vth6c\"]').contains(fieldLabel);\ncy.get('[data-testid=\"burating-styledrating-i1n90l9jw\"] > label').click({\n  multiple: true,\n  force: true\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "76afe689-e590-466d-aac0-fdf8f3e2fa91",
              "parentUUID": "c8142b54-caf8-46f6-8f4e-95a49d7013d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create checkbox field",
              "fullTitle": "Navigate to setting page and create and update fields Create checkbox field",
              "timedOut": null,
              "duration": 5405,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fieldLabel = `Checkbox-${Date.now()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(fieldSel.fieldlabelbox).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Checkbox\", globalSel.dialogTitleText);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\n[\"Option 2\", \"Option 3\"].forEach((optionText, index) => {\n  buButton(globalSel.typBtn).contains(\"Add option\").click();\n  butextField(fieldSel.fieldOptionTextfield, `input[value = \"${optionText}\"]`).should(\"have.value\", optionText);\n});\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(`[data-testid^=\"bucheckboxgroup-formlabel\"]`).contains(fieldLabel);\n[\"Option 1\", \"Option 2\", \"Option 3\"].forEach(optionText => {\n  cyGet(checkboxWrapper).contains(optionText).should(\"have.attr\", \"aria-label\", optionText);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "dd858a7d-d72b-4bca-af0c-00dfd3b45634",
              "parentUUID": "c8142b54-caf8-46f6-8f4e-95a49d7013d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit checkbox field",
              "fullTitle": "Navigate to setting page and create and update fields Edit checkbox field",
              "timedOut": null,
              "duration": 8481,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newLabel = `Checkbox-${Date.now()}`;\nconst newOption = `Option-${Date.now()}`;\nsearchField(\"chk\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(newLabel);\nbutextField(`${fieldSel.fieldOptionTextfield} :nth-child(1)`, `input`).first().clear().type(\"Edited Option 1\");\nbuButton(globalSel.typBtn).contains(\"Add option\").click();\ncy.get(fieldSel.fieldOptionTextfield).last().find(\"input\").clear().type(newOption);\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(checkboxWrapper).contains(\"Edited Option 1\").should(\"have.attr\", \"aria-label\", \"Edited Option 1\");\ncyGet(checkboxWrapper).contains(newOption).should(\"have.attr\", \"aria-label\", newOption);\nbuSaveButton().click();",
              "err": {},
              "uuid": "ceea3e2e-3ee8-4510-9300-f3a3e3b96774",
              "parentUUID": "c8142b54-caf8-46f6-8f4e-95a49d7013d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create radio field",
              "fullTitle": "Navigate to setting page and create and update fields Create radio field",
              "timedOut": null,
              "duration": 4997,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Radio-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Radio\", globalSel.dialogTitleText);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\n[\"Option 2\", \"Option 3\"].forEach((optionText, index) => {\n  buButton(globalSel.typBtn).contains(\"Add option\").click();\n  butextField(fieldSel.fieldOptionTextfield, `input[value = \"${optionText}\"]`).should(\"have.value\", optionText);\n});\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(`[data-testid^=\"bucheckboxgroup-formlabel\"]`).contains(fieldLabel);\n[\"Option 1\", \"Option 2\", \"Option 3\"].forEach(optionText => {\n  cyGet(checkboxWrapper).contains(optionText).should(\"have.attr\", \"aria-label\", optionText);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "4c8e9ecb-1c2f-4baa-abf0-bbdca861e1c7",
              "parentUUID": "c8142b54-caf8-46f6-8f4e-95a49d7013d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit radio field",
              "fullTitle": "Navigate to setting page and create and update fields Edit radio field",
              "timedOut": null,
              "duration": 8969,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newLabel = `Radio-${Date.now()}`;\nconst newOption = `Option-${Date.now()}`;\nsearchField(\"rad\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(newLabel);\nbutextField(fieldSel.fieldOptionTextfield, `:nth-child(1) input`).first().clear().type(\"Edited Option 1\");\nbuButton(globalSel.typBtn).contains(\"Add option\").click();\ncy.get(fieldSel.fieldOptionTextfield).last().find(\"input\").clear().type(newOption);\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(checkboxWrapper).contains(\"Edited Option 1\").should(\"have.attr\", \"aria-label\", \"Edited Option 1\");\ncyGet(checkboxWrapper).contains(newOption).should(\"have.attr\", \"aria-label\", newOption);\nbuSaveButton().click();",
              "err": {},
              "uuid": "3f54fdb4-7345-4201-9f99-d2a63e012e86",
              "parentUUID": "c8142b54-caf8-46f6-8f4e-95a49d7013d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b9fd13a0-5374-4139-a4ae-6d191b56a929",
            "a4312579-50e6-4604-9a37-f419e76bb26b",
            "50b46bd4-858b-4104-bc05-55250db3c8b5",
            "e1c2f619-1070-4956-a9e9-5e628e7554b2",
            "0a440df4-a40c-4743-ab52-7ae1adba3220",
            "06552b4f-8caf-4ac2-b47b-e36b065e0408",
            "72a7805c-87d6-49e7-baf7-c42959f7d32f",
            "ab4dce66-ef3e-4b3b-b7e7-6f1508a12887",
            "76afe689-e590-466d-aac0-fdf8f3e2fa91",
            "dd858a7d-d72b-4bca-af0c-00dfd3b45634",
            "ceea3e2e-3ee8-4510-9300-f3a3e3b96774",
            "4c8e9ecb-1c2f-4baa-abf0-bbdca861e1c7",
            "3f54fdb4-7345-4201-9f99-d2a63e012e86"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 94992,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7daa1051-4d2f-47a2-9921-2a8a801a2a54",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a31b3457-0dfa-4843-be6f-39fe35ad58b4",
          "title": "Nevigate the setting page and test the data source fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create Single selction data source field",
              "fullTitle": "Nevigate the setting page and test the data source fields Create Single selction data source field",
              "timedOut": null,
              "duration": 19066,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dsrcField = `Data source-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Dropdown\", globalSel.dialogTitleText);\nlabelNplaceholder(dsrcField, `Please select the values`);\ncy.get('[data-testid=\"datasourcefield-typography-zui6gbl8o\"]').should(\"have.text\", \"Link Asset\");\ncy.get(`${globalSel.dialogContent} [data-testid=\"buswitch-button-79w8xnphk\"]`).click();\ncy.wait(\"@assetsPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const getAssets = response.body.result.values.map(ele => ele.label);\n  const totalAsset = response.body.result.pages.totalRecords;\n  const getLeadAssets = response.body.result.values.find(ele => ele.group !== asset);\n  budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, getAssets[0], totalAsset, globalSel.search, getLeadAssets.label, globalSel.dialogTitleText);\n});\nheadingNsubheading();\nfiledSelection(\"Single-selection\", \"single\").should(\"be.checked\");\nbudropdown(globalSel.dialogContent, `label`, dsrcField);\ncyGet(`${globalSel.dialogContent} [data-testid=\"datasourcefield-box-6mghg71wb\"] [data-testid=\"budropdown-box-ty1opau5a\"] input`).should(\"have.attr\", \"placeholder\", `Please select the values`);\n// preview(dsrcField, `Please select the values`)\nbuSaveButton().click();",
              "err": {},
              "uuid": "78b66f6e-ac27-43e9-89fe-a883f1d7a9c9",
              "parentUUID": "a31b3457-0dfa-4843-be6f-39fe35ad58b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit label and placehoder ofdata source field",
              "fullTitle": "Nevigate the setting page and test the data source fields Edit label and placehoder ofdata source field",
              "timedOut": null,
              "duration": 9121,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const dsrcField = `Data source-${Date.now()}`;\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const totalPages = response.body.result.pages.totalNoOfPages;\n  const editDataSource = fieldData => {\n    cy.intercept(method.get, `**/fms/fields/${fieldData === null || fieldData === void 0 ? void 0 : fieldData.id}?*`).as(\"fieldDetail\");\n    searchNactionField(fieldData.label, '#edit', \"Edit\");\n    labelNplaceholder(dsrcField, `Please select the values`);\n    cy.wait(\"@fieldDetail\").then(({\n      response\n    }) => {\n      const destPip = response.body.result.catId.label;\n      cy.get(`[aria-label=${destPip}]`).parent().should(\"be.disabled\");\n      // headingNsubheading();\n      if (fieldData.selection === \"multi\") {\n        editMultiSelectionField();\n      } else {\n        editSingleSelectionField();\n      }\n    });\n  };\n  if (totalPages === 1) {\n    const dsrcFieldData = response.body.result.values.find(ele => ele.prop === \"dsrc\");\n    editDataSource(dsrcFieldData);\n  } else {\n    cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click(); // Move to last page\n    cy.wait(\"@fieldGrid\").then(({\n      response\n    }) => {\n      const dsrcFieldData = response.body.result.values.find(ele => ele.prop === \"dsrc\");\n      editDataSource(dsrcFieldData);\n    });\n  }\n});\nbudropdown(globalSel.dialogContent, `label`, dsrcField);\ncyGet(`${globalSel.dialogContent} [data-testid=\"datasourcefield-box-6mghg71wb\"] [data-testid=\"budropdown-box-ty1opau5a\"] input`).should(\"have.attr\", \"placeholder\", `Please select the values`);\n// preview(dsrcField, `Please select the values`)\nbuSaveButton().click();",
              "err": {},
              "uuid": "d6a840de-656d-40ed-b64e-86f1563084d5",
              "parentUUID": "a31b3457-0dfa-4843-be6f-39fe35ad58b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78b66f6e-ac27-43e9-89fe-a883f1d7a9c9",
            "d6a840de-656d-40ed-b64e-86f1563084d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28187,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d76494c7-51eb-4ee5-9d3e-8da2449f0a08",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "72630833-3adc-422c-b33a-bc700e5a1c0c",
          "title": "Nevigate the setting page and test the date and time fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create date and time field with Calendar Type",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date and time field with Calendar Type",
              "timedOut": null,
              "duration": 22144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dtmField = `dateNtime-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date and Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dtmField, `Please select Date & Time`);\ncy.get('[role=\"dialog\"] [data-testid=\"buswitch-button-79w8xnphk\"]').should(\"have.attr\", \"aria-checked\", \"false\");\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Calendar Type\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"None\", null, null, \"Past Dates\", globalSel.dialogTitleText);\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\ncyGet(`[data-testid=\"buradiogroup-formlabel-ofdcw41bb\"]`).contains(\"Time Format\");\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).first().find(`input`).should(\"have.value\", \"24\");\n// cy.componentLabel(lead.formLabel, \"Time Format\", \"input[value='12']\").should(\"be.checked\").and(\"have.attr\", \"type\", \"radio\")\n// cy.get('.MuiFormGroup-root > :nth-child(2) > .MuiTypography-root').should(\"have.text\", \"12hrs\")\n// cy.componentLabel(lead.formLabel, \"Time Format\", \"input[value='24']\").should(\"have.attr\", \"type\", \"radio\").click()\n// cy.get('.MuiFormGroup-root > :nth-child(1) > .MuiTypography-root').should(\"have.text\", \"24hrs\")\npreviewDateField(dtmField, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "69bb07a5-b3f1-4b74-8f4d-257f37c1d325",
              "parentUUID": "72630833-3adc-422c-b33a-bc700e5a1c0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date and time field with Date Range Selection",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date and time field with Date Range Selection",
              "timedOut": null,
              "duration": 22605,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const today = new Date();\nconst currentYear = today.getFullYear();\nconst currentDay = String(today.getDate());\nconst previousDate = new Date();\npreviousDate.setFullYear(previousDate.getFullYear() - 1);\nconst prevYear = previousDate.getFullYear();\nlet dtmField = `dateNtime-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date and Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dtmField, `Please select Date & Time`);\ncy.get('[role=\"dialog\"] button[role=\"switch\"]').click();\n// Choose Min Date\ncy.get('[placeholder= \"Min\"]').prev().find('button').click();\ndateDailogComponent(prevYear, \"1\");\ncy.get('.MuiPickersLayout-root > .MuiDialogActions-root > .MuiButtonBase-root').contains(\"OK\").click();\ncy.wait(250);\n// Choose Max Date\ncy.get('[placeholder= \"Max\"]').prev().find('button').click();\ndateDailogComponent(currentYear, currentDay);\ncy.get('.MuiPickersLayout-root > .MuiDialogActions-root > .MuiButtonBase-root').contains(\"OK\").click();\n// Calendar Type should be disabled when choose Date Range Selection\ncyGet(`[data-testid=\"withtitle-box-mp6w6v7ka\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).should(\"be.disabled\");\n// Restricte days\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\n// Choose date format\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(dtmField, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "3cdfa611-ce1e-41a4-9972-6d7ae7261e7b",
              "parentUUID": "72630833-3adc-422c-b33a-bc700e5a1c0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit date and time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit date and time field",
              "timedOut": null,
              "duration": 13149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dtmFieldLabel = `dateNtime-${new Date().valueOf()}`;\nsearchField(\"dtm\", null, 'Edit');\nlabelNplaceholder(dtmFieldLabel, `Please select Date & Time`);\npreviewDateField(dtmFieldLabel, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "96960d6f-f737-4f17-b020-e0f636f6b375",
              "parentUUID": "72630833-3adc-422c-b33a-bc700e5a1c0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date field with Calendar Type",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date field with Calendar Type",
              "timedOut": null,
              "duration": 13307,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dateField = `Date-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dateField, `Please select Date`);\ncy.get('[role=\"dialog\"] [data-testid=\"buswitch-button-79w8xnphk\"]').should(\"have.attr\", \"aria-checked\", \"false\");\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Calendar Type\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"None\", null, null, \"Past Dates\", globalSel.dialogTitleText);\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\npreviewDateField(dateField, `Please select Date`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "beaec0f1-1808-439d-8ecf-db8269ad1ad1",
              "parentUUID": "72630833-3adc-422c-b33a-bc700e5a1c0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date field with Date Range Selection",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date field with Date Range Selection",
              "timedOut": null,
              "duration": 18963,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const today = new Date();\nconst currentYear = today.getFullYear();\nconst currentDay = String(today.getDate());\nconst previousDate = new Date();\npreviousDate.setFullYear(previousDate.getFullYear() - 1);\nconst prevYear = previousDate.getFullYear();\nlet dateField = `date-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dateField, `Please select Date`);\ncy.get('[role=\"dialog\"] button[role=\"switch\"]').click();\n// Choose Min Date\ncy.get('[placeholder= \"Min\"]').prev().find('button').click();\ndateDailogComponent(prevYear, \"1\");\ncy.wait(250);\n// Choose Max Date\ncy.get('[placeholder= \"Max\"]').prev().find('button').click();\ndateDailogComponent(currentYear, currentDay);\n// Calendar Type should be disabled when choose Date Range Selection\ncyGet(`[data-testid=\"withtitle-box-mp6w6v7ka\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).should(\"be.disabled\");\n// Restricte days\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\npreviewDateField(dateField, `Please select Date`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "28ad5b85-f6df-4361-ac44-08930e71fb4e",
              "parentUUID": "72630833-3adc-422c-b33a-bc700e5a1c0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit date field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit date field",
              "timedOut": null,
              "duration": 12135,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Date-${new Date().valueOf()}`;\nsearchField(\"dat\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Please select Date`);\npreviewDateField(fieldLabel, `Please select Date`);\nbuSaveButton().click();",
              "err": {
                "message": "CypressError: Timed out retrying after 4050ms: `cy.click()` failed because it requires a DOM element or document.\n\nNo elements in the current DOM matched your query:\n\n  > cy.get([data-testid=\"actions-menulist-fd8e0yq7x\", [object Object]).find(#edit).contains(Edit)",
                "estack": "CypressError: Timed out retrying after 4050ms: `cy.click()` failed because it requires a DOM element or document.\n\nNo elements in the current DOM matched your query:\n\n  > cy.get([data-testid=\"actions-menulist-fd8e0yq7x\", [object Object]).find(#edit).contains(Edit)\n    at isElement (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:148556:62)\n    at validateType (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:148414:14)\n    at Object.isType (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:148445:7)\n    at Array.<anonymous> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:138867:24)\n    at $Cy.getSubjectFromChain (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:142173:34)\n    at Object.subjectFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:114214:51)\n    at retryActionability (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:114916:27)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147344:68)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147285:14)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:5420:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/helpers/field.js:29:13)\n    at withinFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:136019:8)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:136100:16)\n    at __WEBPACK_DEFAULT_EXPORT__ (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:133958:10)\n    at Context.within (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:136086:67)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)",
                "diff": null
              },
              "uuid": "042b6dda-fc40-4194-b8aa-caab4bbaabb7",
              "parentUUID": "72630833-3adc-422c-b33a-bc700e5a1c0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create time field",
              "timedOut": null,
              "duration": 10475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let timeField = `Time-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(timeField, `Please select Time`);\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(timeField, `Please select Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "99eddb40-573b-453b-9bca-f65bea69b714",
              "parentUUID": "72630833-3adc-422c-b33a-bc700e5a1c0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit time field",
              "timedOut": null,
              "duration": 12525,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Time-${new Date().valueOf()}`;\nsearchField(\"tim\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Please select Time`);\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(fieldLabel, `Please select Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "3f5b0982-5c93-4a20-920f-8b1c3108c546",
              "parentUUID": "72630833-3adc-422c-b33a-bc700e5a1c0c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "69bb07a5-b3f1-4b74-8f4d-257f37c1d325",
            "3cdfa611-ce1e-41a4-9972-6d7ae7261e7b",
            "96960d6f-f737-4f17-b020-e0f636f6b375",
            "beaec0f1-1808-439d-8ecf-db8269ad1ad1",
            "28ad5b85-f6df-4361-ac44-08930e71fb4e",
            "99eddb40-573b-453b-9bca-f65bea69b714",
            "3f5b0982-5c93-4a20-920f-8b1c3108c546"
          ],
          "failures": [
            "042b6dda-fc40-4194-b8aa-caab4bbaabb7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 125303,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5f9145ef-7a6d-44cf-b5e9-da4750c7e8fd",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9a9828ab-4576-4b8c-a30d-b2b15464a060",
          "title": "Nevigate the setting page and test the email fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Field name should be unique",
              "fullTitle": "Nevigate the setting page and test the email fields Field name should be unique",
              "timedOut": null,
              "duration": 16000,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const roleOfUser = response.body.result.user.role;\n  const manageProperties = response.body.result.settings.permission[asset].manageProperties;\n  if (roleOfUser === \"std\" && manageProperties === false) {\n    buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n  } else {\n    cy.wait(\"@fieldGrid\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const existingField = response.body.result.values.find(fld => {\n        var _fld$group;\n        return ((_fld$group = fld.group) === null || _fld$group === void 0 ? void 0 : _fld$group.scope) === \"public\";\n      });\n      buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n      labelNplaceholder(existingField === null || existingField === void 0 ? void 0 : existingField.label, `Please Enter ${existingField === null || existingField === void 0 ? void 0 : existingField.label}`);\n      cyGet(`#string_label-helper-text`).should(\"contain.text\", \"Field label already exists\");\n      buSaveButton().should(\"be.disabled\");\n    });\n  }\n  ;\n});",
              "err": {},
              "uuid": "dfcf858a-ff15-4750-b429-57e40fc6855d",
              "parentUUID": "9a9828ab-4576-4b8c-a30d-b2b15464a060",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Allow All",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Allow All",
              "timedOut": null,
              "duration": 10679,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fieldLabel = `Email-${new Date().valueOf()}`;\ncy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cy.wrap(response.body.result).as(\"appAuthResponse\");\n  const roleOfUser = response.body.result.user.role;\n  const manageProperties = response.body.result.settings.permission[asset].manageProperties;\n  if (roleOfUser === \"std\" && manageProperties === false) {\n    buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n  } else {\n    buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n    cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n    budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n    labelNplaceholder(fieldLabel, `Please Enter Email`);\n    cyGet('[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]').should(\"have.text\", \"Mode of Email\");\n    budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Allow All\");\n    preview(fieldLabel, `Please Enter Email`);\n    buSaveButton().click();\n  }\n  ;\n});\ncy.get(\"@appAuthResponse\").then(res => {\n  appAuthRes = res;\n});",
              "err": {},
              "uuid": "a80de9a3-9671-456b-a716-046558cbbd27",
              "parentUUID": "9a9828ab-4576-4b8c-a30d-b2b15464a060",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Allow some",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Allow some",
              "timedOut": null,
              "duration": 12210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nconst roleOfUser = appAuthRes.user.role;\nconst manageProperties = appAuthRes.settings.permission[asset].manageProperties;\nif (roleOfUser === \"std\" && manageProperties === false) {\n  buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n} else {\n  buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n  cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n  budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n  emlComponentSel(label, \"Allow All\", \"Allow Some\", \"Select Domains\", \"gmail.com\");\n}\n;",
              "err": {},
              "uuid": "0d2e31c3-0545-48c4-8520-bdfb008d50c5",
              "parentUUID": "9a9828ab-4576-4b8c-a30d-b2b15464a060",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit email field for Allow some Email domains",
              "fullTitle": "Nevigate the setting page and test the email fields Edit email field for Allow some Email domains",
              "timedOut": null,
              "duration": 17808,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  let assetPipId = response.body.result.values.map(ele => ele.id);\n  cy.wrap(assetPipId[0]).as(\"assetPipId\");\n});\n// cy.get(\"@assetPipId\").then((response) => { assetPipelineId = response });\nsearchField(\"eml\", null, 'Edit').then(field => {\n  cy.get('[data-testid=\"close-dialog\"]').click();\n  // const fieldId = field?.id\n  cy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\n  searchField(\"phn\", field.label, 'Edit');\n  cy.wait(\"@getFieldById\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let modetype;\n    const mode = response.body.result.mode;\n    const exclude = response.body.result.excludes;\n    const updatedDomains = allowedMailDomain.filter(domain => !exclude.includes(domain));\n    if (mode === 1) {\n      modetype = \"Allow Some\";\n    } else if (mode === 0) {\n      modetype = \"Restrict Some\";\n    } else {\n      modetype = \"Allow All\";\n    }\n    emlComponentSel(label, modetype, \"Allow Some\", exclude[0], updatedDomains[0]);\n  });\n});",
              "err": {},
              "uuid": "a0c46a19-ba85-486a-b815-9fdd0140fd08",
              "parentUUID": "9a9828ab-4576-4b8c-a30d-b2b15464a060",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Restrict some",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Restrict some",
              "timedOut": null,
              "duration": 12342,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nconst roleOfUser = appAuthRes.user.role;\nconst manageProperties = appAuthRes.settings.permission[asset].manageProperties;\nif (roleOfUser === \"std\" && manageProperties === false) {\n  buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n} else {\n  buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n  cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n  budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n  emlComponentSel(label, \"Allow All\", \"Allow Some\", \"Select Domains\", \"yahoo.com\");\n}\n;",
              "err": {},
              "uuid": "89cc1dc9-ea7f-4b8a-a402-61a36a88163a",
              "parentUUID": "9a9828ab-4576-4b8c-a30d-b2b15464a060",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit email field for Restricted Email domains",
              "fullTitle": "Nevigate the setting page and test the email fields Edit email field for Restricted Email domains",
              "timedOut": null,
              "duration": 16179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nsearchField(\"eml\", null, 'Edit').then(field => {\n  cy.get('[data-testid=\"close-dialog\"]').click();\n  // const fieldId = field?.id\n  cy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\n  searchField(\"phn\", field.label, 'Edit');\n  cy.wait(\"@getFieldById\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let modetype;\n    const mode = response.body.result.mode;\n    const exclude = response.body.result.excludes;\n    const updatedDomains = allowedMailDomain.filter(domain => !exclude.includes(domain));\n    if (mode === 1) {\n      modetype = \"Allow Some\";\n    } else if (mode === 0) {\n      modetype = \"Restrict Some\";\n    } else {\n      modetype = \"Allow All\";\n    }\n    emlComponentSel(label, modetype, \"Restrict Some\", exclude[0], updatedDomains[0]);\n  });\n});",
              "err": {},
              "uuid": "488d86ef-6a84-48b8-b630-4ad26e8d02a9",
              "parentUUID": "9a9828ab-4576-4b8c-a30d-b2b15464a060",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dfcf858a-ff15-4750-b429-57e40fc6855d",
            "a80de9a3-9671-456b-a716-046558cbbd27",
            "0d2e31c3-0545-48c4-8520-bdfb008d50c5",
            "a0c46a19-ba85-486a-b815-9fdd0140fd08",
            "89cc1dc9-ea7f-4b8a-a402-61a36a88163a",
            "488d86ef-6a84-48b8-b630-4ad26e8d02a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 85218,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cd5fd8c5-7478-407b-9b25-f4d7bd4a034b",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8820e47b-8e2c-4479-9ea6-0d6163e9d362",
          "title": "Nevigate the setting page and test the field group",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add new group",
              "fullTitle": "Nevigate the setting page and test the field group Add new group",
              "timedOut": null,
              "duration": 13896,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let groupName = `Group-${new Date().valueOf()}`;\ncy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.get(lead.typeBtn).contains(\"Add Group\").click();\ncy.get(lead.dialogTitle).should(\"have.text\", \"Create group\");\ncy.componentLabel(lead.formLabel, \"Create group\", \"input\").type(groupName);\ncy.get(\"#cancel\").should(\"have.text\", \"Cancel\");\ncy.get(\"#add\").click();",
              "err": {},
              "uuid": "c92fdf6e-4954-47e7-8985-403791871f96",
              "parentUUID": "8820e47b-8e2c-4479-9ea6-0d6163e9d362",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Private group can't be edited and deleted",
              "fullTitle": "Nevigate the setting page and test the field group Private group can't be edited and deleted",
              "timedOut": null,
              "duration": 5470,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(\"@groupGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let privateGroup = response.body.result.values.find(ele => ele.scope === \"private\");\n  cy.contains(\"tr\", privateGroup === null || privateGroup === void 0 ? void 0 : privateGroup.label).find(`[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`).should(\"contain.text\", privateGroup === null || privateGroup === void 0 ? void 0 : privateGroup.label);\n  cy.contains(\"tr\", privateGroup === null || privateGroup === void 0 ? void 0 : privateGroup.label).find(\"#actions\").click();\n  cyGet(\"#edit\").trigger(\"mouseover\", {\n    force: true\n  });\n  cyGet('.MuiTooltip-tooltip').contains(\"Private group can't be edited\");\n  cyGet('#edit > .MuiButtonBase-root ').should(\"have.attr\", \"aria-disabled\", \"true\");\n  cyGet(\"#delete\").trigger(\"mouseover\", {\n    force: true\n  });\n  cyGet('.MuiTooltip-tooltip').contains(\"Private group can't be deleted\");\n  cyGet('#delete > .MuiButtonBase-root ').should(\"have.attr\", \"aria-disabled\", \"true\");\n});",
              "err": {},
              "uuid": "e9a04a69-f210-4898-a204-9b4aed26e22d",
              "parentUUID": "8820e47b-8e2c-4479-9ea6-0d6163e9d362",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate assigned fields count with API",
              "fullTitle": "Nevigate the setting page and test the field group Validate assigned fields count with API",
              "timedOut": null,
              "duration": 5951,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(1000);\ncy.recordCountOnPage(\"5\");\ncy.wait(\"@groupGrid\").then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.assignedFields);\n  let counts = abc.map(fields => {\n    let count = fields.count;\n    return count === 0 ? \"--\" : count;\n  });\n  cyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(2)\").each(($row, index) => {\n    cy.wrap($row).contains(counts[index]);\n  });\n});",
              "err": {},
              "uuid": "fec0d567-2967-47b1-93cf-cb4f61b0ef70",
              "parentUUID": "8820e47b-8e2c-4479-9ea6-0d6163e9d362",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "group name should be unique",
              "fullTitle": "Nevigate the setting page and test the field group group name should be unique",
              "timedOut": null,
              "duration": 7647,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(\"@groupGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const group = response.body.result.values.filter(grp => grp.scope === \"public\");\n  cy.contains(`tr`, group[0].label).find(\"#actions\").click();\n  cyGet(\"#edit\").click();\n  cyGet(`[data-testid=\"title-dialog\"] p`).should(\"contain.text\", \"Rename group\");\n  cyGet(`[data-testid=\"butextfield-textfield-lrb6zu6xa\"] label`).contains(\"Rename group\").next().find(`input`).as(\"renameGroupInput\");\n  cy.get(\"@renameGroupInput\").should(\"have.value\", group[0].label);\n  cy.get(\"@renameGroupInput\").clear().type(group[1].label);\n  onesecondWait();\n  cy.wait(\"@groupExist\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    expect(response.body).has.property(\"message\", \"Group already exists.\");\n    // cyGet(\".MuiFormHelperText-root\").should(\"contain.text\", response.body.message)\n    cyGet(\"#add\").should(\"be.disabled\");\n  });\n});",
              "err": {},
              "uuid": "a8f9e978-10a7-4e7a-b0e2-a0adbe20f641",
              "parentUUID": "8820e47b-8e2c-4479-9ea6-0d6163e9d362",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Rename group",
              "fullTitle": "Nevigate the setting page and test the field group Rename group",
              "timedOut": null,
              "duration": 8046,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let groupName = `Group-${new Date().valueOf()}`;\ncyGet('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(\"@groupGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const group = response.body.result.values.find(grp => grp.scope === \"public\");\n  cy.log(JSON.stringify(group));\n  cy.contains(`tr`, group === null || group === void 0 ? void 0 : group.label).find(\"#actions\").click();\n  cyGet(\"#edit\").click();\n  cyGet(`[data-testid=\"butextfield-textfield-lrb6zu6xa\"] label`).contains(\"Rename group\").next().find(`input`).as(\"renameGroupInput\");\n  cy.get(\"@renameGroupInput\").should(\"have.value\", group === null || group === void 0 ? void 0 : group.label);\n  cy.get(\"@renameGroupInput\").clear().type(groupName);\n  cyGet(\"#cancel\").should(\"contain.text\", \"Cancel\");\n  cyGet(\"#add\").click();\n});",
              "err": {},
              "uuid": "a28f5bef-c7ac-41d2-beba-3ad85249b28a",
              "parentUUID": "8820e47b-8e2c-4479-9ea6-0d6163e9d362",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete group",
              "fullTitle": "Nevigate the setting page and test the field group Delete group",
              "timedOut": null,
              "duration": 7172,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let msg1 = \"Delete Group\";\nlet msg2 = \"Are you sure! want to delete this group?\";\ncy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(1000);\ncy.recordCountOnPage(\"5\");\ncyGet('[aria-label=\"pagination navigation\"] ul > :last').prev().click();\ncy.wait(\"@groupGrid\").then(({\n  response\n}) => {\n  const group = response.body.result.values.find(grp => grp.assignedFields.count === 0 && grp.scope === \"public\");\n  if (group) {\n    cy.contains(\"tr\", group.label).find(\"#actions\").click();\n    cyGet(\"#delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n  } else {\n    cy.log(`Either all groups contain the field, or no public groups are available: ${group}`);\n  }\n});",
              "err": {},
              "uuid": "7a943811-0e4a-4ef8-a0ce-46e3ffe64102",
              "parentUUID": "8820e47b-8e2c-4479-9ea6-0d6163e9d362",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c92fdf6e-4954-47e7-8985-403791871f96",
            "e9a04a69-f210-4898-a204-9b4aed26e22d",
            "fec0d567-2967-47b1-93cf-cb4f61b0ef70",
            "a8f9e978-10a7-4e7a-b0e2-a0adbe20f641",
            "a28f5bef-c7ac-41d2-beba-3ad85249b28a",
            "7a943811-0e4a-4ef8-a0ce-46e3ffe64102"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 48182,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "14c8e2db-db60-4fbe-b34f-772c9b7b057d",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "77d5662a-ba90-4869-a4f6-5e8d5282d00b",
          "title": "Navigate to setting page and create and update fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create Multi line text field",
              "fullTitle": "Navigate to setting page and create and update fields Create Multi line text field",
              "timedOut": null,
              "duration": 22870,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Multiline-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Multi line text\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${globalSel.butextfield}`, \"input\").type(3); // set min\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${globalSel.butextfield}`, \"input\").type(100); // set max\n// butextField(globalSel.butextfield, \"#max\").type(100)\ntextCaseFormat();\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"] > label`).should(\"have.text\", fieldLabel);\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"]`).find(\"textarea\").should(\"have.attr\", \"placeholder\", `Enter ${fieldLabel}`);\n// preview(fieldLabel, `Enter ${fieldLabel}`)\nbuSaveButton().click();\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.created);",
              "err": {},
              "uuid": "6f79a6c7-b9ab-47bd-84ac-5b71edd0be62",
              "parentUUID": "77d5662a-ba90-4869-a4f6-5e8d5282d00b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Multi line text field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Multi line text field",
              "timedOut": null,
              "duration": 18935,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Multiline-${new Date().valueOf()}`;\ncy.visit(`${Cypress.env(\"lmsUrl\")}/setting/properties`);\ncy.wait(\"@assetsPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let assetPipId = response.body.result.values.map(ele => ele.id);\n  cy.wrap(assetPipId[0]).as(\"assetPipId\");\n});\ncy.get(\"@assetPipId\").then(response => {\n  assetPipelineId = response;\n});\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\nfieldTypeFilterOnSetting(\"Multi line text\");\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"Multi line text\");\nsearchField(\"txa\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${globalSel.butextfield}`, \"input\").clear().type(3); // edit min\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${globalSel.butextfield}`, \"input\").clear().type(150); // edit max\ntextCaseFormat();\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"] > label`).should(\"have.text\", fieldLabel);\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"]`).find(\"textarea\").should(\"have.attr\", \"placeholder\", `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", messages.updated);",
              "err": {},
              "uuid": "84278a3a-58b1-43d9-9e03-40947dc5abdc",
              "parentUUID": "77d5662a-ba90-4869-a4f6-5e8d5282d00b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f79a6c7-b9ab-47bd-84ac-5b71edd0be62",
            "84278a3a-58b1-43d9-9e03-40947dc5abdc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 41805,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ca468ed2-98f3-4082-9d65-3aee552ca372",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
      "file": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3b2eb5e6-e1da-4ca7-8a3f-d8111cd1e2dc",
          "title": "Nevigate the lead page and Test Header componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
          "file": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Header componet of lead management",
              "fullTitle": "Nevigate the lead page and Test Header componet Header componet of lead management",
              "timedOut": null,
              "duration": 13703,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\n    Company profile Icon and Name should be present\n    Action, Export, Import and Create lead button should be present\n    Pipeline-user Show and add icon should be present\n    List view, Kanban view and Chart view button should be present\n*/\n// Company profile Icon and Name\ncy.wait(\"@appAuth\").then(({\n  response\n}) => {\n  cy.get('#bu-layout h6').should(\"have.text\", response.body.result.company.label);\n});\n// Action button\ncyGet(`[data-testid=\"Action\"]`).should(\"contain.text\", \"Action\");\n// Export button\ncyGet(`[data-testid=\"Export\"]`).should(\"contain.text\", \"Export\");\n// Import Button\ncyGet(`[data-testid=\"Import\"]`).should(\"contain.text\", \"Import\");\n// Create record button\ncyGet(`[data-testid=\"Create ${assetName}\"]`).should(\"contain.text\", `Create ${assetName}`);\n// Pipeline-user Show and add icon\ncy.wait(\"@crewPipelines\").then(({\n  response\n}) => {\n  let userOnPip = response.body.result.values.length;\n  if (userOnPip > 4) {\n    let userInPlusIcon = response.body.result.pages.totalRecords - 3;\n    cy.get('#bu-layout [data-testid=\"activitybar-box-txgt1t82k\"] [data-testid=\"buavatargroup-avatargroup-dovjvw4cl\"] .MuiAvatarGroup-avatar').contains(userInPlusIcon);\n  } else {\n    cy.get('#bu-layout [data-testid=\"activitybar-box-txgt1t82k\"] [data-testid=\"buavatargroup-avatargroup-dovjvw4cl\"] .MuiAvatarGroup-avatar').then($el => {\n      expect($el.length).be.eq(userOnPip);\n    });\n  }\n});\n// List view button\ncy.get('#bu-layout [aria-label=\"Grid view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");\n// Kanban view button\nif (asset === \"contact\") {\n  cy.get('#bu-layout [aria-label=\"Card view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");\n} else {\n  cy.get('#bu-layout [aria-label=\"Kanban view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");\n}\n// Chart view button\ncy.get('#bu-layout [aria-label=\"Chart view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");",
              "err": {},
              "uuid": "ca7f9378-0da6-4840-a295-cd91ab1a3bb7",
              "parentUUID": "3b2eb5e6-e1da-4ca7-8a3f-d8111cd1e2dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca7f9378-0da6-4840-a295-cd91ab1a3bb7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13703,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1093891e-e9ca-4414-8c95-66847958ca59",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
      "file": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8ca28e51-13a0-4466-938f-9d8874c3b196",
          "title": "Nevigate the lead page and Test Header componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
          "file": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Header componet of lead management",
              "fullTitle": "Nevigate the lead page and Test Header componet Header componet of lead management",
              "timedOut": null,
              "duration": 12646,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#app-routes > header > .MuiToolbar-root .MuiButtonBase-root > :first ');\n// .should(\"have.css\", \"color\", \"rgba(0, 0, 0, 0.6)\").and(\"have.css\", \"height\")\n// .and(\"have.css\", \"width\")\ncy.get('#app-routes > header a[href=\"/dashboard\"]').should(\"have.attr\", \"style\", \"display: flex;\");\ncy.get('#app-routes > header h6').should(\"have.text\", formatModuleName(module));\n// Check Light/Dark mode functionality\ncy.get('#app-routes > header [aria-label] :first .MuiTypography-root').then($item => {\n  let data = $item.text();\n  cy.log(data);\n  if (data === \"OFF\") {\n    cy.get('#app-routes > header [role=\"switch\"]').click({\n      force: true\n    });\n    cy.get('#app-routes > header [aria-label] :first .MuiTypography-root').should(\"have.text\", \"ON\");\n  } else if (data === \"ON\") {\n    cy.get('#app-routes > header [role=\"switch\"]').click({\n      force: true\n    });\n    cy.get('#app-routes > header [aria-label] :first .MuiTypography-root').should(\"have.text\", \"OFF\");\n  }\n});\n// Check Notifications button present on header or not\ncy.get('#app-routes > header [aria-label=\"Notifications\"]').click();\ncy.get('.MuiDrawer-paperAnchorRight h6').should(\"have.text\", \"Notifications\");\ncy.get('.MuiDrawer-paperAnchorRight .MuiBox-root > .MuiButtonBase-root .MuiSvgIcon-fontSizeSmall').click();\n// Check Settings button present on header or not\ncy.get('#app-routes > header [aria-label=\"Settings\"] button').should(\"have.attr\", \"type\", \"button\");\n// Check User Profile button present on header or not\ncy.get('#app-routes > header [aria-label=\"User Profile\"] button').should(\"have.attr\", \"aria-label\", \"account of current user\").click();\ncy.wait(\"@appAuth\").then(({\n  response\n}) => {\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.user.email);\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.company.label);\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.company.name);\n});",
              "err": {},
              "uuid": "23a696f3-1236-4445-aee5-591526929712",
              "parentUUID": "8ca28e51-13a0-4466-938f-9d8874c3b196",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23a696f3-1236-4445-aee5-591526929712"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12646,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b435a000-165a-46a1-957d-0a0f0b368a9d",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f035e068-ad3f-44d5-8f21-bfe2e9527f2b",
          "title": "Navigate on field config page",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the presence of the \"Attach Field\", \"Create field\", \"Cancel\" and \"Apply\" button",
              "fullTitle": "Navigate on field config page Verify the presence of the \"Attach Field\", \"Create field\", \"Cancel\" and \"Apply\" button",
              "timedOut": null,
              "duration": 14806,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"title-dialog\"]').should(\"have.text\", \"Edit fields\");\ncy.get('[data-testid=\"Attach field\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Attach field\");\ncy.get('[data-testid=\"Create field\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Create field\");\ncy.get('[data-testid=\"cancel\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"cancel\");\ncy.get('[data-testid=\"Apply\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Apply\");",
              "err": {},
              "uuid": "d881a3d4-db9d-409b-ada4-005a8b73e086",
              "parentUUID": "f035e068-ad3f-44d5-8f21-bfe2e9527f2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the presence of the System required field on form config",
              "fullTitle": "Navigate on field config page Verify the presence of the System required field on form config",
              "timedOut": null,
              "duration": 7725,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait('@fieldConfig').then(interception => {\n  const responseBody = interception.response.body;\n  const values = responseBody.result.values;\n  const filteredFields = values.filter(field => field.system && field.required);\n  const labels = filteredFields.map(field => field.label);\n  cy.log(labels.join(', '));\n  cy.get('[data-testid=\"buformeditor-listitemtext-ofe56xosa\"]').contains(\"System Fields\");\n  labels.forEach(label => {\n    cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input[placeholder=\"Search...\"]').clear({\n      force: true\n    }).type(label, {\n      force: true\n    });\n    cy.get('[data-testid=\"propertylist-listitemtext-esgc2itka\"]').first().should('have.text', label);\n    cy.get('[data-testid=\"propertylist-checkbox-9qc6i0a6w\"] input').should('have.attr', 'disabled');\n    // .and('have.attr', 'checked');\n  });\n});",
              "err": {},
              "uuid": "73e2fbe5-3a88-483d-84e3-ef5ce9ce80c2",
              "parentUUID": "f035e068-ad3f-44d5-8f21-bfe2e9527f2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the System field should be checkable or uncheckable on form config",
              "fullTitle": "Navigate on field config page Verify the System field should be checkable or uncheckable on form config",
              "timedOut": null,
              "duration": 10940,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait('@fieldConfig').then(interception => {\n  const responseBody = interception.response.body;\n  const values = responseBody.result.values;\n  const filteredFields = values.filter(field => field.system);\n  const labels = filteredFields.map(field => field.label);\n  cy.log(labels.join(', '));\n  cy.get('[data-testid=\"buformeditor-listitemtext-ofe56xosa\"]').contains(\"System Fields\");\n  labels.forEach(label => {\n    cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input[placeholder=\"Search...\"]').clear({\n      force: true\n    }).type(label, {\n      force: true\n    });\n    cy.get('[data-testid=\"propertylist-listitemtext-esgc2itka\"]').first().should('have.text', label);\n    cy.get('[data-testid=\"propertylist-checkbox-9qc6i0a6w\"] input').then($input => {\n      if ($input.is(':checked')) {\n        cy.wrap($input).uncheck({\n          force: true\n        });\n      } else {\n        cy.wrap($input).check({\n          force: true\n        });\n      }\n    });\n  });\n});",
              "err": {},
              "uuid": "6a3894b6-1fef-4df3-8694-6cd024e2265c",
              "parentUUID": "f035e068-ad3f-44d5-8f21-bfe2e9527f2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select property and Make required and remove required and de-select property ",
              "fullTitle": "Navigate on field config page Select property and Make required and remove required and de-select property ",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "//Check field from field config, make required and add on form config\ncy.wait(\"@fieldConfig\").then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(item => item.system === false).slice(-1);\n  let fieldId = fieldData[0].id.toString();\n  let fieldName = fieldData[0].label.toString();\n  cy.get('.MuiFormControl-root [placeholder=\"Search...\"]').type(fieldName);\n  cy.get(':nth-child(1) > .MuiListItem-root > .MuiFormControlLabel-root input').check();\n  cy.get(`[data-rbd-droppable-id=\"column\"]`).children(`[data-rbd-draggable-id=${fieldId}]`).contains(fieldName);\n});\n// cy.get(':nth-child(1) > .MuiListItem-root > .MuiFormControlLabel-root input').check()\n// cy.get('.MuiGrid-item > :last')\n// cy.get('.MuiFormControl-root [placeholder=\"Search...\"]')\n// .type(Cypress.env(\"fieldName\"))\n// cy.get('input[name=\"checkedB\"]').check(fieldName)\n// cy.get('[data-rbd-droppable-id=\"column\"]').find('[type=\"checkbox\"]').last().check()\n// cy.get(lead.typeBtn).contains(\"Apply\").click()\n// cy.get('#create-lead .MuiFormControl-root label').contains(Cypress.env(\"fieldName\"))\n// cy.get(`#create-lead .MuiFormControl-root [placeholder='Enter ${Cypress.env(\"fieldName\")}']`).\n//     should(\"have.attr\", \"required\")\n// //uncheck the field from field config\n// cy.get(lead.typeBtn).contains(\"Add fields\").click()\n// cy.get('[data-rbd-droppable-id=\"column\"]').find('[type=\"checkbox\"]').last().uncheck()\n// cy.get('.MuiFormControl-root [placeholder=\"Search...\"]').type(Cypress.env(\"fieldName\"))\n// cy.get('input[name=\"checkedB\"]').uncheck()\n// cy.get(lead.typeBtn).contains(\"Apply\").click()",
              "err": {},
              "uuid": "c29aecd4-d20f-4a4b-b693-e50051619696",
              "parentUUID": "f035e068-ad3f-44d5-8f21-bfe2e9527f2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d881a3d4-db9d-409b-ada4-005a8b73e086",
            "73e2fbe5-3a88-483d-84e3-ef5ce9ce80c2",
            "6a3894b6-1fef-4df3-8694-6cd024e2265c"
          ],
          "failures": [],
          "pending": [
            "c29aecd4-d20f-4a4b-b693-e50051619696"
          ],
          "skipped": [],
          "duration": 33471,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f7caad30-7999-4936-a31a-4b805656588a",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8e3c0002-b4aa-4f48-93c8-91b7dd127361",
          "title": "Nevigate the lead page and create new fields",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create single line text field",
              "fullTitle": "Nevigate the lead page and create new fields Create single line text field",
              "timedOut": null,
              "duration": 26024,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let stringField = `String-${new Date().valueOf()}`;\ncy.get(lead.inputField).should(\"have.value\", \"Single line text\");\ncy.wait(\"@groupList\").then(({\n  response\n}) => {\n  let privateGroup = response.body.result.values.filter(ele => ele.scope == \"private\");\n  cy.get(`input[name=\"Select Group\"]`).should(\"have.value\", privateGroup[0].label);\n});\n(0, _field.labelNplaceholder)(stringField, `Enter ${stringField}`);\n(0, _global.butextField)(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${_globalSel.default.butextfield}`, \"input\").type(3); // set min\n(0, _global.butextField)(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${_globalSel.default.butextfield}`, \"input\").type(30); // set max\n(0, _field.textCaseFormat)();\n(0, _field.preview)(stringField, `Enter ${stringField}`);\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.created);",
              "err": {},
              "uuid": "7c1bd5eb-3809-4ff7-aecb-96e524326b08",
              "parentUUID": "8e3c0002-b4aa-4f48-93c8-91b7dd127361",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create dropdown field",
              "fullTitle": "Nevigate the lead page and create new fields Create dropdown field",
              "timedOut": null,
              "duration": 25968,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dropdownField = `Dropdown-${new Date().valueOf()}`;\n(0, _global.budropdownInput)(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Dropdown\", _globalSel.default.dialogTitleText);\ncy.wait(\"@groupList\").then(({\n  response\n}) => {\n  let publicGroup = response.body.result.values.filter(ele => ele.scope == \"public\");\n  cy.get(`input[name=\"Select Group\"]`).click();\n  cy.get(lead.chooseOptions).contains(publicGroup[0].label).click();\n});\n(0, _field.labelNplaceholder)(dropdownField, `Enter ${dropdownField}`);\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"] input`).should(\"have.value\", \"Option 1\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get('[data-testid=\"optionslist-textfield-ud6koj7f1\"] input').eq(1).should(\"have.value\", \"Option 2\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get('[data-testid=\"optionslist-textfield-ud6koj7f1\"] input').eq(2).should(\"have.value\", \"Option 3\");\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.created);",
              "err": {},
              "uuid": "5cc5e30a-8645-4926-b9c6-6a015d4eb2ea",
              "parentUUID": "8e3c0002-b4aa-4f48-93c8-91b7dd127361",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c1bd5eb-3809-4ff7-aecb-96e524326b08",
            "5cc5e30a-8645-4926-b9c6-6a015d4eb2ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 51992,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d44be9db-cdd4-4528-bea5-165ba74d3f12",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1692c37f-c503-4665-acf1-283db3de69ec",
          "title": "Test the functionality of attach field",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach field",
              "fullTitle": "Test the functionality of attach field Attach field",
              "timedOut": null,
              "duration": 21757,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"Attach field\"]').should(\"have.text\", \"Attach field\").click();\ncy.wait(500);\ncy.get(`[data-testid=\"title-dialog\"] p`).contains(\"Attach field\");\n// cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').last().type(\"jddnn\")\ncy.wait(\"@availableField\").then(({\n  response\n}) => {\n  if (response.body.result.values.length == 0) {\n    cy.log(\"Fields are not available for attach\");\n    cy.get('#cancel').click();\n  } else {\n    let field = response.body.result.values.map(ele => ele.label);\n    cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').last().type(field[0]);\n    // cy.get('.MuiDialog-container .MuiDialogContent-root > :last [placeholder=\"Search...\"]')\n    cy.wait(200);\n    cy.get('[data-testid=\"attachfields-collapse-uvsmqfw9l\"] [data-testid=\"propertylist-listitemtext-esgc2itka\"]').contains(field[0]).click();\n    cy.get('#attach').click();\n    cy.wait(500);\n    cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').type(field[0]);\n    cy.get('[data-testid=\"propertylist-box-k4wxytcqz\"] [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').last().should(\"have.text\", field[0]);\n    cy.get('[data-testid=\"propertylist-box-k4wxytcqz\"] input').last().should(\"be.checked\");\n  }\n});\ncy.get('[data-testid=\"close-dialog\"]').click();\ncy.get('[data-testid=\"title-dialog\"] p').eq(1).contains(\"Warning\");\ncy.get('[data-testid=\"buformeditor-typography-3mxztjea3\"]');\ncy.get('[data-testid=\"Confirm\"]').click();",
              "err": {},
              "uuid": "aeca22a9-0fe4-42a5-809e-218fc6e30c34",
              "parentUUID": "1692c37f-c503-4665-acf1-283db3de69ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aeca22a9-0fe4-42a5-809e-218fc6e30c34"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21757,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ae8a1f08-30f8-48ba-912a-67df52794b14",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d73818a1-bd2f-44b1-93b7-03b4f9408bcc",
          "title": "Nevigate the lead page and Update fields",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Edit Single line text field",
              "fullTitle": "Nevigate the lead page and Update fields Edit Single line text field",
              "timedOut": null,
              "duration": 35690,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let singleField = `Single line-${new Date().valueOf()}`;\ncy.wait(\"@fieldList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(ele => ele.required == false && ele.system == false && ele.prop == \"str\").slice(-1);\n  cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input').type(fieldData[0].label);\n  cy.get('[data-testid=\"actions-iconbutton-4zbo8fvnl\"]').first().click();\n  cy.get('[data-testid=\"actions-box-qexr9sum4\"]').contains('Edit').click({\n    force: true\n  });\n  cy.get('[data-testid=\"input-muiinput-t8mkcx347\"] input[name=\"Select Field Type\"]').should(\"have.value\", \"Single line text\");\n  // Field label and Placeholder\n  (0, _field.labelNplaceholder)(singleField, `Enter ${singleField}`);\n  // Min and Max\n  cy.get('[data-testid=\"withtitle-box-mp6w6v7ka\"] label').contains(\"Min Length\").next().clear().type(faker.number.int({\n    min: 3,\n    max: 9\n  }));\n  cy.get('[data-testid=\"withtitle-box-mp6w6v7ka\"] label').contains(\"Max Length\").next().clear().type(faker.number.int({\n    min: 15,\n    max: 100\n  }));\n  // Text Case\n  (0, _field.textCaseFormat)();\n  // Preview\n  cy.get('#single_text_field-label').should(\"have.text\", singleField);\n  cy.get('#single_text_field').should(\"have.attr\", \"placeholder\", `Enter ${singleField}`);\n});\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.updated);",
              "err": {
                "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `.MuiSnackbarContent-message`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `.MuiSnackbarContent-message`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/2_fields/editFields.js:43:66)",
                "diff": null
              },
              "uuid": "7cf76660-477d-468b-8828-4c248ae9058f",
              "parentUUID": "d73818a1-bd2f-44b1-93b7-03b4f9408bcc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit dropdown field",
              "fullTitle": "Nevigate the lead page and Update fields Edit dropdown field",
              "timedOut": null,
              "duration": 29937,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let basField = `Dropdown-${new Date().valueOf()}`;\ncy.wait(500);\ncy.wait(\"@fieldList\").then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(ele => ele.required == false && ele.system == false && ele.prop == \"bas\").slice(-1);\n  // cy.log(\"fieldData\", JSON.stringify(fieldData[0].label))\n  cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input').type(fieldData[0].label);\n  cy.get('[data-testid=\"actions-iconbutton-4zbo8fvnl\"]').first().click();\n  cy.get('[data-testid=\"actions-box-qexr9sum4\"]').contains('Edit').click({\n    force: true\n  });\n  cy.get('[data-testid=\"input-muiinput-t8mkcx347\"] input[name=\"Select Field Type\"]').should(\"have.value\", \"Dropdown\").and(\"have.prop\", \"disabled\");\n  (0, _field.labelNplaceholder)(basField, `Enter ${basField}`);\n});\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"]`).first().clear().type(\"Edited Option 1\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"]`).last().clear().type(`Option-${new Date().valueOf()}`);\ncy.get('[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"] input[value=\"multi\"]').then($ele => {\n  if ($ele.is(':disabled')) {\n    cy.log(\"Multi-selection option type can't be edit\");\n  } else {\n    cy.get('[value=\"single\"]').click();\n    cy.get('[value=\"multi\"]').click();\n  }\n});\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.updated);",
              "err": {},
              "uuid": "fc87c8f0-f302-4406-9f45-0cffda5db4d7",
              "parentUUID": "d73818a1-bd2f-44b1-93b7-03b4f9408bcc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc87c8f0-f302-4406-9f45-0cffda5db4d7"
          ],
          "failures": [
            "7cf76660-477d-468b-8828-4c248ae9058f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 65627,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b7a30045-0f6b-4946-b145-7beddcbfea84",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ca610bce-78bc-4aa1-ae8e-1150798b0e02",
          "title": "Nevigate the lead page and Create Lead",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "485aab5a-c1d2-4672-9015-ceed24fae945",
              "title": "Create record",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create record with \"str\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"str\" field",
                  "timedOut": null,
                  "duration": 23838,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"str\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "c006d313-9a35-4e78-9555-b100db548335",
                  "parentUUID": "485aab5a-c1d2-4672-9015-ceed24fae945",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"phn\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"phn\" field",
                  "timedOut": null,
                  "duration": 12264,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"phn\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "80f84250-8eeb-4318-aa74-2140aeda428b",
                  "parentUUID": "485aab5a-c1d2-4672-9015-ceed24fae945",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"num\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"num\" field",
                  "timedOut": null,
                  "duration": 11975,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"num\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "e6e66773-e3d2-4239-86a9-3ca8a77320cb",
                  "parentUUID": "485aab5a-c1d2-4672-9015-ceed24fae945",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"txa\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"txa\" field",
                  "timedOut": null,
                  "duration": 15682,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"txa\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "869ab531-42f4-490b-920e-280d60fa41f4",
                  "parentUUID": "485aab5a-c1d2-4672-9015-ceed24fae945",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"eml\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"eml\" field",
                  "timedOut": null,
                  "duration": 15360,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"eml\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "eb020fa3-d2aa-4426-9b7a-7479459fd8fb",
                  "parentUUID": "485aab5a-c1d2-4672-9015-ceed24fae945",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"url\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"url\" field",
                  "timedOut": null,
                  "duration": 12234,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"url\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "b29850a4-1030-4e95-9e63-9f8334388d0e",
                  "parentUUID": "485aab5a-c1d2-4672-9015-ceed24fae945",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"bas\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"bas\" field",
                  "timedOut": null,
                  "duration": 13134,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"bas\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "b3a96049-b9e9-463d-8b8a-63f1b88ed532",
                  "parentUUID": "485aab5a-c1d2-4672-9015-ceed24fae945",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"dsrc\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"dsrc\" field",
                  "timedOut": null,
                  "duration": 14584,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"dsrc\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "ae84f13a-9264-46e0-8d80-7aaccd0bdf1e",
                  "parentUUID": "485aab5a-c1d2-4672-9015-ceed24fae945",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"asc\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"asc\" field",
                  "timedOut": null,
                  "duration": 16733,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"asc\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "00e7c044-7a26-4959-9428-89c2e7bb9494",
                  "parentUUID": "485aab5a-c1d2-4672-9015-ceed24fae945",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"rad\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"rad\" field",
                  "timedOut": null,
                  "duration": 13196,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"rad\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "1d18359d-d078-4095-bbc2-d6b39d8a896b",
                  "parentUUID": "485aab5a-c1d2-4672-9015-ceed24fae945",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"chk\" fields",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"chk\" fields",
                  "timedOut": null,
                  "duration": 13419,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"chk\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "3eeb83e5-8014-4556-b3f2-7ff33367f1a9",
                  "parentUUID": "485aab5a-c1d2-4672-9015-ceed24fae945",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c006d313-9a35-4e78-9555-b100db548335",
                "80f84250-8eeb-4318-aa74-2140aeda428b",
                "e6e66773-e3d2-4239-86a9-3ca8a77320cb",
                "869ab531-42f4-490b-920e-280d60fa41f4",
                "eb020fa3-d2aa-4426-9b7a-7479459fd8fb",
                "b29850a4-1030-4e95-9e63-9f8334388d0e",
                "b3a96049-b9e9-463d-8b8a-63f1b88ed532",
                "ae84f13a-9264-46e0-8d80-7aaccd0bdf1e",
                "00e7c044-7a26-4959-9428-89c2e7bb9494",
                "1d18359d-d078-4095-bbc2-d6b39d8a896b",
                "3eeb83e5-8014-4556-b3f2-7ff33367f1a9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 162419,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c00405da-7918-40a6-9e87-a4d88e09a242",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1f599463-18e1-4e32-b7a6-9353abab32a7",
          "title": "Nevigate on lead asset page and edit record",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Edit record with single line text field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with single line text field",
              "timedOut": null,
              "duration": 27141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"str\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "92c42e1d-c5f5-4cc6-a7cc-379c9b79b9be",
              "parentUUID": "1f599463-18e1-4e32-b7a6-9353abab32a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with multi line text field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with multi line text field",
              "timedOut": null,
              "duration": 16819,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"txa\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "095f3268-3a01-4c59-a47b-9971096ad367",
              "parentUUID": "1f599463-18e1-4e32-b7a6-9353abab32a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with email field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with email field",
              "timedOut": null,
              "duration": 12478,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"eml\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "22cbfc65-61fb-4cce-b066-a97651e0edfd",
              "parentUUID": "1f599463-18e1-4e32-b7a6-9353abab32a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with number field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with number field",
              "timedOut": null,
              "duration": 11275,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"num\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "71e8ef27-bd52-4415-9579-97242f4980f2",
              "parentUUID": "1f599463-18e1-4e32-b7a6-9353abab32a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with url field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with url field",
              "timedOut": null,
              "duration": 13714,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"url\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "7f87966d-55c1-4815-9b61-015582b20b16",
              "parentUUID": "1f599463-18e1-4e32-b7a6-9353abab32a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with phn field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with phn field",
              "timedOut": null,
              "duration": 11402,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"phn\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "2db68fa0-b360-434a-a75b-c05d2efe1f99",
              "parentUUID": "1f599463-18e1-4e32-b7a6-9353abab32a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with simple dropdown field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with simple dropdown field",
              "timedOut": null,
              "duration": 12097,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"bas\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "a4f6aca4-0de8-4912-86f6-67219f8e8e5c",
              "parentUUID": "1f599463-18e1-4e32-b7a6-9353abab32a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with checkbox field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with checkbox field",
              "timedOut": null,
              "duration": 12045,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"chk\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "68fab1e6-967b-4102-898e-2fc5e57a959c",
              "parentUUID": "1f599463-18e1-4e32-b7a6-9353abab32a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with radio field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with radio field",
              "timedOut": null,
              "duration": 12715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"rad\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "2492c1ff-556c-46d8-8ade-0c53cd2f894f",
              "parentUUID": "1f599463-18e1-4e32-b7a6-9353abab32a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with data source field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with data source field",
              "timedOut": null,
              "duration": 13880,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"dsrc\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "6ec00fe2-4ffc-4e5f-8fbd-50cd0b08e6aa",
              "parentUUID": "1f599463-18e1-4e32-b7a6-9353abab32a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92c42e1d-c5f5-4cc6-a7cc-379c9b79b9be",
            "095f3268-3a01-4c59-a47b-9971096ad367",
            "22cbfc65-61fb-4cce-b066-a97651e0edfd",
            "71e8ef27-bd52-4415-9579-97242f4980f2",
            "7f87966d-55c1-4815-9b61-015582b20b16",
            "2db68fa0-b360-434a-a75b-c05d2efe1f99",
            "a4f6aca4-0de8-4912-86f6-67219f8e8e5c",
            "68fab1e6-967b-4102-898e-2fc5e57a959c",
            "2492c1ff-556c-46d8-8ade-0c53cd2f894f",
            "6ec00fe2-4ffc-4e5f-8fbd-50cd0b08e6aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 143566,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "96be8a80-d4fc-445d-9b66-00a2abb648a3",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "34bdd0c9-2f05-40b6-b86a-a0f5a15d42f1",
          "title": "Test the functionality of follow up",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create follow-up for record",
              "fullTitle": "Test the functionality of follow up Create follow-up for record",
              "timedOut": null,
              "duration": 20876,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cyGet(`[data-testid=\"followup-typography-buacu26k2\"]`).should(\"contain.text\", \"Follow-up date\")\ncy.wait(\"@followupStatus\", {\n  timeout: 30000\n}).then(({\n  response\n}) => {\n  var _response$body$result;\n  twosecondWait();\n  const followStatus = (_response$body$result = response.body.result) === null || _response$body$result === void 0 ? void 0 : _response$body$result.status;\n  cyGet(`[data-testid=\"followup-iconbutton-4twf9rpig\"]`).click();\n  if (followStatus === \"pending\") {\n    inputRemark();\n    cy.reload();\n    createNewFollowUP();\n  } else {\n    createNewFollowUP();\n  }\n});",
              "err": {},
              "uuid": "cb3b4469-5718-401b-a3fb-e64d70e5d78a",
              "parentUUID": "34bdd0c9-2f05-40b6-b86a-a0f5a15d42f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify folow up created or not",
              "fullTitle": "Test the functionality of follow up Verify folow up created or not",
              "timedOut": null,
              "duration": 7890,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[aria-label=\"Follow Up\"]`).click();\ncy.wait(\"@getFollowup\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const followupDetail = response.body.result.values[0];\n  const formattedScheduledOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.scheduledOn).format(\"DD MMM YYYY, h:mm A\");\n  const formattedCreatedOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.createdOn).format(\"DD MMM YYYY, h:mm A\");\n  cyGet(`#tool-container [data-testid=\"followuplist-box-ans7d4l18\"] h6`).should(\"contain.text\", \"Follow-up History\");\n  cyGet(`#tool-container [data-testid=\"followuplist-typography-rweu6rcqo\"]`).should(\"contain.text\", \"Scheduled on: \");\n  cyGet(`#tool-container [data-testid=\"followuplist-typography-rweu6rcqo\"]`).should(\"contain.text\", formattedScheduledOn);\n  cyGet(`#tool-container [data-testid=\"followuplist-typography-66kydwtv0\"]`).should(\"contain.text\", formattedCreatedOn);\n});",
              "err": {},
              "uuid": "9fbde99c-4a10-4792-9459-700362bdaa2d",
              "parentUUID": "34bdd0c9-2f05-40b6-b86a-a0f5a15d42f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remark follow Up",
              "fullTitle": "Test the functionality of follow up Remark follow Up",
              "timedOut": null,
              "duration": 9021,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[data-testid=\"followup-iconbutton-4twf9rpig\"]`).click();\ninputRemark();",
              "err": {},
              "uuid": "a32ea84f-6514-45fd-b625-5255b3fa069f",
              "parentUUID": "34bdd0c9-2f05-40b6-b86a-a0f5a15d42f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify follow up after remark",
              "fullTitle": "Test the functionality of follow up verify follow up after remark",
              "timedOut": null,
              "duration": 6377,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[aria-label=\"Follow Up\"]`).click();\ncy.wait(\"@getFollowup\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const followupDetail = response.body.result.values[0];\n  const formattedScheduledOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.scheduledOn).format(\"DD MMM YYYY, h:mm A\");\n  const formattedCreatedOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.createdOn).format(\"DD MMM YYYY, h:mm A\");\n  const formattedfollowedUpOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.followedUpOn).format(\"DD MMM YYYY, h:mm A\");\n  validateFollowup(`[data-testid=\"followuplist-typography-uvdjc7jp2\"]`, \"Scheduled on\");\n  validateFollowup(`[data-testid=\"followuplist-typography-2uwam0ib5\"]`, formattedScheduledOn);\n  validateFollowup(`[data-testid=\"followuplist-typography-mbqzjmh26\"]`, \"Followed up on\");\n  validateFollowup(`[data-testid=\"followuplist-typography-oaxl04km4\"]`, formattedfollowedUpOn);\n  validateFollowup(`[data-testid=\"followuplist-typography-9p4iy3xy5\"]`, \"Creation date\");\n  validateFollowup(`[data-testid=\"followuplist-typography-j73cs8h41\"]`, formattedCreatedOn);\n});",
              "err": {},
              "uuid": "5361667c-6c8d-4930-9393-f36516444a7b",
              "parentUUID": "34bdd0c9-2f05-40b6-b86a-a0f5a15d42f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cb3b4469-5718-401b-a3fb-e64d70e5d78a",
            "9fbde99c-4a10-4792-9459-700362bdaa2d",
            "a32ea84f-6514-45fd-b625-5255b3fa069f",
            "5361667c-6c8d-4930-9393-f36516444a7b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 44164,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "803a6951-5641-4cf3-b427-cb28a8483b4d",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "21fce346-010b-4d64-90ac-63c7b218334e",
          "title": "Visit the import page and import record",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Ensure the asset box is available for import on the Import page.",
              "fullTitle": "Visit the import page and import record Ensure the asset box is available for import on the Import page.",
              "timedOut": null,
              "duration": 11795,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getAsset\", {\n  timeout: 15000\n}).then(({\n  response\n}) => {\n  var _response$body;\n  const assetData = response === null || response === void 0 || (_response$body = response.body) === null || _response$body === void 0 || (_response$body = _response$body.result) === null || _response$body === void 0 ? void 0 : _response$body.find(ast => ast.id === asset);\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains(assetData === null || assetData === void 0 ? void 0 : assetData.label).next().should(\"contain.text\", assetDescription(asset));\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains(assetData === null || assetData === void 0 ? void 0 : assetData.label).parent().find(`button [aria-label=\"Select pipeline\"]`);\n});",
              "err": {},
              "uuid": "17016d15-b7b4-4194-a829-57f642747ad4",
              "parentUUID": "21fce346-010b-4d64-90ac-63c7b218334e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ensure the Import button is disabled until a pipeline is selected.",
              "fullTitle": "Visit the import page and import record Ensure the Import button is disabled until a pipeline is selected.",
              "timedOut": null,
              "duration": 3605,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getAsset\", {\n  timeout: 15000\n}).then(({\n  response\n}) => {\n  var _response$body2;\n  const assetData = response === null || response === void 0 || (_response$body2 = response.body) === null || _response$body2 === void 0 || (_response$body2 = _response$body2.result) === null || _response$body2 === void 0 ? void 0 : _response$body2.find(ast => ast.id === asset);\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains(assetData === null || assetData === void 0 ? void 0 : assetData.label).parent().find(`button [aria-label=\"Select pipeline\"]`).should(\"contain.text\", \"Select pipeline\");\n  cyGet(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).should(\"be.disabled\");\n});",
              "err": {},
              "uuid": "96d1909e-6ee6-43ca-b14d-7bbbf4bb8572",
              "parentUUID": "21fce346-010b-4d64-90ac-63c7b218334e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Download sample spreadsheet",
              "fullTitle": "Visit the import page and import record Download sample spreadsheet",
              "timedOut": null,
              "duration": 5982,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getAsset\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _response$body3;\n  const assetData = response === null || response === void 0 || (_response$body3 = response.body) === null || _response$body3 === void 0 || (_response$body3 = _response$body3.result) === null || _response$body3 === void 0 ? void 0 : _response$body3.find(ast => ast.id === asset);\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains(assetData === null || assetData === void 0 ? void 0 : assetData.label).parent().find(`button [aria-label=\"Select pipeline\"]`).click();\n  cy.wait(\"@getPipeline\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const totalPipelines = response.body.result.pages.totalRecords;\n    const pipelineLabel = response.body.result.values.slice(0, 1).map(pip => pip.label);\n    cy.log(JSON.stringify(pipelineLabel));\n    if (totalPipelines > 5) {\n      buSearchbox(globalSel.search, pipelineLabel[0]);\n    }\n    budropdownOption(pipelineLabel[0]).first().click();\n    cyGet(`[data-testid=\"download\"]`).contains(\"Download sample spreadsheet\").click();\n    cyGet(`[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`).contains(\"Download sample spreadsheet\");\n    cyGet(`[data-testid=\"downloaddrawer-typography-9qmfph90r\"]`).contains(\"Sample import files\");\n    cyGet(`[data-testid=\"downloaddrawer-typography-j1aqze5i1\"]`).contains(\"This sample file shows the required column headers you need for your import file\");\n    cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`)\n    // .first()\n    .find(`[data-testid=\"downloaddrawer-box-yv4v1mdli\"] [data-testid=\"downloaddrawer-typography-lysrpjimb\"]`).contains(assetData === null || assetData === void 0 ? void 0 : assetData.label);\n    cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`).first().find(`[data-testid=\"downloaddrawer-b-ft7iumddc\"]`).contains(pipelineLabel[0]);\n    cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`).first().find(`[data-testid=\"downloaddrawer-typography-xj4o496p9\"]`).contains(\"CSV\");\n  });\n  // cyGet(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).should(\"be.disabled\")\n});",
              "err": {},
              "uuid": "9e21d964-e75f-4c9e-9867-c2859c58ccaf",
              "parentUUID": "21fce346-010b-4d64-90ac-63c7b218334e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Import file and generate record",
              "fullTitle": "Visit the import page and import record Import file and generate record",
              "timedOut": null,
              "duration": 16192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getAsset\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _response$body4;\n  const assetData = response === null || response === void 0 || (_response$body4 = response.body) === null || _response$body4 === void 0 || (_response$body4 = _response$body4.result) === null || _response$body4 === void 0 ? void 0 : _response$body4.find(ast => ast.id === asset);\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains(assetData === null || assetData === void 0 ? void 0 : assetData.label).parent().find(`button [aria-label=\"Select pipeline\"]`).click();\n  cy.wait(\"@getPipeline\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const totalPipelines = response.body.result.pages.totalRecords;\n    const pipelineLabel = response.body.result.values.slice(0, 1).map(pip => pip.label);\n    const fileName = getFileForAsset(asset, pipelineLabel[0]);\n    cy.log(JSON.stringify(pipelineLabel));\n    if (totalPipelines > 5) {\n      buSearchbox(globalSel.search, pipelineLabel[0]);\n    }\n    budropdownOption(pipelineLabel[0]).first().click({\n      force: true\n    });\n    cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains(assetData === null || assetData === void 0 ? void 0 : assetData.label).parent().find(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).click();\n    cyGet(`[data-testid=\"uploadfile-input-r5bkv246o\"]`).selectFile(fileName, {\n      force: true\n    });\n    twosecondWait();\n    cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n    twosecondWait();\n    cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n    cyGet(`#fileName-label`).should(\"contain.text\", \"Import file name\");\n    // cyGet(`input[placeholder=\"Enter file name\"]`).should(\"have.value\", fileName)\n    cy.wait(\"@requiredProps\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const requiredFields = response.body.result.values.filter(ele => ele.required === true);\n      if (requiredFields.length > 0) {\n        propwiseFields(requiredFields);\n      }\n    });\n    cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n    cyGet(`[data-testid=\"importcommit-box-8kavef2af\"] > button`).contains(\"Confirm import\").click();\n  });\n});",
              "err": {},
              "uuid": "e71284df-d271-4dd4-b942-d5e8af67a4c6",
              "parentUUID": "21fce346-010b-4d64-90ac-63c7b218334e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "17016d15-b7b4-4194-a829-57f642747ad4",
            "96d1909e-6ee6-43ca-b14d-7bbbf4bb8572",
            "9e21d964-e75f-4c9e-9867-c2859c58ccaf",
            "e71284df-d271-4dd4-b942-d5e8af67a4c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 37574,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "24ebe9b9-108f-454d-a6e9-f1783ad375a1",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e77328b6-d1d4-459f-a680-e5261024f4fb",
          "title": "Test the functionality of Activity log",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Activity log of update record",
              "fullTitle": "Test the functionality of Activity log Activity log of update record",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "// cy.get('table > tbody > :nth-child(1)').click()\ncy.wait(1000);\ncy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").clear();\ncy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").type(faker.string.numeric(10));\ncy.get(lead.typeBtn).contains(\"Save\").click();\ncy.wait(1000);\ncy.get('[aria-label=\"Activities\"] > .MuiButtonBase-root').click();\ncy.get('.MuiTooltip-tooltip').should(\"have.text\", \"Activities\");\ncy.wait(\"@activity\").then(({\n  response\n}) => {\n  // let preValue = response.body.result.values[0].prev\n  let curValue = response.body.result.values[0].currentValue;\n  // let previousValue = preValue.toString()\n  let currentValue = `${curValue} `.toString();\n  // let userIdKey = Object.keys(response.body.result.users)\n  // cy.get(`${lead.chooseOptions} > :first`).find(\"aria-label\",previousValue).should(\"have.text\", previousValue)\n  // cy.get(`.ReactVirtualized__Grid__innerScrollContainer [aria-label=${previousValue}]`).should(\"have.text\", previousValue)\n  cy.get(`.ReactVirtualized__Grid__innerScrollContainer [aria-label=${currentValue}]`).should(\"have.text\", currentValue);\n});",
              "err": {},
              "uuid": "6644ad90-7216-4bb9-b0b6-7cb357ed9647",
              "parentUUID": "e77328b6-d1d4-459f-a680-e5261024f4fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "6644ad90-7216-4bb9-b0b6-7cb357ed9647"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "00f9d630-6a49-4d9d-aef8-b772503a3bd9",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "663e3662-4118-4637-985c-e650c8dede9e",
          "title": "Navigate on lead and test Export functoinality",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check the behavior of the Export button based on the total number of records in a pipeline",
              "fullTitle": "Navigate on lead and test Export functoinality Check the behavior of the Export button based on the total number of records in a pipeline",
              "timedOut": null,
              "duration": 14165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click()\n// cyGet(`[data-testid=\"title-dialog\"] p`).should(\"contain.text\", \"Export\");\n// cy.wait(\"@appAuth\", { timeout: 10000 }).then(({ response }) => {\n//     email = response.body.result.user.email;\n//     role = response.body.result.user.role;\n// const userRole = response.body.result.user.email;\ncy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const accessToExport = response.body.result.tools.export;\n  if (role === \"std\" && !accessToExport) {\n    cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n  } else {\n    cy.wait(\"@recordGrid\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalRecord = response.body.result.pages.totalRecords;\n      cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n      cyGet(`[data-testid=\"title-dialog\"] p`).should(\"contain.text\", \"Export\");\n      cyGet(`[data-testid=\"exportactor-typography-7vhpyacm5\"]`).contains(`Once exported, the file will be sent to ${email} and you will be notified.`);\n      cyGet(`[data-testid=\"exportactor-typography-awnrepr3p\"]`).contains(`Total number of records after all filters are applied:${totalRecord}`);\n      const total = Number(totalRecord);\n      cyGet('[role=\"dialog\"] [data-testid=\"Export\"]').should(total === 0 || total > 10000 ? 'be.disabled' : 'not.be.disabled');\n    });\n  }\n  ;\n});\n// });",
              "err": {},
              "uuid": "f8461d21-49e8-4aa0-bf20-21f8eda86e21",
              "parentUUID": "663e3662-4118-4637-985c-e650c8dede9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Export records based on the creation date range filter selected on the export page",
              "fullTitle": "Navigate on lead and test Export functoinality Export records based on the creation date range filter selected on the export page",
              "timedOut": null,
              "duration": 10871,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (role === \"std\" && !accessToExport) {\n  cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n} else {\n  cy.wait(\"@recordGrid\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const totalRecord = response.body.result.pages.totalRecords;\n    cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n    cyGet(`[data-testid=\"exportactor-typography-awnrepr3p\"]`).contains(`Total number of records after all filters are applied:${totalRecord}`);\n    cy.get('[data-testid=\"exportactor-grid-zywx8bilv\"] [data-testid=\"budate-iconbutton-v63dt06ut\"]').click();\n    cy.get('[aria-label=\"Previous month\"]').click();\n    cy.get('[role=\"row\"]').contains(pastDay).click();\n    cyGet(`[name=\"File format\"]`).click();\n    budropdownOption(\"csv\").first().click();\n    cy.get('[data-testid=\"exportactor-grid-ti62k6zn2\"] [data-testid=\"budate-iconbutton-v63dt06ut\"]').click();\n    cy.get('[role=\"dialog\"] [role=\"row\"]').filter(':visible').contains((0, _moment.default)().date()).click();\n    cy.wait(\"@recordCount\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const recordToExport = response.body.result;\n      if (recordToExport > 0 && recordToExport < 10000) {\n        cyGet(`[role=\"dialog\"] [data-testid=\"Export\"]`).click();\n      } else {\n        throw new Error(`Record for Export:${recordToExport}`);\n      }\n    });\n    cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Export request submitted successfully. Please check your email address after sometime.\");\n  });\n}\n;",
              "err": {},
              "uuid": "d205e0c3-2cd0-4846-8100-3d7dc59ad029",
              "parentUUID": "663e3662-4118-4637-985c-e650c8dede9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter record and Export records",
              "fullTitle": "Navigate on lead and test Export functoinality Filter record and Export records",
              "timedOut": null,
              "duration": 10101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (role === \"std\" && !accessToExport) {\n  cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n} else {\n  cy.wait(\"@existsPipelines\", {\n    timeout: 10000\n  });\n  cyGet(`#filter`).click();\n  cy.wait(\"@filters\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const uidField = response.body.result.find(ele => ele.prop === \"uid\");\n    cyGet(`[placeholder=\"Search...\"]`).type(uidField.label);\n    onesecondWait();\n    cyGet(`[data-testid=\"filterheader-box-jox1agcx8\"] > [aria-label=\"${uidField.label}\"]`).click();\n    cyGet(`[data-testid=\"comparestringfilter-box-f914y6cfe\"] [placeholder=\"Add value...\"]`).type(1);\n    onesecondWait();\n    cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalRecord = response.body.result.pages.totalRecords;\n      if (totalRecord > 0 && totalRecord < 10000) {\n        cyGet(`[role=\"dialog\"] [data-testid=\"Export\"]`).click();\n      } else {\n        throw new Error(`Record for Export:${totalRecord}`);\n      }\n      cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Export request submitted successfully. Please check your email address after sometime.\");\n    });\n  });\n}\n;",
              "err": {},
              "uuid": "12e24804-8ae8-4520-bf24-230f87565588",
              "parentUUID": "663e3662-4118-4637-985c-e650c8dede9e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8461d21-49e8-4aa0-bf20-21f8eda86e21",
            "d205e0c3-2cd0-4846-8100-3d7dc59ad029",
            "12e24804-8ae8-4520-bf24-230f87565588"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35137,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a46c33a6-b9a5-4de7-8cbd-6cb9ed39364b",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a7f58bbc-2fb1-4152-98ba-3588f5ed0f58",
          "title": "Navigate on filter and test filter functoinality",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7668be51-8288-4fd2-8755-b3a7e32919f7",
              "title": "Apply filter on string-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Apply “contains” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “contains” filter",
                  "timedOut": null,
                  "duration": 16198,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues ? findFieldValues[stringBasedProp.id].substring(0, 3) : faker.string.alpha(3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Contains\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    if (response.body.result.values.length > 0) {\n      const filterdValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n      expect(filterdValues[0]).contains(firstThreeChars);\n      response.body.result.values.forEach(valueArray => {\n        // expect(valueArray[stringBasedProp.id]).to.contain(firstThreeChars);\n        const keys = Object.keys(valueArray);\n        const findKey = keys.find(ele => ele === stringBasedProp.id);\n        if (findKey) {\n          expect(valueArray[stringBasedProp.id]).to.contain(firstThreeChars);\n        } else {\n          expect(valueArray).has.not.property(stringBasedProp.id);\n        }\n      });\n    } else {\n      cy.log(response.body.result.values);\n    }\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `input[name='email']`, but never found it.\n\nThis error occurred while creating the session. Because the session setup failed, we failed the test.\n\nBecause this error occurred during a `before each` hook we are skipping all of the remaining tests.",
                    "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `input[name='email']`, but never found it.\n\nThis error occurred while creating the session. Because the session setup failed, we failed the test.\n\nBecause this error occurred during a `before each` hook we are skipping all of the remaining tests.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:3:47)\n    at Context.eval (webpack://bu-testing/./cypress/support/commands.js:18:10)\n    at wrapped (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:141663:43)",
                    "diff": null
                  },
                  "uuid": "6b586527-a520-4bb0-8e92-4c6dd5e164ca",
                  "parentUUID": "7668be51-8288-4fd2-8755-b3a7e32919f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Does not contains” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Does not contains” filter",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues ? findFieldValues[stringBasedProp.id].substring(0, 3) : faker.string.alpha(3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Does not contains\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      const keys = Object.keys(valueArray);\n      const findKey = keys.find(ele => ele === stringBasedProp.id);\n      if (findKey) {\n        expect(valueArray[stringBasedProp.id]).not.contain(firstThreeChars);\n      } else {\n        expect(valueArray).has.not.property(stringBasedProp.id);\n      }\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "249d8443-6aa0-414c-aca7-3f1c5a5ee926",
                  "parentUUID": "7668be51-8288-4fd2-8755-b3a7e32919f7",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Apply “Starts with” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Starts with” filter",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues ? findFieldValues[stringBasedProp.id].substring(0, 3) : faker.string.alpha(3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Starts with\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(value => {\n      const startingDigit = value[stringBasedProp.id].substring(0, 3);\n      expect(startingDigit).to.equal(firstThreeChars);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "45256b88-3503-4706-a6d2-796552a5bc08",
                  "parentUUID": "7668be51-8288-4fd2-8755-b3a7e32919f7",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Apply \"Ends with\" filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply \"Ends with\" filter",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const lastThreeChars = findFieldValues ? findFieldValues[stringBasedProp.id].slice(-3) : faker.string.alpha(3);\n  filterElements(stringBasedProp.label, lastThreeChars, \"Ends with\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(value => {\n      const keys = Object.keys(value);\n      const findKey = keys.find(ele => ele === stringBasedProp.id);\n      if (findKey) {\n        const lastDigits = value[stringBasedProp.id].slice(-3);\n        expect(lastDigits).to.equal(lastThreeChars);\n      } else {\n        expect(value).has.not.property(stringBasedProp.id);\n      }\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "f0fb9333-ca0f-415d-a11e-7bd487469b28",
                  "parentUUID": "7668be51-8288-4fd2-8755-b3a7e32919f7",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Apply “Equals” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Equals” filter",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const fieldvalue = findFieldValues[stringBasedProp.id];\n  filterElements(stringBasedProp.label, fieldvalue, \"Equals\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      expect(valueArray[stringBasedProp.id]).eq(fieldvalue);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "abf53a36-c0dc-4956-bfb4-9f1863690325",
                  "parentUUID": "7668be51-8288-4fd2-8755-b3a7e32919f7",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Apply “Does not equals” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Does not equals” filter",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const fieldvalue = findFieldValues[stringBasedProp.id];\n  filterElements(stringBasedProp.label, fieldvalue, \"Does not equals\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      expect(valueArray[stringBasedProp.id]).not.eq(fieldvalue);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "ef289143-4b79-4c91-898d-d64ace741cef",
                  "parentUUID": "7668be51-8288-4fd2-8755-b3a7e32919f7",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "6b586527-a520-4bb0-8e92-4c6dd5e164ca"
              ],
              "pending": [],
              "skipped": [
                "249d8443-6aa0-414c-aca7-3f1c5a5ee926",
                "45256b88-3503-4706-a6d2-796552a5bc08",
                "f0fb9333-ca0f-415d-a11e-7bd487469b28",
                "abf53a36-c0dc-4956-bfb4-9f1863690325",
                "ef289143-4b79-4c91-898d-d64ace741cef"
              ],
              "duration": 16198,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e228b777-611f-4e63-9910-820eb863e5e5",
              "title": "Apply filter on dropdown-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Apply  filter on stage",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on dropdown-based field to filter the records Apply  filter on stage",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "dropdownFilter(\"stg\", this);",
                  "err": {},
                  "uuid": "ffd0b0a4-dfc8-4222-acbc-ca4d5e04fd81",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "Apply  filter on owner",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on dropdown-based field to filter the records Apply  filter on owner",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "dropdownFilter(\"own\", this);",
                  "err": {},
                  "uuid": "b548a61d-af47-4507-adf8-9dd16a5c8b2f",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "ffd0b0a4-dfc8-4222-acbc-ca4d5e04fd81",
                "b548a61d-af47-4507-adf8-9dd16a5c8b2f"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e8cdb3e5-f5eb-490b-bb73-f4c84ff73bde",
              "title": "Apply filter on date&time-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Filter records based on the date & time field",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on date&time-based field to filter the records Filter records based on the date & time field",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.get('#filter').click();\ncy.wait(\"@filters\").then(({\n  response\n}) => {\n  let propDtm = response.body.result.filter(ele => ele.prop == \"dtm\");\n  cy.get(lead.searchInfilter).type(propDtm[0].label);\n  cy.wait(500);\n  cy.get(`span[aria-label=\"${propDtm[0].label}\"]`).click();\n});\ncy.get(lead.filerCaption).contains(\"Today till midnight\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 7 days\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 30 days\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 3 months\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Custom Date\").click();\ncy.get('.rdrMonthPicker > select').select(previousMonth); // Select previous month\ncy.get('.rdrDayStartOfMonth > .rdrDayNumber').click(); // Choose date of previous month\ncy.get('.rdrNextButton').click(); // Click on next button to move on current month\ncy.get('.rdrDayToday > .rdrDayNumber').click(); // Choose date of current month",
                  "err": {},
                  "uuid": "26e6518d-68d2-4d75-8775-eb5ce156305b",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "26e6518d-68d2-4d75-8775-eb5ce156305b"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c1a8f38c-b35d-4536-b96c-0afd0927378c",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "644a4e0e-7a51-4889-89ce-7fdd15c13767",
          "title": "Test the functionality of notes",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "save button should be disable without input notes",
              "fullTitle": "Test the functionality of notes save button should be disable without input notes",
              "timedOut": null,
              "duration": 17633,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[data-testid=\"notes-box-q3iecxru9\"] button`).contains(\"Create\").wait(2000).click({\n  force: true\n});\n// twosecondWait()\ncyGet(`#tool-container [data-testid=\"Save\"]`).contains(\"Save\").trigger('mouseover', {\n  force: true\n}).should(\"be.disabled\");\ncyGet('.MuiTooltip-tooltip').should(\"have.text\", \"There is some error in form.\");",
              "err": {},
              "uuid": "183bf6f0-e753-4586-9dca-dc2f81f604e9",
              "parentUUID": "644a4e0e-7a51-4889-89ce-7fdd15c13767",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a notes",
              "fullTitle": "Test the functionality of notes Add a notes",
              "timedOut": null,
              "duration": 12405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[data-testid=\"notes-box-q3iecxru9\"] button`).contains(\"Create\").wait(2000).click({\n  force: true\n});\ncyGet(\"[data-testid='bunotepad-box-8lxcermoa']\").type(faker.lorem.sentence());\ncyGet(`#tool-container [data-testid=\"Save\"]`).click();",
              "err": {},
              "uuid": "c037d5f0-adf0-461b-97ae-267e1026a65b",
              "parentUUID": "644a4e0e-7a51-4889-89ce-7fdd15c13767",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update notes",
              "fullTitle": "Test the functionality of notes Update notes",
              "timedOut": null,
              "duration": 27522,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const updateNote = faker.lorem.sentence();\ncyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(\"[data-testid='bunotepad-box-8lxcermoa']\").first().clear().type(updateNote);\ncy.wait(500);\ncyGet('[data-testid=\"buwrapper-iconbutton-s8exp1h26\"]').click();\ncyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n  force: true\n});\ncyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(updateNote);\ncyGet(`[data-testid=\"card-typography-8vfwf8lhh\"]`).should(\"contain.text\", updateNote);",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-testid=\"card-typography-8vfwf8lhh\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-testid=\"card-typography-8vfwf8lhh\"]`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/notes.js:40:59)",
                "diff": null
              },
              "uuid": "1ea79e73-e8f3-41c6-8c40-c81cfde972b2",
              "parentUUID": "644a4e0e-7a51-4889-89ce-7fdd15c13767",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pin the notes",
              "fullTitle": "Test the functionality of notes Pin the notes",
              "timedOut": null,
              "duration": 11769,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const unpinnedNotes = response.body.result.values.find(note => note.pinned === false);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(unpinnedNotes.body);\n  cyGet(`#tool-container [role=\"rowgroup\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\n  cyGet('#pin').click();\n});",
              "err": {},
              "uuid": "7b6cf8be-30b2-4f83-99be-fecc4f1a7957",
              "parentUUID": "644a4e0e-7a51-4889-89ce-7fdd15c13767",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unpin the notes",
              "fullTitle": "Test the functionality of notes Unpin the notes",
              "timedOut": null,
              "duration": 11407,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pinnedNotes = response.body.result.values.find(note => note.pinned === true);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(pinnedNotes.body);\n  cyGet(`#tool-container [role=\"rowgroup\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\n  cyGet('#unpin').click();\n});",
              "err": {},
              "uuid": "99e4abab-db07-4304-bf05-ec8c231955b1",
              "parentUUID": "644a4e0e-7a51-4889-89ce-7fdd15c13767",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Like notes",
              "fullTitle": "Test the functionality of notes Like notes",
              "timedOut": null,
              "duration": 12071,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pinnedNotes = response.body.result.values.find(note => note.liked === false);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(pinnedNotes.body);\n  cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\n  cyGet('#tool-container [type=\"button\"]').contains(\"Likes\").click(); // like button\n});",
              "err": {},
              "uuid": "f8e4189d-3f57-4561-bc38-97ec02e707e3",
              "parentUUID": "644a4e0e-7a51-4889-89ce-7fdd15c13767",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a comment on note",
              "fullTitle": "Test the functionality of notes Add a comment on note",
              "timedOut": null,
              "duration": 11554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const comment = faker.lorem.sentence();\ncyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(`[data-testid=\"addcomment-typography-34tc065nz\"]`).click();\ncyGet('#note-comment').type(comment);\ncyGet(`[data-testid=\"toolbar-button-b9qu80nyb\"]`).contains(\"Save\").click();\ncyGet(`[data-testid=\"bunotepad-box-8lxcermoa\"]`).contains(comment);",
              "err": {},
              "uuid": "4f34bace-e2ee-4b7a-be1f-0797c9d570be",
              "parentUUID": "644a4e0e-7a51-4889-89ce-7fdd15c13767",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Comment on a notes",
              "fullTitle": "Test the functionality of notes Update Comment on a notes",
              "timedOut": null,
              "duration": 12191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(`[data-testid=\"commentlist-box-0u6rpj17w\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\ncyGet('#edit').click();\ncyGet(\"[data-testid='bunotepad-box-8lxcermoa']\").last().clear().type(faker.lorem.sentence());\ncyGet(`[data-testid=\"toolbar-button-b9qu80nyb\"]`).contains(\"Save\").click();",
              "err": {},
              "uuid": "8feb6abf-d3f6-493d-af6a-86b34dfe89ae",
              "parentUUID": "644a4e0e-7a51-4889-89ce-7fdd15c13767",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Comment on a notes",
              "fullTitle": "Test the functionality of notes Delete Comment on a notes",
              "timedOut": null,
              "duration": 7717,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(`[data-testid=\"commentlist-box-0u6rpj17w\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\ncyGet('#delete').click();\ncyGet(`[role=\"dialog\"] #customized-dialog-title p`).should(\"contain.text\", \"Delete Comment\");\ncyGet(`[data-testid=\"buconfirmation-typography-9lgofl82d\"]`).should(\"contain.text\", \"Are you sure you want to delete comment?\");\ncyGet(`[data-testid=\"Delete\"]`).contains(\"Delete\").click();",
              "err": {},
              "uuid": "6fdc2160-0445-4e85-a536-2945b9287297",
              "parentUUID": "644a4e0e-7a51-4889-89ce-7fdd15c13767",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unlike notes",
              "fullTitle": "Test the functionality of notes Unlike notes",
              "timedOut": null,
              "duration": 6146,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pinnedNotes = response.body.result.values.find(note => note.liked === true);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(pinnedNotes.body);\n  cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\n  cyGet('#tool-container [type=\"button\"]').contains(\"Likes\").click(); // like button\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'body')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'body')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/notes.js:109:113)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147616:15)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)",
                "diff": null
              },
              "uuid": "858859b3-377f-45a0-9bd7-a7592767b731",
              "parentUUID": "644a4e0e-7a51-4889-89ce-7fdd15c13767",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete notes",
              "fullTitle": "Test the functionality of notes Delete notes",
              "timedOut": null,
              "duration": 7397,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`#tool-container [role=\"rowgroup\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).as(\"ellipsis\").first().click();\ncyGet('#delete').click();\ncyGet(`[role=\"dialog\"] #customized-dialog-title p`).should(\"contain.text\", \"Delete Note\");\ncyGet(`[data-testid=\"buconfirmation-typography-9lgofl82d\"]`).should(\"contain.text\", \"Are you sure you want to delete this note?\");\ncyGet(`[data-testid=\"Delete\"]`).contains(\"Delete\").click();",
              "err": {},
              "uuid": "646442cb-a452-4fe2-b707-4d21a79c0263",
              "parentUUID": "644a4e0e-7a51-4889-89ce-7fdd15c13767",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "183bf6f0-e753-4586-9dca-dc2f81f604e9",
            "c037d5f0-adf0-461b-97ae-267e1026a65b",
            "7b6cf8be-30b2-4f83-99be-fecc4f1a7957",
            "99e4abab-db07-4304-bf05-ec8c231955b1",
            "f8e4189d-3f57-4561-bc38-97ec02e707e3",
            "4f34bace-e2ee-4b7a-be1f-0797c9d570be",
            "8feb6abf-d3f6-493d-af6a-86b34dfe89ae",
            "6fdc2160-0445-4e85-a536-2945b9287297",
            "646442cb-a452-4fe2-b707-4d21a79c0263"
          ],
          "failures": [
            "1ea79e73-e8f3-41c6-8c40-c81cfde972b2",
            "858859b3-377f-45a0-9bd7-a7592767b731"
          ],
          "pending": [],
          "skipped": [],
          "duration": 137812,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3b74efca-ff0a-4a19-b7c6-b8d74cdc21d9",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8ef88332-cd0e-4110-bb11-379d2971bf86",
          "title": "Test the functionality of task",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify auto assignment to login user",
              "fullTitle": "Test the functionality of task Verify auto assignment to login user",
              "timedOut": null,
              "duration": 22844,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const loginUser = response.body.result.user;\n  cy.wait(\"@existsPipelines\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    cyGet(`[aria-label=\"Tasks\"]`).click();\n    twosecondWait();\n    cyGet(`button[type=\"button\"]`).contains(\"Create task\").click({\n      force: true\n    });\n    cy.wait(\"@owners\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const findLoginUser = response.body.result.values.find(ele => ele.subLabel === loginUser.email);\n      cyGet(`#buForm [data-testid=\"avatarinput-textfield-ojwxr8kdk\"]`).contains(\"Assigned to\").next().find(`[data-testid=\"buchip-chip-5r51zm55o\"] span`).should(\"contain.text\", findLoginUser === null || findLoginUser === void 0 ? void 0 : findLoginUser.label);\n    });\n  });\n});",
              "err": {},
              "uuid": "c607ce36-c5c7-42ea-ad0b-fd95dd780602",
              "parentUUID": "8ef88332-cd0e-4110-bb11-379d2971bf86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create task in lead",
              "fullTitle": "Test the functionality of task Create task in lead",
              "timedOut": null,
              "duration": 18138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cyGet(`[aria-label=\"Tasks\"]`).click();\n  twosecondWait();\n  cyGet(`button[type=\"button\"]`).contains(\"Create task\").click({\n    force: true\n  });\n  cy.wait(\"@getformDetails\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    // twosecondWait()\n    propwiseFields(response.body.result.values);\n    // twosecondWait()\n    cyGet(`[data-testid=\"buttongroup-dialogactions-fb25djtod\"] [data-testid=\"Save\"]`).click();\n    cy.wait(\"@postTask\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      expect(response.body).has.property(\"message\", messages.created);\n    });\n  });\n});",
              "err": {},
              "uuid": "191dca19-5916-4b5c-9dc0-df4287e53f93",
              "parentUUID": "8ef88332-cd0e-4110-bb11-379d2971bf86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit task in lead",
              "fullTitle": "Test the functionality of task Edit task in lead",
              "timedOut": null,
              "duration": 20347,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cyGet(`[aria-label=\"Tasks\"]`).click();\n  twosecondWait();\n  searchAndChooseTask(\"Edit\").then(() => {\n    cy.wait(\"@getTaskById\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const profile = response.body.result.profile;\n      propwiseFields(profile);\n    });\n    cyGet(`[data-testid=\"buttongroup-dialogactions-fb25djtod\"] [data-testid=\"Save\"]`).click();\n  });\n});",
              "err": {},
              "uuid": "6fe74a3b-da10-4f57-ba80-317ac494b128",
              "parentUUID": "8ef88332-cd0e-4110-bb11-379d2971bf86",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete task",
              "fullTitle": "Test the functionality of task Delete task",
              "timedOut": null,
              "duration": 11764,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const msg1 = \"Delete task\";\nconst msg2 = \"Are you sure you want to delete this task?\";\ncy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cyGet(`[aria-label=\"Tasks\"]`).click();\n  twosecondWait();\n  searchAndChooseTask(\"Delete\").then(() => {\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    cyGet(globalSel.deltestid).click();\n  });\n});",
              "err": {},
              "uuid": "7177a956-2768-4a44-a8b8-1c5e0ea2e732",
              "parentUUID": "8ef88332-cd0e-4110-bb11-379d2971bf86",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c607ce36-c5c7-42ea-ad0b-fd95dd780602",
            "191dca19-5916-4b5c-9dc0-df4287e53f93",
            "6fe74a3b-da10-4f57-ba80-317ac494b128",
            "7177a956-2768-4a44-a8b8-1c5e0ea2e732"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 73093,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "014bb5c4-fc03-4981-81fa-a2e953e94869",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e084e024-c632-4fd0-bb0a-c6557be0cf39",
          "title": "Test the functionality of Addresses",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "496fc2a2-eb7a-44a6-b5ea-0179993b24e3",
              "title": "Test the functionality of add address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Add address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of add address Add address",
                  "timedOut": null,
                  "duration": 41508,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _addressField, _addressField2;\n// cy.wait(\"@getBiztab\", { timeout: 10000 }).then(({ response }) => {\n//     addressField = response.body.result.find(fld => fld.prop === \"add\");\nif (!addressField) {\n  this.skip();\n}\ncyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField = addressField) === null || _addressField === void 0 ? void 0 : _addressField.label}]`).should(\"contain.text\", (_addressField2 = addressField) === null || _addressField2 === void 0 ? void 0 : _addressField2.label).click();\ncyGet(`[data-testid=\"Add\"]`).click();\ntwosecondWait();\ncy.wait(\"@getAddresssForm\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const fieldsOnAddressForm = Object.values(response.body.result.fields);\n  propwiseFields(fieldsOnAddressForm, {}, [], true);\n  cyGet(`#clone`).check();\n  cyGet('[data-testid=\"buwrapper-box-2gkcmtrgi\"] > [data-testid=\"buttongroup-box-ell22p9ne\"] > [data-testid=\"buttongroup-dialogactions-fb25djtod\"] > * > [data-testid=\"Save\"]').click();\n  cyGet('.MuiSnackbarContent-message').should(\"contain.text\", messages.created);\n});\n// })",
                  "err": {},
                  "uuid": "ef08cba4-5541-4368-af24-a8cc9d5cab0b",
                  "parentUUID": "496fc2a2-eb7a-44a6-b5ea-0179993b24e3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ef08cba4-5541-4368-af24-a8cc9d5cab0b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 41508,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "690c41fe-2e0c-443f-8b5b-8bda729588ac",
              "title": "Test the functionality of edit address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Edit address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of edit address Edit address",
                  "timedOut": null,
                  "duration": 28923,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _addressField3, _addressField4;\nif (!addressField) {\n  this.skip();\n}\ncyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField3 = addressField) === null || _addressField3 === void 0 ? void 0 : _addressField3.label}]`).should(\"contain.text\", (_addressField4 = addressField) === null || _addressField4 === void 0 ? void 0 : _addressField4.label).click();\ncy.wait(\"@addressDeatail\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const addressView = response.body.result.view;\n  const billingAddress = response.body.result.billing;\n  const shippingAddress = response.body.result.shipping;\n  if (billingAddress || shippingAddress) {\n    const country = addressView.find(view => view.prop === \"cnt\");\n    const fieldValues = billingAddress ? billingAddress.values[0][country.id] : shippingAddress.values[0][country.id];\n    cyGet(`[data-testid=\"addresssection-box-ykc0hvq21\"] [data-testid=\"busimpledropdown-box-l5z1y823c\"]`).first().click();\n    cyGet(`#edit`).click();\n    propwiseFields(addressView, {}, fieldValues, true);\n    cyGet('[data-testid=\"buwrapper-box-2gkcmtrgi\"] > [data-testid=\"buttongroup-box-ell22p9ne\"] > [data-testid=\"buttongroup-dialogactions-fb25djtod\"] > * > [data-testid=\"Save\"]').click();\n    cyGet('.MuiSnackbarContent-message').should(\"contain.text\", messages.updated);\n  }\n});",
                  "err": {},
                  "uuid": "820020fa-6f87-4ae9-bb48-727ffaeba4dc",
                  "parentUUID": "690c41fe-2e0c-443f-8b5b-8bda729588ac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "820020fa-6f87-4ae9-bb48-727ffaeba4dc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 28923,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f098f957-9b45-4d74-949a-2eb836a90143",
              "title": "Test the functionality of delete address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of delete address Delete address",
                  "timedOut": null,
                  "duration": 7363,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _addressField5, _addressField6;\nif (!addressField) {\n  this.skip();\n}\ncyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField5 = addressField) === null || _addressField5 === void 0 ? void 0 : _addressField5.label}]`).should(\"contain.text\", (_addressField6 = addressField) === null || _addressField6 === void 0 ? void 0 : _addressField6.label).click();\ncyGet(`[data-testid=\"addresssection-box-ykc0hvq21\"] [data-testid=\"busimpledropdown-box-l5z1y823c\"]`).first().click();\ncyGet(`#delete`).click();\ncyGet('#customized-dialog-title p').should(\"have.text\", \"Delete Address\");\ncyGet(`[role=\"dialog\"] [data-testid=\"buconfirmation-typography-9lgofl82d\"]`).should(\"contain.text\", \"Are you sure to delete this address?\");\ncyGet(`[data-testid=\"Delete\"]`).contains(\"Delete\").click();",
                  "err": {},
                  "uuid": "70168ddc-e048-4a33-85c7-3c6dcd9b8208",
                  "parentUUID": "f098f957-9b45-4d74-949a-2eb836a90143",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "70168ddc-e048-4a33-85c7-3c6dcd9b8208"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7363,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "788e9699-7bae-4da7-9046-ff6cb3bfd7f8",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7163b563-4ba9-4352-aeee-9debbfd23c3f",
          "title": "Test the functionality of Association",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8462b602-2d12-4b32-953e-e5700542173a",
              "title": "Test the functionality of Association",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Associate the record",
                  "fullTitle": "Test the functionality of Association Test the functionality of Association Associate the record",
                  "timedOut": null,
                  "duration": 21472,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let associatonField = response.body.result.find(ele => ele.prop === \"asc\");\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${associatonField === null || associatonField === void 0 ? void 0 : associatonField.label}\"]`).should(\"contain.text\", associatonField === null || associatonField === void 0 ? void 0 : associatonField.label).click();\n  if ((associatonField === null || associatonField === void 0 ? void 0 : associatonField.selection) == \"single\") {\n    cy.wait(\"@associations\").then(({\n      response\n    }) => {\n      if (response.body.result.values.length == 0) {\n        cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1)`).click();\n        cy.wait(1500);\n      } else {\n        cy.log(\"Association alredy exist\");\n      }\n    });\n  } else {\n    cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n    cy.wait(\"@associable\").then(({\n      response\n    }) => {\n      if (response.body.result.values.length > 1) {\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n        cy.get(`${lead.selectAssociableRecord} :nth-child(2) input`).click();\n        cy.wait(1500);\n      } else if (response.body.result.values.length = 1) {\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n        cy.wait(1500);\n      } else if (response.body.result.values.length = 0) {\n        expect(response.body.result.values).to.be.length.eq(0);\n      }\n      ;\n    });\n  }\n  ;\n});",
                  "err": {},
                  "uuid": "a7f5fc3c-f670-4647-8828-13be56bab422",
                  "parentUUID": "8462b602-2d12-4b32-953e-e5700542173a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a7f5fc3c-f670-4647-8828-13be56bab422"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21472,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6cc7ed42-26bb-40fe-b37b-552e96b3a016",
              "title": "Test the functionality of Remove Association",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Remove associated record from association list",
                  "fullTitle": "Test the functionality of Association Test the functionality of Remove Association Remove associated record from association list",
                  "timedOut": null,
                  "duration": 4329,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let associatonField = response.body.result.find(ele => ele.prop === \"asc\");\n  // expect(associatonField).be.length.greaterThan(0)\n  // cy.get(lead.simpleTab).contains(associatonField[0].label).click()\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${associatonField === null || associatonField === void 0 ? void 0 : associatonField.label}\"]`).should(\"contain.text\", associatonField === null || associatonField === void 0 ? void 0 : associatonField.label).click();\n  cy.wait(\"@associations\").then(({\n    response\n  }) => {\n    if (response.body.result.values == 0) {\n      cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n      cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n      cy.wait(1500);\n      cy.get('[data-testid=\"commoncard-box-ze66boaek\"]').first().click();\n      cy.get(\"#remove\").click();\n    } else {\n      cy.get('[data-testid=\"commoncard-box-ze66boaek\"]').first().click();\n      cy.get(\"#remove\").click();\n    }\n    ;\n    cy.wait(\"@deleteAssociation\").then(({\n      response\n    }) => {\n      expect(response.body).has.property(\"message\", \"Associations removed successfully.\");\n    });\n  });\n});",
                  "err": {},
                  "uuid": "b07e59fc-7152-447d-a7e4-6af6838d38c1",
                  "parentUUID": "6cc7ed42-26bb-40fe-b37b-552e96b3a016",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b07e59fc-7152-447d-a7e4-6af6838d38c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4329,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "39748f47-ec49-42ee-992d-4c5d06723636",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fe015f16-6d18-49a4-9afc-f203053179c1",
          "title": "Test the functionality of Attachment",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach file",
              "fullTitle": "Test the functionality of Attachment Attach file",
              "timedOut": null,
              "duration": 10399,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.simpleTab).contains(\"Attachment\").click();\ncyGet(lead.tabpanelBtn).contains(\"Add\").click();\ncyGet('input[type=\"file\"]').selectFile(\"cypress/fixtures/data.csv\", {\n  force: true\n});\ncyGet('[role=\"tabpanel\"] .MuiTypography-noWrap').first().dblclick();\n// cy.wait(1000)\n//cyGet(lead.dialogTitle).contains(\"data.csv\")\ncyGet(`#customized-dialog-title ${lead.typeBtn}`).contains(\"Download\");\ncyGet('#customized-dialog-title .MuiIconButton-root').click();",
              "err": {},
              "uuid": "3bb5872f-4dbc-453b-b3ec-8d4dcb7df171",
              "parentUUID": "fe015f16-6d18-49a4-9afc-f203053179c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Download file",
              "fullTitle": "Test the functionality of Attachment Download file",
              "timedOut": null,
              "duration": 4158,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.simpleTab).contains(\"Attachment\").click();\ncyGet('#attachment-action').click();\ncyGet('#download').click();",
              "err": {},
              "uuid": "cfe2aa3e-4a2f-4c89-b26f-9b3ab3703241",
              "parentUUID": "fe015f16-6d18-49a4-9afc-f203053179c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete attached file",
              "fullTitle": "Test the functionality of Attachment delete attached file",
              "timedOut": null,
              "duration": 3420,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let msg2 = \"Are you sure want to delete this file?\";\ncyGet(lead.simpleTab).contains(\"Attachment\").click();\ncyGet('#attachment-action').click();\ncyGet('#delete').click();\ncy.roleDialog(lead.dialogTitle, \"Confirmation\", lead.dialogDesc, msg2, `.MuiDialogActions-root ${lead.typeBtn}`, \"Delete\");",
              "err": {},
              "uuid": "1ae362c1-aa2a-40b6-a64a-b5ecaf8f7e70",
              "parentUUID": "fe015f16-6d18-49a4-9afc-f203053179c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3bb5872f-4dbc-453b-b3ec-8d4dcb7df171",
            "cfe2aa3e-4a2f-4c89-b26f-9b3ab3703241",
            "1ae362c1-aa2a-40b6-a64a-b5ecaf8f7e70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17977,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "45f3d72d-e545-47c8-a6fa-3b39e985623a",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_customForm\\1_addForm.js",
      "file": "cypress\\e2e\\lms\\lead\\5_customForm\\1_addForm.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
          "title": "Test the functionality of custom form",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_customForm\\1_addForm.js",
          "file": "cypress\\e2e\\lms\\lead\\5_customForm\\1_addForm.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add custom form",
              "fullTitle": "Test the functionality of custom form Add custom form",
              "timedOut": null,
              "duration": 7679,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pipId = response.body.result.catId;\n  cy.wait(\"@getBiztab\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const biztabFieldIds = response.body.result.map(fld => fld.id);\n    if (biztabFieldIds.length > 3) {\n      const toUpdateField = biztabFieldIds.slice(0, 2);\n      const reqHeader = {\n        Authorization: `Bearer ${Cypress.env(\"token\")}`\n      };\n      const reqQs = {\n        \"custom\": true,\n        module: _module,\n        asset,\n        catId: pipId\n      };\n      const payload = {\n        fields: [...toUpdateField]\n      };\n      request(\"PATCH\", biztabUrl, reqHeader, reqQs, payload).then(({\n        body\n      }) => {\n        expect(body).has.property(\"message\", messages.updated);\n      });\n    }\n    cyGet(`[aria-label=\"Simple Tab\"] [data-testid=\"busimpletabs-tab-bmcqbakaf\"]`).contains(\"Add form\").click();\n    cy.wait(\"@getFormDetail\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const {\n        label,\n        align,\n        fontSize\n      } = response.body.result.form;\n      expect(response.body.result.form).has.property(\"align\", \"left\");\n      expect(response.body.result.form).has.property(\"fontSize\", \"14px\");\n      expect(response.body.result.form).has.property(\"width\", 500);\n      cyGet(`input[value=\"${label}\"]`).should(\"have.attr\", \"style\", `font-size: 14px; text-align: left;`);\n    });\n  });\n});",
              "err": {},
              "uuid": "322ba694-94c3-4d34-9004-0e483079cecf",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "save button should be dissable without form title",
              "fullTitle": "Test the functionality of custom form save button should be dissable without form title",
              "timedOut": null,
              "duration": 6585,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "editctmFromScript().then(ctmformdata => {\n  cyGet(`input[value=\"${ctmformdata === null || ctmformdata === void 0 ? void 0 : ctmformdata.label}\"]`).clear();\n  buSaveButton().should(\"be.disabled\");\n  buSaveButton().trigger(\"mouseover\", {\n    force: true\n  });\n  cyGet('.MuiTooltip-tooltip').should(\"contain.text\", \"Please fill form title!\");\n});",
              "err": {},
              "uuid": "85c240d6-68a0-4340-8968-a6c4eb093ffd",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "attach fields on custom form",
              "fullTitle": "Test the functionality of custom form attach fields on custom form",
              "timedOut": null,
              "duration": 15721,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "editctmFromScript().then(() => {\n  cyGet(`[aria-label=\"Existing fields\"]`).should(\"contain.text\", \"Existing fields\").click();\n  onesecondWait();\n  cyGet(`[data-testid=\"Attach field\"]`).should(\"contain.text\", \"Attach field\").click();\n  cy.wait(\"@availableField\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const availableField = response.body.result.values.slice(0, 2);\n    if (availableField.length === 0) {\n      this.skip();\n    }\n    const prop1 = availableField[0].prop;\n    const id1 = availableField[0].id;\n    const field1_Draggable = `[data-rbd-draggable-id=\"existingField@${prop1}@${id1}\"]`;\n    const droppable = '[role=\"tabpanel\"] [data-rbd-droppable-id=\"new-container\"]';\n    cyGet(`[data-testid=\"attachfields-textfield-g0au8eoj4\"] [placeholder=\"Search...\"]`).type(availableField[0].label);\n    cyGet(`[aria-label=\"${availableField[0].label}\"]`).should(\"contain.text\", availableField[0].label).click();\n    if (availableField.length > 1) {\n      cyGet(`[data-testid=\"attachfields-textfield-g0au8eoj4\"] [placeholder=\"Search...\"]`).clear().type(availableField[1].label);\n      cyGet(`[aria-label=\"${availableField[1].label}\"]`).should(\"contain.text\", availableField[1].label).click();\n    }\n    cyGet(`[data-testid=\"Attach\"]`).click();\n    twosecondWait();\n    // Drag and Drop first field\n    cy.dragAndDrop(field1_Draggable, droppable);\n    twosecondWait();\n    // Drag and Drop second field\n    if (availableField.length > 1) {\n      const prop2 = availableField[1].prop;\n      const id2 = availableField[1].id;\n      const field2_Draggable = `[data-rbd-draggable-id=\"existingField@${prop2}@${id2}\"]`;\n      cy.dragAndDrop(field2_Draggable, droppable);\n      twosecondWait();\n    }\n    buSaveButton().click();\n    cy.wait(\"@patchForm\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      expect(response.body).has.property(\"message\", messages.updated);\n    });\n  });\n});",
              "err": {},
              "uuid": "aa8acbed-7ba3-4302-8e8d-df093837b6e9",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "attached fields should not be re-attached on form",
              "fullTitle": "Test the functionality of custom form attached fields should not be re-attached on form",
              "timedOut": null,
              "duration": 7153,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "editctmFromScript().then(() => {\n  cyGet(`[aria-label=\"Existing fields\"]`).should(\"contain.text\", \"Existing fields\").click();\n  onesecondWait();\n  cy.wait(\"@getFormDetail\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const fields = Object.values(response.body.result.fields);\n    const prop1 = fields[0].prop;\n    const id1 = fields[0].id;\n    cyGet(`[data-rbd-draggable-id=\"existingField@${prop1}@${id1}\"]`).should(\"have.attr\", \"style\", \"opacity: 0.7;\");\n  });\n});",
              "err": {},
              "uuid": "c919e084-8d9d-4887-a9fd-8817fe113af2",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Set test-alignment center and font-size medium",
              "fullTitle": "Test the functionality of custom form Set test-alignment center and font-size medium",
              "timedOut": null,
              "duration": 7078,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validateAlignmentAndFontSize(`[data-testid=\"textalignment-iconbutton-nqzrlk6uv\"]`, \"Medium\", \"16px\", \"center\");",
              "err": {},
              "uuid": "9ec30f58-e3df-499f-bf8d-a903543c3db8",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Set test-alignment right and font-size large",
              "fullTitle": "Test the functionality of custom form Set test-alignment right and font-size large",
              "timedOut": null,
              "duration": 5804,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validateAlignmentAndFontSize(`[data-testid=\"textalignment-iconbutton-xvufy7vwj\"]`, \"Large\", \"18px\", \"right\");",
              "err": {},
              "uuid": "4726a1cd-f6c1-4c91-9c2b-9a351904b7af",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Set test-alignment right and font-size large",
              "fullTitle": "Test the functionality of custom form Set test-alignment right and font-size large",
              "timedOut": null,
              "duration": 5597,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validateAlignmentAndFontSize(`[data-testid=\"textalignment-iconbutton-ztu8e2vt9\"]`, \"Small\", \"14px\", \"left\");",
              "err": {},
              "uuid": "c61faf29-aa01-4657-9237-a8b7f09b7492",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have str field type",
              "fullTitle": "Test the functionality of custom form Verify form have str field type",
              "timedOut": null,
              "duration": 7602,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragStr, fieldType.str);",
              "err": {},
              "uuid": "fa1a140b-5798-4110-8c95-df666ef4519f",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have txa field type",
              "fullTitle": "Test the functionality of custom form Verify form have txa field type",
              "timedOut": null,
              "duration": 7203,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragTxa, fieldType.txa);",
              "err": {},
              "uuid": "47860384-d6c3-456e-997c-a1649e1c93e4",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have phn field type",
              "fullTitle": "Test the functionality of custom form Verify form have phn field type",
              "timedOut": null,
              "duration": 7080,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragPhn, fieldType.phn);",
              "err": {},
              "uuid": "588da24f-0e83-4f2d-952f-7db72cda890e",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have num field type",
              "fullTitle": "Test the functionality of custom form Verify form have num field type",
              "timedOut": null,
              "duration": 8015,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragNum, fieldType.num);",
              "err": {},
              "uuid": "5b03a9c9-1e59-4778-97c3-7ff263db270c",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have eml field type",
              "fullTitle": "Test the functionality of custom form Verify form have eml field type",
              "timedOut": null,
              "duration": 8435,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragEml, fieldType.eml);",
              "err": {},
              "uuid": "538c5380-16ec-4687-afd0-32d5d329335b",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have url field type",
              "fullTitle": "Test the functionality of custom form Verify form have url field type",
              "timedOut": null,
              "duration": 7176,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragUrl, fieldType.url);",
              "err": {},
              "uuid": "8253385f-c4f1-4327-84b0-8926fdfdd485",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have bas field type",
              "fullTitle": "Test the functionality of custom form Verify form have bas field type",
              "timedOut": null,
              "duration": 7176,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragBas, fieldType.bas);",
              "err": {},
              "uuid": "c2f615a1-2be5-4aae-96be-c2c4affe4d3b",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have img field type",
              "fullTitle": "Test the functionality of custom form Verify form have img field type",
              "timedOut": null,
              "duration": 8496,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragImg, fieldType.img);",
              "err": {},
              "uuid": "ef6e9f67-be9f-4786-b798-dd06c4d479f9",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have dat field type",
              "fullTitle": "Test the functionality of custom form Verify form have dat field type",
              "timedOut": null,
              "duration": 7821,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragDat, fieldType.dat);",
              "err": {},
              "uuid": "94d4db7e-4475-4a96-9528-88d99db6028b",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have tim field type",
              "fullTitle": "Test the functionality of custom form Verify form have tim field type",
              "timedOut": null,
              "duration": 12796,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragTim, fieldType.tim);",
              "err": {},
              "uuid": "0038fa08-4929-4574-a825-756341491c90",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have dtm field type",
              "fullTitle": "Test the functionality of custom form Verify form have dtm field type",
              "timedOut": null,
              "duration": 12933,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragDtm, fieldType.dtm);",
              "err": {},
              "uuid": "08d93964-92a8-454e-857a-5e6c8926f5e6",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have chk field type",
              "fullTitle": "Test the functionality of custom form Verify form have chk field type",
              "timedOut": null,
              "duration": 13319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragChk, fieldType.chk);",
              "err": {},
              "uuid": "3110dd4a-90b6-44a2-a732-23d7510d87c9",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have rad field type",
              "fullTitle": "Test the functionality of custom form Verify form have rad field type",
              "timedOut": null,
              "duration": 13085,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragRad, fieldType.rad);",
              "err": {},
              "uuid": "5a54649b-8565-4788-9a9a-1fe2a4b180ad",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have atc field type",
              "fullTitle": "Test the functionality of custom form Verify form have atc field type",
              "timedOut": null,
              "duration": 10780,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragAtc, fieldType.atc);",
              "err": {},
              "uuid": "cb150c85-2db7-4bb5-b8d0-8a4e83e0e8de",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have grd field type",
              "fullTitle": "Test the functionality of custom form Verify form have grd field type",
              "timedOut": null,
              "duration": 7515,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragGrd, fieldType.grd);",
              "err": {},
              "uuid": "deabb1d4-c523-445f-9d4f-bf8bed8ac022",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have fx field type",
              "fullTitle": "Test the functionality of custom form Verify form have fx field type",
              "timedOut": null,
              "duration": 7620,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragFx, fieldType.fx);",
              "err": {},
              "uuid": "73f1ac70-3318-400a-92b6-6d54644ace2f",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have rtg field type",
              "fullTitle": "Test the functionality of custom form Verify form have rtg field type",
              "timedOut": null,
              "duration": 7541,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragRtg, fieldType.rtg);",
              "err": {},
              "uuid": "d81b8e3d-4fc1-484d-87f1-4f31369e1995",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have gloc field type",
              "fullTitle": "Test the functionality of custom form Verify form have gloc field type",
              "timedOut": null,
              "duration": 7806,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragGloc, fieldType.gloc);",
              "err": {},
              "uuid": "3e2147ed-3f44-4c2f-a5be-adca2429ef09",
              "parentUUID": "7a0dbbf3-59ac-4c2d-a676-7e18b088ae40",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "322ba694-94c3-4d34-9004-0e483079cecf",
            "85c240d6-68a0-4340-8968-a6c4eb093ffd",
            "aa8acbed-7ba3-4302-8e8d-df093837b6e9",
            "c919e084-8d9d-4887-a9fd-8817fe113af2",
            "9ec30f58-e3df-499f-bf8d-a903543c3db8",
            "4726a1cd-f6c1-4c91-9c2b-9a351904b7af",
            "c61faf29-aa01-4657-9237-a8b7f09b7492",
            "fa1a140b-5798-4110-8c95-df666ef4519f",
            "47860384-d6c3-456e-997c-a1649e1c93e4",
            "588da24f-0e83-4f2d-952f-7db72cda890e",
            "5b03a9c9-1e59-4778-97c3-7ff263db270c",
            "538c5380-16ec-4687-afd0-32d5d329335b",
            "8253385f-c4f1-4327-84b0-8926fdfdd485",
            "c2f615a1-2be5-4aae-96be-c2c4affe4d3b",
            "ef6e9f67-be9f-4786-b798-dd06c4d479f9",
            "94d4db7e-4475-4a96-9528-88d99db6028b",
            "0038fa08-4929-4574-a825-756341491c90",
            "08d93964-92a8-454e-857a-5e6c8926f5e6",
            "3110dd4a-90b6-44a2-a732-23d7510d87c9",
            "5a54649b-8565-4788-9a9a-1fe2a4b180ad",
            "cb150c85-2db7-4bb5-b8d0-8a4e83e0e8de",
            "deabb1d4-c523-445f-9d4f-bf8bed8ac022",
            "73f1ac70-3318-400a-92b6-6d54644ace2f",
            "d81b8e3d-4fc1-484d-87f1-4f31369e1995",
            "3e2147ed-3f44-4c2f-a5be-adca2429ef09"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 218016,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "68769a1c-b4f7-466f-91ab-f64af84a42c4",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_customForm\\2_editForm.js",
      "file": "cypress\\e2e\\lms\\lead\\5_customForm\\2_editForm.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5b166d43-e3ff-4969-863b-268783f85946",
          "title": "Test the functionality of custom form",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_customForm\\2_editForm.js",
          "file": "cypress\\e2e\\lms\\lead\\5_customForm\\2_editForm.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add field on custom form",
              "fullTitle": "Test the functionality of custom form Add field on custom form",
              "timedOut": null,
              "duration": 16350,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "editctmFromScript().then(ctmformdata => {\n  cyGet('[aria-label=\"Field type\"]').click();\n  twosecondWait();\n  cy.dragAndDrop(globalSel.dragStr, droppable);\n  labelNplaceholder(strLabel, `Enter ${strLabel}`);\n  cyGet('[data-testid=\"budialog-box-xmpv7w06s\"] > * > [data-testid=\"Save\"]').click();\n  twosecondWait();\n  buSaveButton().click();\n});",
              "err": {},
              "uuid": "fa4d9205-684f-45eb-bca1-786e262990a5",
              "parentUUID": "5b166d43-e3ff-4969-863b-268783f85946",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add grid field on custom form",
              "fullTitle": "Test the functionality of custom form Add grid field on custom form",
              "timedOut": null,
              "duration": 25643,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "editctmFromScript().then(ctmformdata => {\n  cyGet('[aria-label=\"Field type\"]').click();\n  twosecondWait();\n  cyGet(gridDraggable).find(`[data-testid=\"index-typography-442pqldco\"]`).should(\"contain.text\", \"Grid\");\n  cy.dragAndDrop(gridDraggable, droppable);\n  cy.wait(\"@postGrid\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const gridLabel = response.body.result.label;\n    const snField = response.body.result.fields.find(fld => (fld === null || fld === void 0 ? void 0 : fld.label) === \"Serial No\");\n    cyGet(`[aria-label=\"Add Grid\"]`).should(\"contain.text\", \"Add Grid\");\n    cyGet(`[data-testid=\"gridfield-box-sm139nqrq\"] label`).should(\"contain.text\", \"Title\");\n    cyGet(`[data-testid=\"gridfield-box-sm139nqrq\"]`).find(\"input\").as(\"gridLabel\");\n    cy.get(\"@gridLabel\").should(\"have.attr\", \"required\");\n    cy.get(\"@gridLabel\").should(\"have.value\", gridLabel);\n    cy.contains(`tr`, snField === null || snField === void 0 ? void 0 : snField.label);\n    addfieldonGrid(\"Single line text\", strLabel);\n    addfieldonGrid(\"URL\", urlLabel);\n    addfieldonGrid(\"Email\", emlField);\n    // save grid on custom form\n    cyGet('[data-testid=\"buttongroup-dialogactions-fb25djtod\"] > * > [data-testid=\"Save\"]').click();\n    // save custom form\n    buSaveButton().click();\n  });\n});",
              "err": {},
              "uuid": "3dcbcfac-b967-4ba9-bf4c-3fd4b50ebfc5",
              "parentUUID": "5b166d43-e3ff-4969-863b-268783f85946",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Make a field required and check field behaviour",
              "fullTitle": "Test the functionality of custom form Make a field required and check field behaviour",
              "timedOut": null,
              "duration": 8196,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "ctmFieldSettingScript(\"required\");",
              "err": {},
              "uuid": "5854cfdb-be20-4d00-a4ee-57df0bb69776",
              "parentUUID": "5b166d43-e3ff-4969-863b-268783f85946",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "save button should be disabled without filling required field",
              "fullTitle": "Test the functionality of custom form save button should be disabled without filling required field",
              "timedOut": null,
              "duration": 20321,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const ctmField = response.body.result.find(ele => ele.prop === \"ctm\");\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${ctmField === null || ctmField === void 0 ? void 0 : ctmField.label}\"]`).contains(ctmField === null || ctmField === void 0 ? void 0 : ctmField.label).click();\n  cyGet(`[data-testid=\"Add\"]`).contains(\"Add\").click();\n  cy.wait(\"@getFormDetail\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const fields = response.body.result.fields;\n    const containers = response.body.result.form.containers;\n    const allFieldIds = containers.flatMap(container => container.fields.map(i => i.id));\n    const requiredFieldIds = containers.flatMap(container => container.fields.filter(f => f.required === true).map(i => i.id));\n    const optionalFields = allFieldIds.map(id => fields[id]).filter(f => !requiredFieldIds.includes(f.id));\n    propwiseFields(optionalFields, {}, [], true);\n    buSaveButton().should(\"be.disabled\");\n  });\n});",
              "err": {},
              "uuid": "3847a5b1-8a34-4e1f-b346-988e11ae7faf",
              "parentUUID": "5b166d43-e3ff-4969-863b-268783f85946",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Make a field read-only and check field behaviour",
              "fullTitle": "Test the functionality of custom form Make a field read-only and check field behaviour",
              "timedOut": null,
              "duration": 8884,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "ctmFieldSettingScript(\"readOnly\", \"Read only\");",
              "err": {},
              "uuid": "5f5c224d-9e80-4ea3-9ed5-9158fcc31534",
              "parentUUID": "5b166d43-e3ff-4969-863b-268783f85946",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Make a field hidden and check field behaviour",
              "fullTitle": "Test the functionality of custom form Make a field hidden and check field behaviour",
              "timedOut": null,
              "duration": 8643,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "ctmFieldSettingScript(\"hidden\", \"Hidden\");",
              "err": {},
              "uuid": "35346c6f-b2df-4d23-99f2-970557cdbe45",
              "parentUUID": "5b166d43-e3ff-4969-863b-268783f85946",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Make a field editable and check field behaviour",
              "fullTitle": "Test the functionality of custom form Make a field editable and check field behaviour",
              "timedOut": null,
              "duration": 9739,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "ctmFieldSettingScript(\"editable\", \"Editable\");",
              "err": {},
              "uuid": "60106e6e-6328-417c-8150-9423082884d8",
              "parentUUID": "5b166d43-e3ff-4969-863b-268783f85946",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fa4d9205-684f-45eb-bca1-786e262990a5",
            "3dcbcfac-b967-4ba9-bf4c-3fd4b50ebfc5",
            "5854cfdb-be20-4d00-a4ee-57df0bb69776",
            "3847a5b1-8a34-4e1f-b346-988e11ae7faf",
            "5f5c224d-9e80-4ea3-9ed5-9158fcc31534",
            "35346c6f-b2df-4d23-99f2-970557cdbe45",
            "60106e6e-6328-417c-8150-9423082884d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 97776,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2c2ef96b-41e2-4815-98fa-fba856038ca2",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_customForm\\3_ctmRecord.js",
      "file": "cypress\\e2e\\lms\\lead\\5_customForm\\3_ctmRecord.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e4cf5abd-bda7-48b5-93c6-e060965002b8",
          "title": "Test the functionality of custom form",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_customForm\\3_ctmRecord.js",
          "file": "cypress\\e2e\\lms\\lead\\5_customForm\\3_ctmRecord.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify custom form record listing after create record",
              "fullTitle": "Test the functionality of custom form Verify custom form record listing after create record",
              "timedOut": null,
              "duration": 8401,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipeline\", {\n  timeout: 10000\n}).then(() => {\n  cy.wait(\"@getBiztab\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const ctmField = response.body.result.find(ele => ele.prop === \"ctm\");\n    cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${ctmField === null || ctmField === void 0 ? void 0 : ctmField.label}\"]`).contains(ctmField === null || ctmField === void 0 ? void 0 : ctmField.label).click();\n    cy.wait(\"@getDependent\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalRecord = response.body.result.values.length;\n      const view = response.body.result.view;\n      if (totalRecord > 0) {\n        const dependenRecord = response.body.result.values.slice(0, 1);\n        // cy.log(JSON.stringify(dependenRecord))\n        // cy.log(JSON.stringify(view))\n        view.forEach(field => {\n          const {\n            id,\n            prop\n          } = field;\n          const value = dependenRecord.map(dependenRecord[id]);\n          cy.log(JSON.stringify(value));\n        });\n      } else {\n        throw new Error(`Custom form record not available`);\n      }\n    });\n  });\n});",
              "err": {
                "message": "Error: Custom form record not available",
                "estack": "Error: Custom form record not available\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/5_customForm/3_ctmRecord.js:67:35)\n    at getRet (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)\n    at <unknown> (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:147616:15)\n    at tryCatcher (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)",
                "diff": null
              },
              "uuid": "87b20f00-061e-489e-9777-17ab5a047d50",
              "parentUUID": "e4cf5abd-bda7-48b5-93c6-e060965002b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "87b20f00-061e-489e-9777-17ab5a047d50"
          ],
          "pending": [],
          "skipped": [],
          "duration": 8401,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6d8df38f-2fa8-4f0d-9a63-7ae1121ea04f",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7bd63d99-3ed4-485a-a1b3-e88f9ee2b579",
          "title": "Test the functionality of bulk edit",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Bulk edit the record",
              "fullTitle": "Test the functionality of bulk edit Bulk edit the record",
              "timedOut": null,
              "duration": 17029,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncyGet('table > thead input').check();\ncyGet('#bulkActions [data-testid=\"Edit\"]').contains(\"Edit\").click();\ncyGet(lead.dialogTitle).should(\"have.text\", \"Bulk record update\");\ncyGet(`[aria-label=\"Select Field\"]`).click();\ncy.wait(\"@getbulkEdit\").then(({\n  response\n}) => {\n  const bulkeditValues = response.body.result.values;\n  const lengthgetbulkEdit = bulkeditValues.length;\n  if (asset === \"contact\") {\n    const otherField = bulkeditValues.find(ele => ele.label !== \"Stage\");\n    if (lengthgetbulkEdit > 5) {\n      buSearchbox(globalSel.search, otherField === null || otherField === void 0 ? void 0 : otherField.label);\n    }\n    budropdownOption(otherField === null || otherField === void 0 ? void 0 : otherField.label).first().click({\n      force: true\n    });\n    if (otherField.selection === \"single\") {\n      handleDropdownField(otherField, `[data-testid=\"fields-box-xhbyf34nj\"]`, `[data-testid=\"buchip-chip-5r51zm55o\"]`);\n    } else {\n      handleDropdownField(otherField, `[data-testid=\"fields-box-xhbyf34nj\"]`);\n    }\n  } else {\n    let stageField = bulkeditValues.find(ele => ele.label === \"Stage\");\n    if (lengthgetbulkEdit > 5) {\n      buSearchbox(globalSel.search, stageField === null || stageField === void 0 ? void 0 : stageField.label);\n    }\n    budropdownOption(stageField === null || stageField === void 0 ? void 0 : stageField.label).first().click({\n      force: true\n    });\n    handleDropdownField(stageField, `[data-testid=\"fields-box-xhbyf34nj\"]`, `[data-testid=\"buchip-chip-5r51zm55o\"]`);\n    if (lengthgetbulkEdit > 1) {\n      const otherField = bulkeditValues.find(ele => ele.label !== \"Stage\");\n      cyGet(`[data-testid=\"staticfieldcard-iconbutton-u6zoboy9a\"]`).click();\n      cyGet(`[aria-label=\"Select Field\"]`).click();\n      if (lengthgetbulkEdit > 5) {\n        buSearchbox(globalSel.search, otherField === null || otherField === void 0 ? void 0 : otherField.label);\n      }\n      budropdownOption(otherField === null || otherField === void 0 ? void 0 : otherField.label).first().click({\n        force: true\n      });\n      if (otherField.selection === \"single\") {\n        handleDropdownField(otherField, `[data-testid=\"fields-box-xhbyf34nj\"]`, `[data-testid=\"buchip-chip-5r51zm55o\"]`);\n      } else {\n        handleDropdownField(otherField, `[data-testid=\"fields-box-xhbyf34nj\"]`);\n      }\n    }\n  }\n  buSaveButton().click();\n  cyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.requestSuccess);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-testid=\"buchip-chip-5r51zm55o\"]`, but never found it. Queried from:\n\n              > cy.get([data-testid=\"68aeae89bdfc22839aab0030\"], [object Object])",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-testid=\"buchip-chip-5r51zm55o\"]`, but never found it. Queried from:\n\n              > cy.get([data-testid=\"68aeae89bdfc22839aab0030\"], [object Object])\n    at budropdownOption (webpack://bu-testing/./cypress/helpers/global.js:71:51)\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:90:28)\n    at getRet (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)",
                "diff": null
              },
              "uuid": "658d6a1a-2897-48d6-b47d-4554d6ce7266",
              "parentUUID": "7bd63d99-3ed4-485a-a1b3-e88f9ee2b579",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "658d6a1a-2897-48d6-b47d-4554d6ce7266"
          ],
          "pending": [],
          "skipped": [],
          "duration": 17029,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "625ebc10-93eb-4a8e-9888-0725d77e5647",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "045f6b23-c5ea-46f4-bb8a-038f3ce53cdc",
          "title": "Test the functionality of bulk Assign",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Single owner assignment",
              "fullTitle": "Test the functionality of bulk Assign Single owner assignment",
              "timedOut": null,
              "duration": 8152,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  const totalOwner = response.body.result.values.length;\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (totalOwner > 5) {\n    buSearchbox(globalSel.search, subLabel[0]);\n  }\n  ownerIndex(ownerLabel[0], subLabel[0]);\n  cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n  buSaveButton().click({\n    force: true\n  });\n});",
              "err": {},
              "uuid": "45ef03c3-bf1d-418a-9aac-355daa062c3f",
              "parentUUID": "045f6b23-c5ea-46f4-bb8a-038f3ce53cdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assign lead equally",
              "fullTitle": "Test the functionality of bulk Assign Assign lead equally",
              "timedOut": null,
              "duration": 5131,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  const totalOwner = response.body.result.values.length;\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (response.body.result.values.length > 1) {\n    if (totalOwner > 5) {\n      buSearchbox(globalSel.search, subLabel[0]);\n    }\n    ownerIndex(ownerLabel[0], subLabel[0]);\n    if (totalOwner > 5) {\n      buSearchbox(globalSel.search, subLabel[1]);\n    }\n    ownerIndex(ownerLabel[1], subLabel[1]);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"eq\"]').click();\n    cyGet('[aria-label=\"Assign lead equally\"]').should(\"have.text\", \"Assign lead equally\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label === ownerLabel[0]);\n      let ownerName_1 = response.body.result.values.filter(ele => ele[ownerFieldId][0].label === ownerLabel[1]);\n      let recordLength = response.body.result.values.length;\n      if (recordLength % 2 === 0) {\n        expect(ownerName).have.length(recordLength / 2);\n        expect(ownerName_1).have.length(recordLength / 2);\n      } else {\n        expect(ownerName).have.length((recordLength + 1) / 2);\n        expect(ownerName_1).have.length((recordLength - 1) / 2);\n      }\n    });\n  } else {\n    ownerIndex(ownerLabel[0], subLabel[0]);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n    });\n  }\n});",
              "err": {},
              "uuid": "08f63176-82a4-4dbb-b6ad-205d5535896b",
              "parentUUID": "045f6b23-c5ea-46f4-bb8a-038f3ce53cdc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assign all lead",
              "fullTitle": "Test the functionality of bulk Assign Assign all lead",
              "timedOut": null,
              "duration": 5293,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (response.body.result.values.length > 1) {\n    ownerIndex(ownerLabel[0], subLabel[0], 1);\n    ownerIndex(ownerLabel[1], subLabel[1], 2);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"all\"]').should(\"be.checked\");\n    cyGet('[aria-label=\"Assign all\"]').should(\"have.text\", \"Assign all\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let ownerName_1 = response.body.result.values.filter(ele => ele[ownerFieldId][1].label == ownerLabel[1]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n      expect(ownerName_1).have.length(recordLength);\n    });\n  } else {\n    ownerIndex(ownerLabel[0], subLabel[0], 1);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"all\"]').should(\"be.checked\");\n    cyGet('[aria-label=\"Assign all\"]').should(\"have.text\", \"Assign all\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n    });\n  }\n  ;\n});",
              "err": {},
              "uuid": "6bfd30e7-91c2-4d39-a43b-4e68f2615133",
              "parentUUID": "045f6b23-c5ea-46f4-bb8a-038f3ce53cdc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "45ef03c3-bf1d-418a-9aac-355daa062c3f",
            "08f63176-82a4-4dbb-b6ad-205d5535896b",
            "6bfd30e7-91c2-4d39-a43b-4e68f2615133"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18576,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d0f41ba1-4e99-4f4c-9f40-1a98e69bf57a",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e20284b8-1255-4410-95ab-74ec687cf45c",
          "title": "Test the functionality of bulk delete",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Soft delete records",
              "fullTitle": "Test the functionality of bulk delete Soft delete records",
              "timedOut": null,
              "duration": 9792,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncy.wait(\"@getRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  if (recordLength === 0) {\n    cyGet('table > thead input').should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    bulkdeletedialogElements(recordLength, asset, \"soft\", remainsRecord);\n  }\n  ;\n});",
              "err": {},
              "uuid": "bec01516-42e0-4e55-81b6-b4ab86a9043f",
              "parentUUID": "e20284b8-1255-4410-95ab-74ec687cf45c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Hard delete records",
              "fullTitle": "Test the functionality of bulk delete Hard delete records",
              "timedOut": null,
              "duration": 3161,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncy.wait(\"@getRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  if (recordLength === 0) {\n    cyGet('table > thead input').should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    bulkdeletedialogElements(recordLength, asset, \"hard\", remainsRecord);\n  }\n  ;\n});",
              "err": {},
              "uuid": "e2907dcf-c92e-404c-9658-782b31be8c5d",
              "parentUUID": "e20284b8-1255-4410-95ab-74ec687cf45c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bec01516-42e0-4e55-81b6-b4ab86a9043f",
            "e2907dcf-c92e-404c-9658-782b31be8c5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12953,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "45199024-041c-4634-9c75-475637d7fc19",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
      "file": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a703e1b9-6174-4362-b741-66441cc72b75",
          "title": "Navigate the lead page and test grid view component",
          "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
          "file": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "22d9cd12-02de-4a40-b7d0-0a490cb4830a",
              "title": "Global search for grid view",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "search using mobile number",
                  "fullTitle": "Navigate the lead page and test grid view component Global search for grid view search using mobile number",
                  "timedOut": null,
                  "duration": 7153,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const {\n    label,\n    catId\n  } = response.body.result;\n  cy.wait(\"@recordGrid\", {\n    timeout: 15000\n  }).then(({\n    response\n  }) => {\n    var _response$body$result;\n    let systemPhnFieldId = (_response$body$result = response.body.result.view.columns.find(ele => ele.label === \"Mobile number\")) === null || _response$body$result === void 0 ? void 0 : _response$body$result.id;\n    if (!systemPhnFieldId) {\n      const reqQs = {\n        module,\n        asset,\n        catId\n      };\n      const reqHeader = {\n        Authorization: `Bearer ${Cypress.env(\"token\")}`\n      };\n      request(\"GET\", gridViewUrl, reqHeader, reqQs).then(({\n        body\n      }) => {\n        const mobField = body.result.values.find(ele => ele.label === \"Mobile number\");\n        const payload = {\n          fields: [mobField === null || mobField === void 0 ? void 0 : mobField.id]\n        };\n        request(\"PATCH\", gridViewUrl, reqHeader, reqQs, payload).then(({\n          body\n        }) => {\n          expect(body).to.have.property(\"success\", true);\n        });\n      });\n      cy.reload();\n      cy.wait(\"@recordGrid\", {\n        timeout: 15000\n      }).then(({\n        response\n      }) => {\n        var _response$body$result2;\n        systemPhnFieldId = (_response$body$result2 = response.body.result.view.columns.find(ele => ele.label === \"Mobile number\")) === null || _response$body$result2 === void 0 ? void 0 : _response$body$result2.id;\n        performSearch(systemPhnFieldId, response.body.result);\n      });\n    } else {\n      performSearch(systemPhnFieldId, response.body.result);\n    }\n  });\n});",
                  "err": {},
                  "uuid": "3e54673c-0f6b-44bf-bb0d-58db108f632d",
                  "parentUUID": "22d9cd12-02de-4a40-b7d0-0a490cb4830a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3e54673c-0f6b-44bf-bb0d-58db108f632d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7153,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0f9abd20-b543-415f-9c99-8ee1c7183318",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
      "file": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ad1131fc-c5d8-415d-bd7d-67a2f00660e9",
          "title": "Nevigate the lead page and test grid view componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
          "file": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add Field on grid view",
              "fullTitle": "Nevigate the lead page and test grid view componet Add Field on grid view",
              "timedOut": null,
              "duration": 13239,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const {\n    label,\n    catId\n  } = response.body.result;\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const allGroup = response.body.result.values.filter(ele => ele.group === label);\n    const selectedField = response.body.result.selectedProperties;\n    const lastIndexfield = allGroup.slice(-1);\n    if (selectedField.length >= 20) {\n      const attachFieldOnView = selectedField.slice(0, 10);\n      const apiUrl = Cypress.env(\"apiurl\");\n      const gridViewUrl = `${apiUrl}/fms/views/grid`;\n      const reqQs = {\n        module,\n        asset,\n        \"catId\": catId\n      };\n      const reqHeader = {\n        Authorization: \"Bearer \" + Cypress.env(\"token\")\n      };\n      const payload = {\n        fields: [...attachFieldOnView]\n      };\n      request(\"PATCH\", gridViewUrl, reqHeader, reqQs, payload).then(({\n        body\n      }) => {\n        expect(body).to.have.property(\"success\", true);\n      });\n      cyGet(`[data-testid=\"cancel\"]`).click();\n      cyGet('#fields').click();\n      cyGet('#editCol').click();\n    }\n    setFieldOnViewConfig('[role=\"dialog\"] [type=\"text\"]', lastIndexfield[0].label, lead.chkbxOnfieldConfig);\n    cyGet(lead.typeBtn).contains(\"Apply\").click();\n    cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\").then(({\n      response\n    }) => {\n      let fieldView = response.body.result.view.columns.filter(ele => ele.label == lastIndexfield[0].label);\n      expect(fieldView[0].label).to.eq(lastIndexfield[0].label);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 4000ms: `cy.clear()` failed because this element:\n\n`<input aria-invalid=\"false\" id=\":r57:\" placeholder=\"Search...\" type=\"text\" class=\"MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd css-zx4ddm\" value=\"\">`\n\nis being covered by another element:\n\n`<div class=\"jss112 MuiBox-root css-0\" data-testid=\"notificationpopupcomponent-slide-7prnho3oe\" style=\"translate: 0px -130px; width: 580px; z-index: 1398; transform: none; transition: transform 225ms cubic-bezier(0, 0, 0.2, 1);\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying after 4000ms: `cy.clear()` failed because this element:\n\n`<input aria-invalid=\"false\" id=\":r57:\" placeholder=\"Search...\" type=\"text\" class=\"MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd css-zx4ddm\" value=\"\">`\n\nis being covered by another element:\n\n`<div class=\"jss112 MuiBox-root css-0\" data-testid=\"notificationpopupcomponent-slide-7prnho3oe\" style=\"translate: 0px -130px; width: 580px; z-index: 1398; transform: none; transition: transform 225ms cubic-bezier(0, 0, 0.2, 1);\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at ensureIsDescendent (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:114504:68)\n    at ensureDescendents (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:114555:5)\n    at ensureDescendentsAndScroll (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:114561:14)\n    at ensureElIsNotCovered (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:114692:5)\n    at runAllChecks (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:114891:52)\n    at retryActionability (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:114928:16)\n    at tryCatcher (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:147344:68)\n    at <unknown> (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:147285:14)\n    at tryCatcher (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:5420:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/grid.js:42:24)\n    at getRet (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://one.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)",
                "diff": null
              },
              "uuid": "73e532ce-bec8-4202-800f-dcb5bbcafee2",
              "parentUUID": "ad1131fc-c5d8-415d-bd7d-67a2f00660e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Field from grid view",
              "fullTitle": "Nevigate the lead page and test grid view componet Remove Field from grid view",
              "timedOut": null,
              "duration": 7281,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipName = response.body.result.label;\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let allGroup = response.body.result.values.filter(ele => ele.group == pipName);\n    let lstindexfield = allGroup.slice(-1);\n    cy.get('[role=\"dialog\"] [type=\"text\"]').clear().type(lstindexfield[0].label);\n    cy.get('.MuiBox-root > .MuiListItem-root input').first().then($ele => {\n      if ($ele.is(':checked')) {\n        cy.wrap($ele).first().click();\n      } else {\n        cy.wrap($ele).first().click(); //check then\n        cy.wrap($ele).first().click(); // uncheck\n      }\n    });\n    cy.get(lead.typeBtn).contains(\"Apply\").click();\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\").then(({\n      response\n    }) => {\n      let fieldView = response.body.result.view.columns.map(ele => ele.label);\n      fieldView.forEach(ele => {\n        expect(ele).be.not.eq(lstindexfield[0].label);\n      });\n    });\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 4000ms: `cy.clear()` failed because this element:\n\n`<input aria-invalid=\"false\" id=\":r2d:\" placeholder=\"Search...\" type=\"text\" class=\"MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd css-zx4ddm\" value=\"\">`\n\nis being covered by another element:\n\n`<div class=\"jss177 MuiBox-root css-0\" data-testid=\"notificationpopupcomponent-slide-7prnho3oe\" style=\"translate: 0px -130px; width: 580px; z-index: 1398; transform: none; transition: transform 225ms cubic-bezier(0, 0, 0.2, 1);\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying after 4000ms: `cy.clear()` failed because this element:\n\n`<input aria-invalid=\"false\" id=\":r2d:\" placeholder=\"Search...\" type=\"text\" class=\"MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd css-zx4ddm\" value=\"\">`\n\nis being covered by another element:\n\n`<div class=\"jss177 MuiBox-root css-0\" data-testid=\"notificationpopupcomponent-slide-7prnho3oe\" style=\"translate: 0px -130px; width: 580px; z-index: 1398; transform: none; transition: transform 225ms cubic-bezier(0, 0, 0.2, 1);\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at ensureIsDescendent (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:114504:68)\n    at ensureDescendents (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:114555:5)\n    at ensureDescendentsAndScroll (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:114561:14)\n    at ensureElIsNotCovered (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:114692:5)\n    at runAllChecks (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:114891:52)\n    at retryActionability (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:114928:16)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147344:68)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147285:14)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:5420:46)\nFrom Your Spec Code:\n    at Object.proxyGetter [as get] (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:80410:22)\n    at exists (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:146526:26)\n    at elExists (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:146541:10)\n    at ensureExistence (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:146722:22)\n    at onFailFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:146751:53)",
                "diff": null
              },
              "uuid": "f4e56a99-0189-49ab-8fe0-948e5d58e6ec",
              "parentUUID": "ad1131fc-c5d8-415d-bd7d-67a2f00660e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Re-order field on grid view config page",
              "fullTitle": "Nevigate the lead page and test grid view componet Re-order field on grid view config page",
              "timedOut": null,
              "duration": 5102,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(() => {\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let selectedProp = response.body.result.selectedProperties;\n    if (selectedProp.length > 3) {\n      cy.dragAndDrop(`[data-rbd-draggable-id=\"${selectedProp[1]}\"]`, `[data-rbd-draggable-id=\"${selectedProp[2]}\"]`);\n      onesecondWait();\n      cyGet(lead.typeBtn).contains(\"Apply\").click();\n      cy.wait(\"@recordGrid\");\n      cy.wait(\"@recordGrid\").then(({\n        response\n      }) => {\n        expect(response.body.result.view.columns[1]).have.property(\"id\", selectedProp[2]);\n        expect(response.body.result.view.columns[2]).have.property(\"id\", selectedProp[1]);\n      });\n    } else {\n      this.skip();\n    }\n  });\n});",
              "err": {},
              "uuid": "d02edf0b-be6a-4c40-861b-3bad66f3cff5",
              "parentUUID": "ad1131fc-c5d8-415d-bd7d-67a2f00660e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Redirect on field setting page after clicking on \"manage field\" button",
              "fullTitle": "Nevigate the lead page and test grid view componet Redirect on field setting page after clicking on \"manage field\" button",
              "timedOut": null,
              "duration": 2999,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editCol').click();\ncyGet(`[data-testid=\"Manage fields\"]`).contains(\"Manage fields\").click();\ncy.url().should(\"eq\", `${updatedUrl}/setting/properties`);\ncyGet('.MuiTypography-caption').contains(`Fields store information about ${moduleName}.`);",
              "err": {},
              "uuid": "188af094-8aaa-4d90-94c7-50af33910ac6",
              "parentUUID": "ad1131fc-c5d8-415d-bd7d-67a2f00660e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the detail page",
              "fullTitle": "Nevigate the lead page and test grid view componet Should redirected to the detail page",
              "timedOut": null,
              "duration": 1967,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@recordGrid\").then(({\n  response\n}) => {\n  const recordId = response.body.result.values[0].id;\n  const uidField = response.body.result.view.columns.find(ele => ele.prop === \"uid\");\n  const uidFieldValue = response.body.result.values[0][uidField.id];\n  cy.contains(`tr`, uidFieldValue).find(`td`).contains(uidFieldValue).click({\n    force: true\n  });\n  cy.url().should(\"contain\", `${updatedUrl}/${asset}s/${recordId}`);\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'id')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'id')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/grid.js:139:60)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147616:15)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)",
                "diff": null
              },
              "uuid": "948f1a7d-eead-48f3-9806-21a36e81bba2",
              "parentUUID": "ad1131fc-c5d8-415d-bd7d-67a2f00660e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d02edf0b-be6a-4c40-861b-3bad66f3cff5",
            "188af094-8aaa-4d90-94c7-50af33910ac6"
          ],
          "failures": [
            "73e532ce-bec8-4202-800f-dcb5bbcafee2",
            "f4e56a99-0189-49ab-8fe0-948e5d58e6ec",
            "948f1a7d-eead-48f3-9806-21a36e81bba2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 30588,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3d73427c-6f51-45bf-ba2c-36fc3ab00a0f",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
      "file": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0b2d8422-4c98-4b24-8b7f-f6e6b6f5f6bb",
          "title": "Nevigate the lead page and test kanban view componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
          "file": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify uid field should be required and selected on kanban view",
              "fullTitle": "Nevigate the lead page and test kanban view componet Verify uid field should be required and selected on kanban view",
              "timedOut": null,
              "duration": 14628,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncy.wait(\"@kanbanViewConfig\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const getKanbanResult = response.body.result;\n  const uidField = getKanbanResult.values.find(ele => ele.required === true);\n  expect(uidField).has.property(\"label\", `${assetName} Id`);\n  expect(uidField).has.property(\"required\", true);\n  expect(uidField).has.property(\"selected\", true);\n  cyGet('[variant=\"standard\"] [type=\"search\"]').type(uidField === null || uidField === void 0 ? void 0 : uidField.label);\n  cyGet(lead.chkbxOnfieldConfig).first().should(\"be.checked\").and(\"be.disabled\");\n});",
              "err": {},
              "uuid": "d78551cf-dbf1-4579-ba71-6755f058988c",
              "parentUUID": "0b2d8422-4c98-4b24-8b7f-f6e6b6f5f6bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Field on Kanban view if selected field less than 5",
              "fullTitle": "Nevigate the lead page and test kanban view componet Add Field on Kanban view if selected field less than 5",
              "timedOut": null,
              "duration": 5510,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncy.wait(\"@kanbanViewConfig\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const getKanbanResult = response.body.result;\n  const selectedFields = getKanbanResult.selectedProperties;\n  if (selectedFields.length < 5) {\n    const unselectedFields = getKanbanResult.values.find(ele => ele.selected === false);\n    cy.log(JSON.stringify(selectedFields));\n    cy.log(JSON.stringify(unselectedFields));\n    setFieldOnViewConfig('[variant=\"standard\"] [type=\"search\"]', unselectedFields === null || unselectedFields === void 0 ? void 0 : unselectedFields.label, lead.chkbxOnfieldConfig);\n    cyGet(lead.typeBtn).contains(\"Save\").click();\n  } else {\n    cy.log(`5 field already selected`);\n  }\n});",
              "err": {},
              "uuid": "df91d720-94ce-4a99-a7d2-b43ab99d09fe",
              "parentUUID": "0b2d8422-4c98-4b24-8b7f-f6e6b6f5f6bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Field on Kanban view",
              "fullTitle": "Nevigate the lead page and test kanban view componet Remove Field on Kanban view",
              "timedOut": null,
              "duration": 6597,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet('[data-rbd-droppable-id=\"column\"]').children().then(childlength => {\n  let count = Cypress.$(childlength).length;\n  let nth = count - 1;\n  cy.log('option count: ', count);\n  cyGet(`[data-rbd-droppable-id=\"column\"] > :nth-child(${nth}) > :nth-child(1) > :nth-child(1) > :nth-child(2)`).click();\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();",
              "err": {},
              "uuid": "a3bdcd48-47b1-47f0-8428-ba4e2c0ffbf8",
              "parentUUID": "0b2d8422-4c98-4b24-8b7f-f6e6b6f5f6bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Card style: Compact",
              "fullTitle": "Nevigate the lead page and test kanban view componet Card style: Compact",
              "timedOut": null,
              "duration": 3284,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet(`[name=\"compact\"]`).then($ele => {\n  if ($ele.is(':checked')) {\n    cy.log(`Compact already checked`);\n  } else {\n    cy.wrap($ele).check();\n  }\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\ncy.wait(\"@recordKanben\");\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.config).have.property(\"cardStyle\", \"compact\");\n});",
              "err": {},
              "uuid": "81b61242-9ba5-4a1f-b16f-190a9af4da4a",
              "parentUUID": "0b2d8422-4c98-4b24-8b7f-f6e6b6f5f6bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Card style: Default",
              "fullTitle": "Nevigate the lead page and test kanban view componet Card style: Default",
              "timedOut": null,
              "duration": 4381,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet(`[name=\"default\"]`).then($ele => {\n  if ($ele.is(':checked')) {\n    cy.log(`Default already checked`);\n  } else {\n    cy.wrap($ele).check();\n  }\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\ncy.wait(1000);\ncy.wait(\"@recordKanben\");\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.config).have.property(\"cardStyle\", \"default\");\n});",
              "err": {},
              "uuid": "5dafd448-0fff-45dd-a496-25a2cbf44a82",
              "parentUUID": "0b2d8422-4c98-4b24-8b7f-f6e6b6f5f6bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Re-order field on kanban view config page",
              "fullTitle": "Nevigate the lead page and test kanban view componet Re-order field on kanban view config page",
              "timedOut": null,
              "duration": 5056,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncy.wait(\"@kanbanViewConfig\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let selectedProp = response.body.result.selectedProperties;\n  expect(response.body.result.selectedProperties).be.length.greaterThan(2);\n  cy.dragAndDrop(`[data-rbd-draggable-id=\"${selectedProp[1]}\"]`, `[data-rbd-draggable-id=\"${selectedProp[2]}\"]`);\n  onesecondWait();\n  cyGet(lead.typeBtn).contains(\"Save\").click();\n  cy.wait(\"@recordKanben\");\n  cy.wait(\"@recordKanben\").then(({\n    response\n  }) => {\n    expect(response.body.result.config.fields[0]).have.property(\"id\", selectedProp[2]);\n    expect(response.body.result.config.fields[1]).have.property(\"id\", selectedProp[1]);\n  });\n});",
              "err": {},
              "uuid": "069f6038-c27b-4686-a464-cbe4fc47231a",
              "parentUUID": "0b2d8422-4c98-4b24-8b7f-f6e6b6f5f6bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the create record form after clicking the \"Add Lead\" button",
              "fullTitle": "Nevigate the lead page and test kanban view componet Should redirected to the create record form after clicking the \"Add Lead\" button",
              "timedOut": null,
              "duration": 6546,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData = response.body.result.values[stageOnKanban[1]];\n  cyGet(`[data-rbd-draggable-id=\"${stageOnKanban[1]}\"] > :nth-child(1) > :nth-child(1)> :nth-child(1) > :nth-child(1)`).should(\"have.text\", stageData.label);\n  cyGet(`[data-rbd-draggable-id=\"${stageOnKanban[1]}\"] > :nth-child(1) > :nth-child(4) button`).click();\n  cy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").type(faker.string.numeric(10));\n  cy.componentLabel(lead.formLabel, \"Stage\", \"span\").should(\"have.text\", stageData.label);\n  cyGet(lead.saveBtn).click();\n  cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Created successfully.\");\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 4000ms: `cy.type()` failed because this element is not visible:\n\n`<input aria-invalid=\"false\" autocomplete=\"off\" id=\"65166fe89a2d3227fe64e0be\" placeholder=\"Enter mobile number\" required=\"\" type=\"tel\" class=\"MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd css-zx4ddm\" value=\"\">`\n\nThis element `<input#65166fe89a2d3227fe64e0be.MuiInputBase-input.MuiInput-input.MuiInputBase-inputAdornedEnd.css-zx4ddm>` is not visible because it has CSS property: `position: fixed` and it's being covered by another element:\n\n`<div class=\"jss178 MuiBox-root css-0\" data-testid=\"notificationpopupcomponent-slide-7prnho3oe\" style=\"translate: 0px; width: 600px; z-index: 1400; transform: none; transition: transform 225ms cubic-bezier(0, 0, 0.2, 1);\">...</div>`\n\nFix this problem, or use `{force: true}` to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying after 4000ms: `cy.type()` failed because this element is not visible:\n\n`<input aria-invalid=\"false\" autocomplete=\"off\" id=\"65166fe89a2d3227fe64e0be\" placeholder=\"Enter mobile number\" required=\"\" type=\"tel\" class=\"MuiInputBase-input MuiInput-input MuiInputBase-inputAdornedEnd css-zx4ddm\" value=\"\">`\n\nThis element `<input#65166fe89a2d3227fe64e0be.MuiInputBase-input.MuiInput-input.MuiInputBase-inputAdornedEnd.css-zx4ddm>` is not visible because it has CSS property: `position: fixed` and it's being covered by another element:\n\n`<div class=\"jss178 MuiBox-root css-0\" data-testid=\"notificationpopupcomponent-slide-7prnho3oe\" style=\"translate: 0px; width: 600px; z-index: 1400; transform: none; transition: transform 225ms cubic-bezier(0, 0, 0.2, 1);\">...</div>`\n\nFix this problem, or use `{force: true}` to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at runVisibilityCheck (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:148517:58)\n    at Object.isNotHiddenByAncestors (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:148534:10)\n    at runAllChecks (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:114892:24)\n    at retryActionability (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:114928:16)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147344:68)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147285:14)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:5420:46)\nFrom Your Spec Code:\n    at Object.proxyGetter [as get] (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:80410:22)\n    at exists (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:146526:26)\n    at elExists (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:146541:10)\n    at ensureExistence (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:146722:22)\n    at onFailFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:146751:53)",
                "diff": null
              },
              "uuid": "74544ad2-3bf7-431f-9c60-4694a555f200",
              "parentUUID": "0b2d8422-4c98-4b24-8b7f-f6e6b6f5f6bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Drag and drop an item one stage to another stage",
              "fullTitle": "Nevigate the lead page and test kanban view componet Drag and drop an item one stage to another stage",
              "timedOut": null,
              "duration": 17332,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[1]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cy.dragAndDrop(`[data-rbd-draggable-id=\"${itemId_1[0]}\"]`, `[data-rbd-draggable-id=\"${stageOnKanban[0]}\"]`);\n  cy.wait(1000);\n  cy.wait(\"@kanbanStage\").then(({\n    response\n  }) => {\n    expect(response.body).have.property(\"message\", \"Updated successfully.\");\n    expect(response.body.result.source).have.property(\"id\", stageOnKanban[1]);\n    expect(response.body.result.target).have.property(\"id\", stageOnKanban[0]);\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-rbd-draggable-id=\"undefined\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-rbd-draggable-id=\"undefined\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:3:47)\n    at Context.eval (webpack://bu-testing/./cypress/support/commands.js:216:10)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141663:43)",
                "diff": null
              },
              "uuid": "bd17dc18-9461-48e2-a97c-303156693e4b",
              "parentUUID": "0b2d8422-4c98-4b24-8b7f-f6e6b6f5f6bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the detail page after clicking the \"edit\" button",
              "fullTitle": "Nevigate the lead page and test kanban view componet Should redirected to the detail page after clicking the \"edit\" button",
              "timedOut": null,
              "duration": 17761,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[0]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cyGet(`[data-rbd-draggable-id=\"${itemId_1[0]}\"] [aria-controls=\"more\"]`).click();\n  cyGet('[role=\"menu\"] > :nth-child(1) > li').first().find(\"span\").contains(\"Edit\").click();\n  cy.url().should(\"contain\", `${updatedUrl}/${asset}s/${itemId_1[0]}`);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-rbd-draggable-id=\"undefined\"] [aria-controls=\"more\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-rbd-draggable-id=\"undefined\"] [aria-controls=\"more\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:3:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/kanban.js:163:12)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)",
                "diff": null
              },
              "uuid": "93a1c945-9a24-4908-b11c-30f64dc41251",
              "parentUUID": "0b2d8422-4c98-4b24-8b7f-f6e6b6f5f6bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete record from kanban view page",
              "fullTitle": "Nevigate the lead page and test kanban view componet delete record from kanban view page",
              "timedOut": null,
              "duration": 17633,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let dialogDecs = `Are you sure you want to delete this ${asset}?`;\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[0]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cyGet(`[data-rbd-draggable-id=\"${itemId_1[0]}\"] [aria-controls=\"more\"]`).click();\n  cyGet('[role=\"menu\"] > :nth-child(1) > li').last().find(\"span\").contains(\"Delete\").click();\n  cy.roleDialog(lead.dialogTitle, `Delete ${asset}`, lead.dialogDesc, dialogDecs, '#delete', \"Delete\");\n  cy.wait(\"@deleteRecord\").then(({\n    response\n  }) => {\n    expect(response.body).have.property(\"message\", \"Deleted successfully.\");\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-rbd-draggable-id=\"undefined\"] [aria-controls=\"more\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-rbd-draggable-id=\"undefined\"] [aria-controls=\"more\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:3:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/kanban.js:176:12)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)",
                "diff": null
              },
              "uuid": "1ad51b27-8458-44f6-8602-1ece6cdb8dd3",
              "parentUUID": "0b2d8422-4c98-4b24-8b7f-f6e6b6f5f6bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d78551cf-dbf1-4579-ba71-6755f058988c",
            "df91d720-94ce-4a99-a7d2-b43ab99d09fe",
            "a3bdcd48-47b1-47f0-8428-ba4e2c0ffbf8",
            "81b61242-9ba5-4a1f-b16f-190a9af4da4a",
            "5dafd448-0fff-45dd-a496-25a2cbf44a82",
            "069f6038-c27b-4686-a464-cbe4fc47231a"
          ],
          "failures": [
            "74544ad2-3bf7-431f-9c60-4694a555f200",
            "bd17dc18-9461-48e2-a97c-303156693e4b",
            "93a1c945-9a24-4908-b11c-30f64dc41251",
            "1ad51b27-8458-44f6-8602-1ece6cdb8dd3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 98728,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "37e97770-4227-40ec-88b8-9b78421a3ca8",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
      "file": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "966951a4-b1e0-48d2-892e-4f3b2d692a14",
          "title": "Nevigate the setting page and delete and restore field",
          "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
          "file": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete or detach a field and verify that it is stored in the deleted field section",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete or detach a field and verify that it is stored in the deleted field section",
              "timedOut": null,
              "duration": 10264,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${updatedUrl}/setting/properties`);\n// cy.visit(`${Cypress.env(\"lmsUrl\")}/setting/properties`)\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const nonSystemFields = response.body.result.values.filter(field => field.system === false);\n  // cy.log(JSON.stringify(nonSystemFields))\n  let fieldData = nonSystemFields.slice(-1);\n  // cy.log(JSON.stringify(fieldData))\n  let attachedCount = nonSystemFields[0].attachedCount.count;\n  if (attachedCount <= 1) {\n    (0, _global.fieldSearchAndAct)(fieldData[0].label, \"#delete\");\n    cy.get(\"#delete\").click();\n  } else {\n    (0, _global.fieldSearchAndAct)(fieldData[0].label, \"#detach\");\n    cy.get(\"#detach\").click();\n  }\n  cy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n    timeout: 10000\n  }).contains(\"Deleted fields\").click();\n  cy.wait(\"@binList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let binField = response.body.result.values.map(ele => ele.label);\n    cy.log(JSON.stringify(binField));\n    // if (response.body.result.pages.totalNoOfPages == 1) {\n    //     expect(binField.slice(-1)).to.be.contains(fieldData[0].label)\n    // } else {\n    //     cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click()\n    //     cy.wait(\"@binList\", { timeout: 10000 }).then(({ response }) => {\n    //         let binField = response.body.result.values.map(ele => ele.label)\n    //         expect(binField.slice(-1)).to.be.contains(fieldData[0].label)\n    //     })\n    // }\n  });\n});",
              "err": {},
              "uuid": "64cfe7c8-0763-4fa1-aa73-d9dd0ca7363d",
              "parentUUID": "966951a4-b1e0-48d2-892e-4f3b2d692a14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore field from field tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Restore field from field tab",
              "timedOut": null,
              "duration": 1572,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Restore 1 field ?\";\nlet desc = \"Are you sure you want to  restore 1 field ?\";\ncy.visit(`${updatedUrl}/setting/properties`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Deleted fields\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#restore\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[data-testid=\"Restore\"]`, \"Restore\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:77:58)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)",
                "diff": ""
              },
              "uuid": "acb7e1a3-c24a-4759-a7c3-84971c1e1da5",
              "parentUUID": "966951a4-b1e0-48d2-892e-4f3b2d692a14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete field from field tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete field from field tab",
              "timedOut": null,
              "duration": 1209,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Delete 1 field ?\";\nlet desc = \"Are you sure you want to  delete 1 field ?\";\ncy.visit(`${updatedUrl}/setting/properties`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Deleted fields\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#delete\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:90:58)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)",
                "diff": ""
              },
              "uuid": "74c93f9f-1d9b-4f9d-878e-9d4c6459b379",
              "parentUUID": "966951a4-b1e0-48d2-892e-4f3b2d692a14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter single line field and verify column with rows us",
              "fullTitle": "Nevigate the setting page and delete and restore field Filter single line field and verify column with rows us",
              "timedOut": null,
              "duration": 5411,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.recordCountOnPage(\"10\");\ncy.get('[aria-label=\"Select field type\"]').click();\nfieldTypeFilterSel(\"Multi line text\");\ncy.get('.MuiButton-endIcon').click();\ncy.wait(\"@binList\");\ncy.wait(\"@binList\");\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  let binFieldLabel = response.body.result.values.map(ele => ele.label);\n  let deletedType = response.body.result.values.map(ele => {\n    return ele.type.charAt(0).toUpperCase() + ele.type.slice(1);\n  });\n  let deletedBy = response.body.result.values.map(ele => ele.deletedBy);\n  let userName = deletedBy.map(key => {\n    let label = key.label;\n    return label;\n  });\n  let fieldTypeArray = Array(binFieldLabel.length).fill(\"Multi line text\");\n  verifyTablecolNrow(lead.thead, 2, \"Field name\", lead.tbody, binFieldLabel);\n  verifyTablecolNrow(lead.thead, 3, \"Field type\", lead.tbody, fieldTypeArray);\n  verifyTablecolNrow(lead.thead, 4, \"Deleted by\", lead.tbody, userName);\n  verifyTablecolNrow(lead.thead, 5, \"Deleted type\", lead.tbody, deletedType);\n});",
              "err": {},
              "uuid": "139f79cf-72c7-45b1-8379-2fa7ca6294b5",
              "parentUUID": "966951a4-b1e0-48d2-892e-4f3b2d692a14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore field from bin tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Restore field from bin tab",
              "timedOut": null,
              "duration": 2953,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let title = \"Restore 1 field ?\";\nlet desc = \"Are you sure you want to restore 1 field ? \";\ncy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#restore\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Restore\");\n});",
              "err": {},
              "uuid": "aae93c5c-6e22-4f85-8ad8-fae6adb90371",
              "parentUUID": "966951a4-b1e0-48d2-892e-4f3b2d692a14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete field from bin tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete field from bin tab",
              "timedOut": null,
              "duration": 3181,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let title = \"Delete 1  field ?\";\nlet desc = \"Are you sure you want to delete 1 field ? \";\ncy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#delete\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n});",
              "err": {},
              "uuid": "78a6e151-8324-448f-8a7c-91361102b4c2",
              "parentUUID": "966951a4-b1e0-48d2-892e-4f3b2d692a14",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64cfe7c8-0763-4fa1-aa73-d9dd0ca7363d",
            "139f79cf-72c7-45b1-8379-2fa7ca6294b5",
            "aae93c5c-6e22-4f85-8ad8-fae6adb90371",
            "78a6e151-8324-448f-8a7c-91361102b4c2"
          ],
          "failures": [
            "acb7e1a3-c24a-4759-a7c3-84971c1e1da5",
            "74c93f9f-1d9b-4f9d-878e-9d4c6459b379"
          ],
          "pending": [],
          "skipped": [],
          "duration": 24590,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "33f438c5-779b-493b-96b9-17a67985f5b0",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
      "file": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8a478de9-6395-4853-ab27-39e7a5e9ba26",
          "title": "Test the functionality of restore lead from bin",
          "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
          "file": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check if the Cancel button is working when restoring lead from bin",
              "fullTitle": "Test the functionality of restore lead from bin Check if the Cancel button is working when restoring lead from bin",
              "timedOut": null,
              "duration": 7633,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(lead.typeBtn).contains(\"Delete\").should(\"be.disabled\");\ncy.get(lead.typeBtn).contains(\"Restore\").should(\"be.disabled\");\ncy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  uidFeild = response.body.result.view.columns.find(fld => fld.prop === \"uid\");\n  const msg1 = `Restore ${recordLength} ${asset} ?`;\n  const msg2 = `Are you sure you want to restore ${recordLength} ${asset} ? `;\n  if (totalRecord === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(totalRecord).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Restore\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, lead.typeBtn, \"Cancel\");\n    cy.wait(500);\n    cy.get(lead.countOnGrid).contains(totalRecord);\n  }\n});",
              "err": {},
              "uuid": "7d393242-911a-4643-8991-fa24f84f5bf4",
              "parentUUID": "8a478de9-6395-4853-ab27-39e7a5e9ba26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore the lead from bin",
              "fullTitle": "Test the functionality of restore lead from bin Restore the lead from bin",
              "timedOut": null,
              "duration": 2205,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  let msg1 = `Restore ${recordLength} lead ?`;\n  let msg2 = `Are you sure you want to restore ${recordLength} lead ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Restore\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `.MuiDialogActions-root ${lead.typeBtn}`, \"Restore\");\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Request successful.\");\n    cy.get(lead.countOnGrid).contains(remainsRecord);\n  }\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'label')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'label')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/record.js:51:43)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147616:15)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)",
                "diff": null
              },
              "uuid": "3328e42c-bdb5-49fe-b6c4-3cdf3aeccbe5",
              "parentUUID": "8a478de9-6395-4853-ab27-39e7a5e9ba26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check if the Cancel button is working when deleting lead from bin",
              "fullTitle": "Test the functionality of restore lead from bin Check if the Cancel button is working when deleting lead from bin",
              "timedOut": null,
              "duration": 1734,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let msg1 = `Delete ${recordLength} ${asset} ?`;\n  let msg2 = `Are you sure you want to delete ${recordLength} ${asset} ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, lead.typeBtn, \"Cancel\");\n    cy.wait(500);\n    cy.get(lead.countOnGrid).contains(totalRecord);\n  }\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'label')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'label')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/record.js:70:43)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147616:15)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)",
                "diff": null
              },
              "uuid": "ff61a2d8-f9b8-4d6a-9b37-c17fd79ceefc",
              "parentUUID": "8a478de9-6395-4853-ab27-39e7a5e9ba26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the lead from bin",
              "fullTitle": "Test the functionality of restore lead from bin Delete the lead from bin",
              "timedOut": null,
              "duration": 1915,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  let msg1 = `Delete ${recordLength} ${asset} ?`;\n  let msg2 = `Are you sure you want to delete ${recordLength} ${asset} ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Deleted successfully.\");\n    cy.get(lead.countOnGrid).contains(remainsRecord);\n  }\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'label')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'label')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/record.js:90:43)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147616:15)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)",
                "diff": null
              },
              "uuid": "4c4a2c40-a804-4f28-b827-45b371aaa1ca",
              "parentUUID": "8a478de9-6395-4853-ab27-39e7a5e9ba26",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d393242-911a-4643-8991-fa24f84f5bf4"
          ],
          "failures": [
            "3328e42c-bdb5-49fe-b6c4-3cdf3aeccbe5",
            "ff61a2d8-f9b8-4d6a-9b37-c17fd79ceefc",
            "4c4a2c40-a804-4f28-b827-45b371aaa1ca"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13487,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[datetime]",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "Buopso-UI-Report",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "reportFilename": "[datetime]",
        "timestamp": "isoDateTime",
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\.jsons",
        "saveJson": true
      },
      "version": "6.2.0"
    }
  }
}