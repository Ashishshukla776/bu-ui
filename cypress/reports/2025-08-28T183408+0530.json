{
  "stats": {
    "suites": 50,
    "tests": 233,
    "passes": 214,
    "pending": 4,
    "failures": 15,
    "testsRegistered": 233,
    "passPercent": 91.84549356223177,
    "pendingPercent": 1.7167381974248928,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-08-28T12:21:58.071Z",
    "end": "2025-08-28T13:04:08.389Z",
    "duration": 2530318
  },
  "results": [
    {
      "uuid": "5f6542b8-6648-447c-9f7d-e67c189e74b5",
      "title": "",
      "fullFile": "cypress\\e2e\\auth\\login.js",
      "file": "cypress\\e2e\\auth\\login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "86d3b34e-1345-4f3c-b9f1-9cb4932d06bd",
          "title": "Test case for login",
          "fullFile": "cypress\\e2e\\auth\\login.js",
          "file": "cypress\\e2e\\auth\\login.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Pass invalid email",
              "fullTitle": "Test case for login Pass invalid email",
              "timedOut": null,
              "duration": 1972,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(\"abc.xyzgmail.com\");\n  cy.get('.MuiFormHelperText-root').should(\"contain\", \"Please provide proper username\");\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Please enter a valid email.\");",
              "err": {},
              "uuid": "174b7414-59b6-41f8-ad23-20257a63ec4b",
              "parentUUID": "86d3b34e-1345-4f3c-b9f1-9cb4932d06bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass wrong email",
              "fullTitle": "Test case for login Pass wrong email",
              "timedOut": null,
              "duration": 799,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(\"abc@xyx.com\");\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"user not found.\");",
              "err": {},
              "uuid": "f6071dcf-ab52-4004-84fd-d6965f4f236a",
              "parentUUID": "86d3b34e-1345-4f3c-b9f1-9cb4932d06bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass invalid password",
              "fullTitle": "Test case for login Pass invalid password",
              "timedOut": null,
              "duration": 1376,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(Cypress.env(\"email\"));\n  cy.get(\"@password\").type(132134344);\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Invalid username or password.\");",
              "err": {},
              "uuid": "3d75ca51-6e5d-4c65-8938-65396332d727",
              "parentUUID": "86d3b34e-1345-4f3c-b9f1-9cb4932d06bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass wrong password",
              "fullTitle": "Test case for login Pass wrong password",
              "timedOut": null,
              "duration": 1471,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(Cypress.env(\"email\"));\n  cy.get(\"@password\").type(\"AAsdf1234\");\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Invalid username or password.\");",
              "err": {},
              "uuid": "818951f3-de41-4518-b68a-023de71ec7cb",
              "parentUUID": "86d3b34e-1345-4f3c-b9f1-9cb4932d06bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass the valid email in upper-case",
              "fullTitle": "Test case for login Pass the valid email in upper-case",
              "timedOut": null,
              "duration": 1591,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let email = Cypress.env(\"email\").toUpperCase();\ncy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(email);\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.wait(\"@loginApi\").then(({\n  response\n}) => {\n  if (response.body.result === \"session_exists\") {\n    cy.get('[role=\"presentation\"] .MuiDialog-container .MuiPaper-root button').contains(\"Ok\").click();\n  }\n});\ncy.get('[aria-label=\"User Profile\"] > .MuiButtonBase-root').click();\ncy.get('.MuiPaper-root .MuiTypography-root').contains(\"Sign out\").click();",
              "err": {},
              "uuid": "6325fa55-01e8-4202-8555-7f2d661ab5fa",
              "parentUUID": "86d3b34e-1345-4f3c-b9f1-9cb4932d06bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "174b7414-59b6-41f8-ad23-20257a63ec4b",
            "f6071dcf-ab52-4004-84fd-d6965f4f236a",
            "3d75ca51-6e5d-4c65-8938-65396332d727",
            "818951f3-de41-4518-b68a-023de71ec7cb",
            "6325fa55-01e8-4202-8555-7f2d661ab5fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7209,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6d0eddda-9dfc-417d-85fb-9da2feffb0d0",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\allSoftware.js",
      "file": "cypress\\e2e\\one\\allSoftware.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ba9c50b7-0487-4144-bfc2-8bab50ab8fc8",
          "title": "Test case for allSoftware",
          "fullFile": "cypress\\e2e\\one\\allSoftware.js",
          "file": "cypress\\e2e\\one\\allSoftware.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Asset : Lead Management Software(lms)",
              "fullTitle": "Test case for allSoftware Asset : Lead Management Software(lms)",
              "timedOut": null,
              "duration": 4460,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let lmsDes = 'Efficiently manage and assign lead information.';\ncy.Modules(`#lms ${one.moduleNameID}`, _helper.modules.lms, `#lms ${one.moduleDescID}`, lmsDes, `#lms ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.lms);",
              "err": {},
              "uuid": "647d91a2-070e-4b07-9ff6-932f9866237b",
              "parentUUID": "ba9c50b7-0487-4144-bfc2-8bab50ab8fc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Customer relationship management Software(crm)",
              "fullTitle": "Test case for allSoftware Asset : Customer relationship management Software(crm)",
              "timedOut": null,
              "duration": 2575,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let crmDes = 'Drive sales success, build stronger client relationships, and grow revenue with our CRM.';\ncy.Modules(`#crm  ${one.moduleNameID}`, _helper.modules.crm, `#crm  ${one.moduleDescID}`, crmDes, `#crm  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.crm);",
              "err": {},
              "uuid": "75986bc2-f0c3-4fef-9193-53f730b2e7b9",
              "parentUUID": "ba9c50b7-0487-4144-bfc2-8bab50ab8fc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Approval Management Software(cnf)",
              "fullTitle": "Test case for allSoftware Asset : Approval Management Software(cnf)",
              "timedOut": null,
              "duration": 2575,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let aprDes = 'The approver can approve public and private data as required.';\ncy.Modules(`#cnf  ${one.moduleNameID}`, _helper.modules.apr, `#cnf  ${one.moduleDescID}`, aprDes, `#cnf ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.apr);",
              "err": {},
              "uuid": "ff68bc07-7ca1-43cf-b6e2-9060492ab248",
              "parentUUID": "ba9c50b7-0487-4144-bfc2-8bab50ab8fc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Buopso Form",
              "fullTitle": "Test case for allSoftware Asset : Buopso Form",
              "timedOut": null,
              "duration": 2295,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let formsDes = 'Build your form as required and gather the form data.';\ncy.Modules(`#forms  ${one.moduleNameID}`, _helper.modules.buForms, `#forms  ${one.moduleDescID}`, formsDes, `#forms  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.buForms);",
              "err": {},
              "uuid": "b9eacd52-00f8-4b1d-b855-58f5fb64786d",
              "parentUUID": "ba9c50b7-0487-4144-bfc2-8bab50ab8fc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Task Management",
              "fullTitle": "Test case for allSoftware Asset : Task Management",
              "timedOut": null,
              "duration": 3102,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let taskDes = 'Task management system. Manage task records and assign tasks to the user.';\ncy.Modules(`#task  ${one.moduleNameID}`, _helper.modules.taskManagement, `#task  ${one.moduleDescID}`, taskDes, `#task  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.taskManagement);",
              "err": {},
              "uuid": "94626f6c-cc18-40da-860b-b8a46fa2f7f2",
              "parentUUID": "ba9c50b7-0487-4144-bfc2-8bab50ab8fc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Invoice",
              "fullTitle": "Test case for allSoftware Asset : Invoice",
              "timedOut": null,
              "duration": 3067,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let InvoiceDes = 'Invoice for customers and manage payment and ledger history.';\ncy.Modules(`#invoice ${one.moduleNameID}`, _helper.modules.invoice, `#invoice  ${one.moduleDescID}`, InvoiceDes, `#invoice ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.invoice);",
              "err": {},
              "uuid": "314024ea-c489-46e2-8b9f-438fa22cbf15",
              "parentUUID": "ba9c50b7-0487-4144-bfc2-8bab50ab8fc8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "647d91a2-070e-4b07-9ff6-932f9866237b",
            "75986bc2-f0c3-4fef-9193-53f730b2e7b9",
            "ff68bc07-7ca1-43cf-b6e2-9060492ab248",
            "b9eacd52-00f8-4b1d-b855-58f5fb64786d",
            "94626f6c-cc18-40da-860b-b8a46fa2f7f2",
            "314024ea-c489-46e2-8b9f-438fa22cbf15"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18074,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dd284428-5dc6-49ba-8205-6eabe1c7e429",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\addUser.js",
      "file": "cypress\\e2e\\one\\myAccount\\addUser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bc2ee5d7-9549-468c-8b20-fffb0ca4e706",
          "title": "Add User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\addUser.js",
          "file": "cypress\\e2e\\one\\myAccount\\addUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test with a valid unique Valid email",
              "fullTitle": "Add User functionality test Test with a valid unique Valid email",
              "timedOut": null,
              "duration": 19286,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet('[data-testid=\"myprofile-box-prv1u2ywt\"] * [data-testid=\"myprofile-typography-p9fmi6dyy\"]').should(\"contain.text\", \"Add user\");\ncyGet('[data-testid=\"myprofile-box-prv1u2ywt\"] * [data-testid=\"chipinput-textfield-zt8ix5yqf\"]').find(`input`).type(uniqueEmail);\ncy.contains(\"Select permission template\").click();\ncy.wait(\"@getTemplate\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let teplateName = response.body.result.values.map(ele => ele.label);\n  // cy.log(teplateName)\n  cy.wrap(teplateName).as(\"templates\");\n  if (response.body.result.values.length > 0) {\n    cy.assetDropdownSel(teplateName[0]).should(\"have.text\", teplateName[0]);\n  }\n  customElements;\n});\ncyGet(\"@templates\").then(response => {\n  templateLabel = response;\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\n// cy.pause()\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.requestSuccess);",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-testid=\"myprofile-box-prv1u2ywt\"] * [data-testid=\"myprofile-typography-p9fmi6dyy\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-testid=\"myprofile-box-prv1u2ywt\"] * [data-testid=\"myprofile-typography-p9fmi6dyy\"]`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/one/myAccount/addUser.js:18:102)",
                "diff": null
              },
              "uuid": "a2a4ba41-1119-413e-b9a8-a6ef94bcf643",
              "parentUUID": "bc2ee5d7-9549-468c-8b20-fffb0ca4e706",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with a invalid email",
              "fullTitle": "Add User functionality test Test with a invalid email",
              "timedOut": null,
              "duration": 16441,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let randomString_1 = Math.random().toString(36).substring(2, 11);\nlet uniqueEmail_1 = `testuser${randomString_1}example.com`;\ncyGet('[data-testid=\"myprofile-box-prv1u2ywt\"] * [data-testid=\"chipinput-textfield-zt8ix5yqf\"]').find(`input`).type(uniqueEmail_1);\ncy.contains(\"Select permission template\").click();\ncy.get('[data-testid=\"chipinput-chip-nkx7xamrs\"]').trigger('mouseover');\ncy.wait(500);\ncy.get('.MuiTooltip-tooltip').should('have.text', 'Email is not valid.');",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-testid=\"myprofile-box-prv1u2ywt\"] * [data-testid=\"chipinput-textfield-zt8ix5yqf\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-testid=\"myprofile-box-prv1u2ywt\"] * [data-testid=\"chipinput-textfield-zt8ix5yqf\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:3:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/one/myAccount/addUser.js:41:4)",
                "diff": null
              },
              "uuid": "b0f605b5-88f2-4a6c-81d9-67ea6d2900f4",
              "parentUUID": "bc2ee5d7-9549-468c-8b20-fffb0ca4e706",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with a Exist email",
              "fullTitle": "Add User functionality test Test with a Exist email",
              "timedOut": null,
              "duration": 16148,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet('[data-testid=\"myprofile-box-prv1u2ywt\"] * [data-testid=\"chipinput-textfield-zt8ix5yqf\"]').find(`input`).type(uniqueEmail);\ncy.contains(\"Select permission template\").click();\ncy.get('[data-testid=\"chipinput-chip-nkx7xamrs\"]').trigger('mouseover');\ncy.get('.MuiTooltip-tooltip').should('have.text', 'User already exist.');\ncy.get(lead.typeBtn).contains(\"Save\").should(\"be.disabled\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-testid=\"myprofile-box-prv1u2ywt\"] * [data-testid=\"chipinput-textfield-zt8ix5yqf\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-testid=\"myprofile-box-prv1u2ywt\"] * [data-testid=\"chipinput-textfield-zt8ix5yqf\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:3:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/one/myAccount/addUser.js:49:4)",
                "diff": null
              },
              "uuid": "6465592d-a74c-4f5c-97d4-4fb9b3a19e64",
              "parentUUID": "bc2ee5d7-9549-468c-8b20-fffb0ca4e706",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test For addTemplate from Add user page",
              "fullTitle": "Add User functionality test Test For addTemplate from Add user page",
              "timedOut": null,
              "duration": 2903,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//  cy.componentLabel(lead.formLabel, \"Select permission template\", \"button\").click()\ncy.get('[data-testid=\"button-typography-8x5inumxs\"]').first().click(); //select the template\n// cy.assetDropdownSel(templateLabel[0]).click()\ncy.get('[data-testid=\"dropdown-footer\"]').contains('Add template').click(); // add new template\n// cy.contains('Add template').click();\ncy.url().should('eq', `${Cypress.env(\"url\")}/template`);\ncy.contains('Create').should('be.visible').should('not.be.disabled').click();",
              "err": {},
              "uuid": "c67f00db-a855-49e0-9833-ceee612e22cf",
              "parentUUID": "bc2ee5d7-9549-468c-8b20-fffb0ca4e706",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c67f00db-a855-49e0-9833-ceee612e22cf"
          ],
          "failures": [
            "a2a4ba41-1119-413e-b9a8-a6ef94bcf643",
            "b0f605b5-88f2-4a6c-81d9-67ea6d2900f4",
            "6465592d-a74c-4f5c-97d4-4fb9b3a19e64"
          ],
          "pending": [],
          "skipped": [],
          "duration": 54778,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "015e910e-35a8-44db-ab5b-b5297d54bc46",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
      "file": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0c9904f9-91e7-4bea-96a1-55abfdc05aa0",
          "title": "Manage User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
          "file": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check system default required field should be already required and should not be changeable  ",
              "fullTitle": "Manage User functionality test Check system default required field should be already required and should not be changeable  ",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.get('[placeholder=\"search....\"]').type(uniqueTemplateName);\ncy.get('table> tbody').children(\"tr\").contains(uniqueTemplateName).next().click();\ncy.get(\"#edit\").click();\ncy.wait(1000);\ncy.get('input[placeholder=\"Enter template name\"]').clear().type(uniqueTemplateNameupdated);\ncy.get('[role=\"list\"] [type=\"button\"]').click();\ncy.wait('@getPipelines', {\n  timeout: 10000\n}).then(interception => {\n  const responseBody = interception.response.body;\n  const leadName = responseBody.result.values[0].label;\n  cy.get(`${lead.chooseOptions} > :nth-child(2)`).click();\n  cy.contains(leadName).click();\n  cy.get('[data-testid=\"recordaccesstable-tablebody-circtrpwp\"] > [data-testid=\"ownershiprow-tablerow-6gy8mx6fe\"] > :nth-child(4) > [data-testid=\"ownershiprow-checkbox-y6wgiibo8\"] > .PrivateSwitchBase-input');\n  cy.get('[data-testid=\"ownershiprow-tablecell-jgp2w36xa\"] button').eq(1).click();\n  cy.wait(\"@tempFieldsList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const fieldLabel = response.body.result.values.map(ele => ele.label);\n    const fieldId = response.body.result.values.map(ele => ele.id);\n    cy.log(fieldLabel[0]);\n    cy.get('input[placeholder=\"Search...\"]').type(fieldLabel[0]);\n    cy.get(`[data-rbd-draggable-id=\"${fieldId[0]}\"] > .MuiGrid-root > :nth-child(2) > :nth-child(1) button`).click();\n    cy.contains('Required').should('have.class', 'Mui-disabled');\n    cy.get('[data-testid=\"bupopper-dialogactions-0zh9xps0l\"]').find('[data-testid=\"Cancel\"]').click();\n    cy.get('#send').click();\n    cy.get(lead.typeBtn).contains(\"Save\").click();\n  });\n  // })\n});",
              "err": {},
              "uuid": "87a8a105-91a5-48e2-84b2-09e663725067",
              "parentUUID": "0c9904f9-91e7-4bea-96a1-55abfdc05aa0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "58764201-af02-4d5c-82db-8cf56d7358ca",
              "title": "Add Template",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify the selected software and available softwares on the Create Template page",
                  "fullTitle": "Manage User functionality test Add Template Verify the selected software and available softwares on the Create Template page",
                  "timedOut": null,
                  "duration": 5878,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncyGet(globalSel.createtestid).contains(\"Create\").click();\ncy.wait(\"@modulePermission\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const [firstModule, ...availableModules] = response.body.result.add;\n  cyGet(`[data-testid=\"permissionsoftwarelist-typography-ftrzexyr7\"]`).should(\"contain.text\", \"Selected software\");\n  cyGet(`[data-testid=\"permissionsoftwarelist-menulist-aafxej4yj\"]`).first().find('[data-testid=\"permissionsoftwarelist-typography-zackmqq0q\"]').should('contain.text', formatModuleName(firstModule)); // e.g. Lead Management\n  availableModules.forEach(module => {\n    cyGet('[data-testid=\"permissionsoftwarelist-menulist-2qkcm4j30\"]').find(`[data-testid=\"permissionsoftwarelist-typography-86cpoqkhp\"]`).should('contain.text', formatModuleName(module));\n  });\n});",
                  "err": {},
                  "uuid": "1fc44073-b71e-48c3-9fdc-6d53fb12c93e",
                  "parentUUID": "58764201-af02-4d5c-82db-8cf56d7358ca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Add user template",
                  "fullTitle": "Manage User functionality test Add Template Add user template",
                  "timedOut": null,
                  "duration": 8468,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncyGet(globalSel.createtestid).contains(\"Create\").click();\n// Fill template name\nbutextField(`[data-testid=\"index-textfield-fm1l89cxe\"]`, `label`).contains(\"Template name\");\nbutextField(`[data-testid=\"index-textfield-fm1l89cxe\"]`, `input[placeholder=\"Enter template name\"]`).type(uniqueTemplateName);\n// Open dropdown and select pipeline\nbudropdown(`[data-testid=\"managepermission-stack-m3in09ace\"] > :first`, `[data-testid=\"button-typography-8x5inumxs\"]`, `Select Pipeline`);\ncy.wait(\"@getPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pipelines = response.body.result.values.map(ele => ele.label);\n  const firstPipeline = pipelines[0];\n  // Search if more than 5 pipelines\n  if (pipelines.length > 5) {\n    buSearchbox(globalSel.search, firstPipeline);\n  }\n  budropdownOption(firstPipeline).first().click();\n  // Verify ownership permissions UI\n  cyGet('[data-testid=\"ownershiprow-iconbutton-ph6ah241c\"]').click();\n  cy.contains('thead', 'Permission');\n  cy.contains('thead', 'Owner only');\n  cy.contains('thead', 'Everything');\n  cy.contains('thead', 'Select fields');\n  cy.contains('tr', firstPipeline);\n  // View permission should be checked and disabled\n  cy.contains('tr', 'View').find('input[type=\"checkbox\"]').eq(0).should('be.checked').and('be.disabled');\n  // Save\n  buSaveButton().click();\n});",
                  "err": {},
                  "uuid": "59b14f20-0ab2-4201-8ed8-5ba2e390aa77",
                  "parentUUID": "58764201-af02-4d5c-82db-8cf56d7358ca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1fc44073-b71e-48c3-9fdc-6d53fb12c93e",
                "59b14f20-0ab2-4201-8ed8-5ba2e390aa77"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14346,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7b3cf670-945f-4406-92a4-2302e4469004",
              "title": "Assign and Edit Template",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Assign Template to user",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Assign Template to user",
                  "timedOut": null,
                  "duration": 13523,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageUsers`);\ncy.wait(\"@userGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _user, _user2;\n  user = response.body.result.values.find(ele => ele.role === \"std\");\n  if (!user) {\n    this.skip();\n  }\n  cy.intercept('GET', `**/crew/users//${user.id}`).as('getUserById');\n  cyGet(`[data-testid=\"activitybar-textfield-8eiuz4v4a\"] input`).type((_user = user) === null || _user === void 0 ? void 0 : _user.label);\n  onesecondWait();\n  cy.contains('tr', (_user2 = user) === null || _user2 === void 0 ? void 0 : _user2.label).find(`[data-testid=\"Action\"]`).click();\n  cyGet(\"#edit\").click({\n    force: true\n  });\n  twosecondWait();\n  cy.wait(\"@getUserById\").then(({\n    response\n  }) => {\n    const assignedTemplate = response.body.result.profile.template.label;\n    cyGet(`[data-testid=\"chipinput-iconbutton-ycchky4nm\"]`).click();\n    cy.wait(\"@getTempalte\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalTemplates = response.body.result.pages.totalRecords;\n      const templates = response.body.result.values.map(ele => ele.label);\n      if (assignedTemplate === \"No template\") {\n        userTemplate = templates[0];\n        if (totalTemplates > 5) {\n          buSearchbox(globalSel.search, userTemplate);\n        }\n        budropdownOption(userTemplate, `[data-testid=\"buchip-chip-5r51zm55o\"]`).click();\n      } else {\n        userTemplate = templates.find(ele => ele !== assignedTemplate);\n        if (totalTemplates > 5) {\n          buSearchbox(globalSel.search, userTemplate);\n        }\n        budropdownOption(userTemplate, `[data-testid=\"buchip-chip-5r51zm55o\"]`).click();\n      }\n      twosecondWait();\n      buSaveButton().click();\n      cyGet('.MuiSnackbarContent-message').should(\"contain.text\", \"User Permissions Updated\");\n      logout();\n      // cy.clearCookies();\n    });\n  });\n});",
                  "err": {},
                  "uuid": "d0477cd3-96a1-47bd-8a43-d47b54a2a9d0",
                  "parentUUID": "7b3cf670-945f-4406-92a4-2302e4469004",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to create a record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to create a record.",
                  "timedOut": null,
                  "duration": 14642,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user3;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const create = recordPermission.create;\n  setPermissionOnRoleSwitch(create, false, \"Create\", 0);\n  // Login with standard user\n  cy.login((_user3 = user) === null || _user3 === void 0 ? void 0 : _user3.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Create Lead\"]`).should(\"not.be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "854b63c3-4c23-4f4c-b3fd-382b0078e055",
                  "parentUUID": "7b3cf670-945f-4406-92a4-2302e4469004",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to import the record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to import the record.",
                  "timedOut": null,
                  "duration": 13223,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user4;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const imp = recordPermission.import;\n  setPermissionOnRoleSwitch(imp, false, \"Import\", 0);\n  // Login with standard user\n  cy.login((_user4 = user) === null || _user4 === void 0 ? void 0 : _user4.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Import\"]`).should(\"not.be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "275f407c-67de-49b8-8e06-88e926cda445",
                  "parentUUID": "7b3cf670-945f-4406-92a4-2302e4469004",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to activity of record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to activity of record.",
                  "timedOut": null,
                  "duration": 14949,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user5;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const activity = recordPermission.activity;\n  setPermissionOnRoleSwitch(activity, false, \"Activity\", 0);\n  // Login with standard user\n  cy.login((_user5 = user) === null || _user5 === void 0 ? void 0 : _user5.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"buelementgroup-box-n1f8dc7ag\"] [aria-label=\"Split view\"]`).click();\n  cyGet(`[data-testid=\"communicationbar-box-951cbwqi4\"]`).find(`[aria-label=\"Activities\"]`);\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "806ff08d-dc90-4fba-a97e-d94edd978d78",
                  "parentUUID": "7b3cf670-945f-4406-92a4-2302e4469004",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to Whatsapp.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to Whatsapp.",
                  "timedOut": null,
                  "duration": 13836,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user6;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const wa = recordPermission.wa;\n  setPermissionOnRoleSwitch(wa, false, \"Whatsapp\", 0);\n  // Login with standard user\n  cy.login((_user6 = user) === null || _user6 === void 0 ? void 0 : _user6.email);\n  // twosecondWait()\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"buelementgroup-box-n1f8dc7ag\"] [aria-label=\"Split view\"]`).click();\n  cyGet('[data-testid=\"communicationbar-box-951cbwqi4\"]').find(`[aria-label=\"Whatsapp\"]`);\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "7940816a-3702-4873-b2a0-ef88a5c1a3fd",
                  "parentUUID": "7b3cf670-945f-4406-92a4-2302e4469004",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has not permission to create a record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has not permission to create a record.",
                  "timedOut": null,
                  "duration": 11729,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user7;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const create = recordPermission.create;\n  setPermissionOnRoleSwitch(create, true, \"Create\", 0);\n  // Login with standard user\n  cy.login((_user7 = user) === null || _user7 === void 0 ? void 0 : _user7.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Create Lead\"]`).should(\"be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "e8be1403-935e-4cd3-aa49-e615b39ddf11",
                  "parentUUID": "7b3cf670-945f-4406-92a4-2302e4469004",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has not permission to import the record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has not permission to import the record.",
                  "timedOut": null,
                  "duration": 12644,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user8;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const imp = recordPermission.import;\n  setPermissionOnRoleSwitch(imp, true, \"Import\", 0);\n  // Login with standard user\n  cy.login((_user8 = user) === null || _user8 === void 0 ? void 0 : _user8.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Import\"]`).should(\"be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "f1f2e527-6877-4935-8353-c3d279b5af5b",
                  "parentUUID": "7b3cf670-945f-4406-92a4-2302e4469004",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d0477cd3-96a1-47bd-8a43-d47b54a2a9d0",
                "854b63c3-4c23-4f4c-b3fd-382b0078e055",
                "275f407c-67de-49b8-8e06-88e926cda445",
                "806ff08d-dc90-4fba-a97e-d94edd978d78",
                "7940816a-3702-4873-b2a0-ef88a5c1a3fd",
                "e8be1403-935e-4cd3-aa49-e615b39ddf11",
                "f1f2e527-6877-4935-8353-c3d279b5af5b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 94546,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6c6135b1-4499-4d7c-9b0b-9988307f4d0e",
              "title": "Delete TemPlate functionality",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete Template",
                  "fullTitle": "Manage User functionality test Delete TemPlate functionality Delete Template",
                  "timedOut": null,
                  "duration": 5504,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let msg1 = \"Delete template\";\nlet msg2 = \"Are you sure you want to delete this Template ?\";\ncy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncy.wait(\"@templateGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const unAssignedTemplate = response.body.result.values.filter(ele => ele.assignedTo.length === 0);\n  if (unAssignedTemplate.length > 0) {\n    cyGet(`[data-testid=\"templatelist-textfield-e9dj43sha\"] input`).type(unAssignedTemplate[0].label);\n    cy.contains('tr', unAssignedTemplate[0].label).find(`[data-testid=\"Action\"]`).click();\n    cyGet(\"#delete\").click();\n    buCaption(`[role=\"dialog\"]`, `#customized-dialog-title p`, msg1, `[role=\"dialog\"] [data-testid=\"deletetemplate-typography-5sxlboqg8\"]`, msg2);\n    cyGet(`[data-testid=\"Delete\"]`).click();\n  } else {\n    cy.log(`Teplate not available for delete`);\n  }\n});",
                  "err": {},
                  "uuid": "4a0473d8-605d-479e-af7d-110fd9dd464a",
                  "parentUUID": "6c6135b1-4499-4d7c-9b0b-9988307f4d0e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Assigned Tempale should not be delete",
                  "fullTitle": "Manage User functionality test Delete TemPlate functionality Assigned Tempale should not be delete",
                  "timedOut": null,
                  "duration": 4850,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncy.wait(\"@templateGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const assignedTemplate = response.body.result.values.filter(ele => ele.assignedTo.length > 0);\n  if (assignedTemplate.length > 0) {\n    cyGet(`[data-testid=\"templatelist-textfield-e9dj43sha\"] input`).type(assignedTemplate[0].label);\n    cy.contains('tr', assignedTemplate[0].label).find(`[data-testid=\"Action\"]`).click();\n    cy.get(\"#delete\").should(\"have.attr\", \"aria-disabled\", \"true\");\n  } else {\n    cy.log(`Teplate not available for delete`);\n  }\n});",
                  "err": {},
                  "uuid": "1cafe909-135a-4daa-816c-19533895a716",
                  "parentUUID": "6c6135b1-4499-4d7c-9b0b-9988307f4d0e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4a0473d8-605d-479e-af7d-110fd9dd464a",
                "1cafe909-135a-4daa-816c-19533895a716"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10354,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [
            "87a8a105-91a5-48e2-84b2-09e663725067"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7a50c3b2-75d3-4d55-81c4-d280542aacd6",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\manageUser.js",
      "file": "cypress\\e2e\\one\\myAccount\\manageUser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6c8a975d-4903-4c70-93c5-36d6d148b9a3",
          "title": "search User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\manageUser.js",
          "file": "cypress\\e2e\\one\\myAccount\\manageUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Search user by search user functionality on second page",
              "fullTitle": "search User functionality test Search user by search user functionality on second page",
              "timedOut": null,
              "duration": 5872,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@userList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const userName = response.body.result.values.filter(ele => ele.status > 0);\n  const user = userName.slice(-1)[0];\n  cy.get('[placeholder=\"search....\"]').type(user.label);\n  cy.wait(\"@userList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    expect(response.body.result.values[0]).has.property(\"label\", user.label);\n  });\n});",
              "err": {},
              "uuid": "c2363252-9956-4b46-a716-a962e26a8578",
              "parentUUID": "6c8a975d-4903-4c70-93c5-36d6d148b9a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2363252-9956-4b46-a716-a962e26a8578"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5872,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bc37a551-9d8f-47e5-bfe4-716c67d39c49",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\profile.js",
      "file": "cypress\\e2e\\one\\myAccount\\profile.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f960f655-9739-4001-979b-78aa2d42b9ef",
          "title": "Verify My Profile Page",
          "fullFile": "cypress\\e2e\\one\\myAccount\\profile.js",
          "file": "cypress\\e2e\\one\\myAccount\\profile.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update user name and verify with profile",
              "fullTitle": "Verify My Profile Page Update user name and verify with profile",
              "timedOut": null,
              "duration": 7198,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const UpdatedUsername = faker.person.fullName();\ncyGet(\"#name-label\").should(\"have.text\", \"Name *\");\ncyGet('input#name').should(\"have.attr\", \"required\");\ncyGet('input#name').clear().type(UpdatedUsername);\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\ncy.reload();\ncy.wait(500);\ncy.contains(`${UpdatedUsername}'s Profile`).should('be.visible');",
              "err": {},
              "uuid": "7d94a40a-8a60-46a2-8ce6-7e20d45c747e",
              "parentUUID": "f960f655-9739-4001-979b-78aa2d42b9ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User name should be required",
              "fullTitle": "Verify My Profile Page User name should be required",
              "timedOut": null,
              "duration": 1103,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('input[placeholder=\"Name\"]').clear();\ncy.get('#name-helper-text').should('have.text', \"Field is required!\");",
              "err": {},
              "uuid": "1f8954e8-e65c-4f55-8646-83c33f372f4c",
              "parentUUID": "f960f655-9739-4001-979b-78aa2d42b9ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify email Address",
              "fullTitle": "Verify My Profile Page Verify email Address",
              "timedOut": null,
              "duration": 1012,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.componentLabel('#email-label', \"Email address\", \"input\").should(\"have.value\", Cypress.env(\"email\"));",
              "err": {},
              "uuid": "693c3a48-19c3-4222-86a3-4a238e7ff94e",
              "parentUUID": "f960f655-9739-4001-979b-78aa2d42b9ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Mobile number",
              "fullTitle": "Verify My Profile Page Update Mobile number",
              "timedOut": null,
              "duration": 2288,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#mobile-label').should(\"have.text\", \"Mobile number *\");\n// cy.get('#mobile').should(\"have.attr\", \"required\");\ncy.get('#mobile').clear().type(faker.string.numeric(10));\ncy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");",
              "err": {},
              "uuid": "ea22cbd5-40d9-4423-8e98-52d1bd5f345d",
              "parentUUID": "f960f655-9739-4001-979b-78aa2d42b9ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Mobile number should be in mobile number format",
              "fullTitle": "Verify My Profile Page Mobile number should be in mobile number format",
              "timedOut": null,
              "duration": 2146,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#mobile').clear();\ncy.get('#mobile').type('wesfd');\ncy.get('#mobile-helper-text').should('have.text', \"Mobile number is not valid\");\ncy.get('.MuiSnackbarContent-message').should('have.text', \"Invalid mobile\");",
              "err": {},
              "uuid": "8502e750-e106-4de2-8b64-3dc0779e6d9b",
              "parentUUID": "f960f655-9739-4001-979b-78aa2d42b9ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that total listed user is equal to Total users",
              "fullTitle": "Verify My Profile Page Verify that total listed user is equal to Total users",
              "timedOut": null,
              "duration": 931,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@usersList\").then(({\n  response\n}) => {\n  let totalCount = response.body.result.pages.totalRecords;\n  cy.get('[role=\"tabpanel\"] > :nth-child(1) > :nth-child(2) > :nth-child(1) > :nth-child(1) > :nth-child(2) ').contains(totalCount);\n});",
              "err": {},
              "uuid": "c5bdfa23-a79d-47e0-9093-1a2169d1f1cf",
              "parentUUID": "f960f655-9739-4001-979b-78aa2d42b9ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d94a40a-8a60-46a2-8ce6-7e20d45c747e",
            "1f8954e8-e65c-4f55-8646-83c33f372f4c",
            "693c3a48-19c3-4222-86a3-4a238e7ff94e",
            "ea22cbd5-40d9-4423-8e98-52d1bd5f345d",
            "8502e750-e106-4de2-8b64-3dc0779e6d9b",
            "c5bdfa23-a79d-47e0-9093-1a2169d1f1cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14678,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "28c2bf38-eeeb-4b6f-9b13-bbfe865b4d82",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "626ef452-f624-4ba2-b2f2-fa5154a5ed13",
          "title": "Nevigate the setting page and create pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Pipeline name can't be blank",
              "fullTitle": "Nevigate the setting page and create pipeline Pipeline name can't be blank",
              "timedOut": null,
              "duration": 7956,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\nbutextField(pipelineSel.piptextfield, \"input\").click();\ncy.get('.MuiFormHelperText-root').should(\"contain\", `${messages.blankPip}.`);\nbuButton(globalSel.savetestid).should(\"be.disabled\").click({\n  force: true\n});\ncy.get('.MuiTooltip-tooltip').should(\"contain\", `${messages.blankPip}.`);",
              "err": {},
              "uuid": "5b1806f9-0ee6-42f9-99d8-e6523fff2f17",
              "parentUUID": "626ef452-f624-4ba2-b2f2-fa5154a5ed13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline already exist ",
              "fullTitle": "Nevigate the setting page and create pipeline Pipeline already exist ",
              "timedOut": null,
              "duration": 4469,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let piplabel = response.body.result.values[0].label;\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\n  butextField(pipelineSel.piptextfield, \"input\").type(piplabel);\n});\ncy.get('.MuiFormHelperText-root').should(\"have.text\", messages.existsPip);\nbuButton(globalSel.savetestid).should(\"be.disabled\").click({\n  force: true\n});\ncy.get('.MuiTooltip-tooltip').should(\"contain\", messages.existsPip);",
              "err": {},
              "uuid": "ad42de78-acb9-476c-90cd-ee22cc4b4bc0",
              "parentUUID": "626ef452-f624-4ba2-b2f2-fa5154a5ed13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add new pipeline",
              "fullTitle": "Nevigate the setting page and create pipeline Add new pipeline",
              "timedOut": null,
              "duration": 3606,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\nbutextField(pipelineSel.piptextfield, \"input\").type(`${faker.commerce.product()}-${new Date().valueOf()}`);\nbuButton(globalSel.savetestid).should(\"not.be.disabled\").click();",
              "err": {},
              "uuid": "4f8cef35-01ea-489d-977b-dd30b918ea92",
              "parentUUID": "626ef452-f624-4ba2-b2f2-fa5154a5ed13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should pipeline selectable",
              "fullTitle": "Nevigate the setting page and create pipeline Should pipeline selectable",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let pipelines = response.body.result.values;\n  let lastPip = pipelines[pipelines.length - 1].label;\n  // cy.log(`Total Pipelines: ${pipelines.length}`);\n  // cy.log(`Last Item: ${lastPip}`);\n  if (pipelines.length > 5) {\n    cy.get('[data-testid=\"pipeline-box-hlum28yao\"] > [data-testid=\"budropdown-box-ty1opau5a\"] > [data-testid=\"button-box-72cmtvy8r\"] > .MuiButtonBase-root > .MuiButton-icon > [data-testid=\"button-stack-alorzfaoj\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"]').click();\n    cy.get('[data-testid=\"searchbox-textfield-8k19ikenc\"]').type(lastPip);\n  } else {\n    cy.get('[data-testid=\"pipeline-box-hlum28yao\"] > [data-testid=\"budropdown-box-ty1opau5a\"] > [data-testid=\"button-box-72cmtvy8r\"] > .MuiButtonBase-root > .MuiButton-icon > [data-testid=\"button-stack-alorzfaoj\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"]').click();\n    cy.contains(lastPip).click();\n  }\n});",
              "err": {},
              "uuid": "c44a321b-f40a-44fa-93ec-bc4a7e09f82a",
              "parentUUID": "626ef452-f624-4ba2-b2f2-fa5154a5ed13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b1806f9-0ee6-42f9-99d8-e6523fff2f17",
            "ad42de78-acb9-476c-90cd-ee22cc4b4bc0",
            "4f8cef35-01ea-489d-977b-dd30b918ea92"
          ],
          "failures": [],
          "pending": [
            "c44a321b-f40a-44fa-93ec-bc4a7e09f82a"
          ],
          "skipped": [],
          "duration": 16031,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4a5a6e17-e913-4cad-8b4c-cf1e4584a369",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5844311a-5587-431d-83a2-e7617813a6a2",
          "title": "Nevigate the setting page and rename pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Rename pipeline",
              "fullTitle": "Nevigate the setting page and rename pipeline Rename pipeline",
              "timedOut": null,
              "duration": 8835,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let editedPIpLabel = `${faker.commerce.product()}-${new Date().valueOf()}`;\ncy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  cy.get(\"#customized-dialog-title p\").should(\"have.text\", messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"label\").should(\"have.text\", messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").should(\"have.value\", pipLabel[0]);\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.existsPip1);\n  buButton(globalSel.renametestid).should(\"be.disabled\");\n  // Rename the pipeline name\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear().type(editedPIpLabel);\n  buButton(globalSel.renametestid).click();\n  cy.get('.MuiSnackbarContent-message').should(\"have.text\", messages.updated);\n});",
              "err": {},
              "uuid": "c94cd196-07f6-4bdf-b955-9511ef0c3e6d",
              "parentUUID": "5844311a-5587-431d-83a2-e7617813a6a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline already exist",
              "fullTitle": "Nevigate the setting page and rename pipeline Pipeline already exist",
              "timedOut": null,
              "duration": 5503,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear().type(pipLabel[1]);\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.existsPip1);\n  buButton(globalSel.renametestid).should(\"be.disabled\").and(\"have.text\", \"Rename\");\n});",
              "err": {},
              "uuid": "cba63f78-5138-4cd9-8f74-bf6e00aa74d1",
              "parentUUID": "5844311a-5587-431d-83a2-e7617813a6a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline name cant't be blank",
              "fullTitle": "Nevigate the setting page and rename pipeline Pipeline name cant't be blank",
              "timedOut": null,
              "duration": 2837,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear();\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.blankPip);\n  buButton(globalSel.renametestid).should(\"be.disabled\").and(\"have.text\", \"Rename\");\n});",
              "err": {},
              "uuid": "4be1ab6e-de01-48f4-be21-532c1a8420e9",
              "parentUUID": "5844311a-5587-431d-83a2-e7617813a6a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c94cd196-07f6-4bdf-b955-9511ef0c3e6d",
            "cba63f78-5138-4cd9-8f74-bf6e00aa74d1",
            "4be1ab6e-de01-48f4-be21-532c1a8420e9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17175,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "49d48295-59a0-40d3-ac3a-95ab8dbb6d94",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7536fceb-01b5-45c4-9a57-513015d5edcc",
          "title": "Navigate the setting page and reorder pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reorder pipeline",
              "fullTitle": "Navigate the setting page and reorder pipeline Reorder pipeline",
              "timedOut": null,
              "duration": 12052,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const movements = 1;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\n// cy.get(\"#app-routes p\").contains(\"leads\")\n// cy.get('.MuiTypography-caption').contains(\"You can Create/ Rename/ Delete Pipeline for lead only.\")\ncy.wait(1000);\nbusimpledropdown(pipelineSel.options, messages.pipAction, globalSel.reorder, messages.reorderPip);\n// cy.get('.MuiPaper-root > :nth-child(2) > div > .MuiButtonBase-root').should(\"have.text\", \"Options\").click()\n// cy.get(\"#reorder\").click()\n// get the pipeline-id using intercept and wait method\ncy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let pipId = response.body.result.values.map(ele => ele.id);\n  cy.get(`[data-rbd-draggable-id=${pipId[0]}]`).as('item');\n  cy.get('@item').invoke('attr', 'data-rbd-drag-handle-draggable-id').as('item-id');\n  cy.get('@item').invoke('attr', 'tabindex').as('item-index').should('equal', '0');\n  // lift the element\n  cy.get('@item').focus().trigger('keydown', {\n    keyCode: 32\n  }).get('@item'); // need to re-query for a clone\n  cy.wrap(Array.from({\n    length: movements\n  })).each(() => {\n    cy.get('@item').trigger('keydown', {\n      keyCode: 40,\n      force: true\n    }).wait(1000);\n  });\n  // drop an element\n  cy.get('@item').trigger('keydown', {\n    keyCode: 32,\n    force: true\n  });\n  cy.get('@item-id').then(() => {\n    cy.get(`[data-rbd-draggable-id=${pipId[0]}]`).invoke('attr', 'tabindex');\n  });\n  // cy.get('#cancel').should(\"have.text\", \"Cancel\")\n  // cy.get(\"#save\").click()\n  buButton(globalSel.canceltestid).should(\"have.text\", \"Cancel\");\n  buButton(globalSel.savetestid).should(\"have.text\", \"Save\").click({\n    force: true\n  });\n});",
              "err": {},
              "uuid": "07007561-c551-4b76-a612-75fcedff1b28",
              "parentUUID": "7536fceb-01b5-45c4-9a57-513015d5edcc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "07007561-c551-4b76-a612-75fcedff1b28"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12052,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a845b261-efb0-41e8-9946-9b77482202db",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8955da47-9d65-41d8-a75f-7d2d6f253188",
          "title": "Stage functionality test for pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add new stage",
              "fullTitle": "Stage functionality test for pipeline Add new stage",
              "timedOut": null,
              "duration": 10180,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\nonesecondWait();\nbuButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\ncyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).type(stageName);\nonesecondWait();\nbuSaveButton().should(\"have.text\", \"Save\").click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);",
              "err": {},
              "uuid": "476aa114-5644-4cb8-a01e-3024b2f0f733",
              "parentUUID": "8955da47-9d65-41d8-a75f-7d2d6f253188",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage can't be empty.",
              "fullTitle": "Stage functionality test for pipeline Stage can't be empty.",
              "timedOut": null,
              "duration": 3348,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\nbuSaveButton().should(\"be.disabled\").trigger(\"mouseover\", {\n  force: true\n});\ncyGet(globalSel.tooltip).invoke('text').should('include', \"Stage can't be empty.\");",
              "err": {},
              "uuid": "72d82345-3517-459b-83d6-cb495f040e03",
              "parentUUID": "8955da47-9d65-41d8-a75f-7d2d6f253188",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage can't be duplicate.",
              "fullTitle": "Stage functionality test for pipeline Stage can't be duplicate.",
              "timedOut": null,
              "duration": 4857,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\ncy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stageName = response.body.result.values.map(ele => ele.label);\n  cyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).click().type(stageName[0]);\n});\nbuSaveButton().should(\"be.disabled\").trigger(\"mouseover\", {\n  force: true\n});\ncyGet(globalSel.tooltip).invoke('text').should('include', \"Duplicate stage name.\");",
              "err": {},
              "uuid": "e287f975-9f79-4e3b-8f2d-7bc727b7d9d7",
              "parentUUID": "8955da47-9d65-41d8-a75f-7d2d6f253188",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "edit stage",
              "fullTitle": "Stage functionality test for pipeline edit stage",
              "timedOut": null,
              "duration": 5582,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\ncyGet(`${globalSel.inputItemtextfield} input`).last().clear();\ncyGet(`${globalSel.inputItemtextfield} input`).last().type(stageName);\nbuSaveButton().should(\"have.text\", \"Save\").click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);",
              "err": {},
              "uuid": "79b54776-0ebb-4751-a843-b41184c74b19",
              "parentUUID": "8955da47-9d65-41d8-a75f-7d2d6f253188",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete stage",
              "fullTitle": "Stage functionality test for pipeline delete stage",
              "timedOut": null,
              "duration": 6797,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\nconst msg2 = \"Are you sure! Want to delete this Stage?\";\nbuButton(`[data-testid=\"Add a ${asset} Stage\"]`).click();\ncyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).click().type(stageName);\nbuSaveButton().should(\"have.text\", \"Save\").click();\nonesecondWait();\ncyGet(`${pipelineSel.stageDelIconBtn}`).last().click();\nbuCaption(globalSel.dialogTitle, globalSel.dialogTitleText, \"Delete Stage\", pipelineSel.deletestagecaption, msg2);\nbuButton(`[data-testid=\"Delete Stage\"]`).click();",
              "err": {},
              "uuid": "534b91e9-2c89-4f81-9ce1-eb51c86a8057",
              "parentUUID": "8955da47-9d65-41d8-a75f-7d2d6f253188",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage should not be deleted which contains record",
              "fullTitle": "Stage functionality test for pipeline Stage should not be deleted which contains record",
              "timedOut": null,
              "duration": 3480,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stageWithCount = response.body.result.values.find(ele => ele.count > 0 && ele.winChance != \"Won\");\n  if (!stageWithCount) {\n    this.skip();\n  }\n  const msg2 = `You need to move ${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.count} ${asset} to delete this stage.`;\n  cyGet(`[data-rbd-draggable-id=\"${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.id}\"] ${pipelineSel.stageDelIconBtn}`).click({\n    force: true\n  });\n  buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, delNmvStg, pipelineSel.deletestageConfirmatiion, msg2);\n  budropdown(globalSel.dialogContent, globalSel.fieldlabelBox, fieldLabel);\n  budropdownInput(`[data-testid=\"input-muiinput-t8mkcx347\"] input`, stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label);\n  buButton(`[data-testid=\"Move ${asset} and delete Stage\"]`).should(\"be.disabled\");\n});",
              "err": {},
              "uuid": "27b747d3-d1c5-4358-a337-8d31037ec307",
              "parentUUID": "8955da47-9d65-41d8-a75f-7d2d6f253188",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "move record and delete stage",
              "fullTitle": "Stage functionality test for pipeline move record and delete stage",
              "timedOut": null,
              "duration": 4506,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const values = response.body.result.values;\n  const length = values.length;\n  const stageWithCount = values.find(ele => ele.count > 0 && ele.winChance != \"Won\");\n  const msg2 = `You need to move ${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.count} ${asset} to delete this stage.`;\n  const moveRecordStage = values.find(ele => ele.label != (stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label) && ele.winChance != \"Won\");\n  const searchSelecor = `${globalSel.searchbox} ${globalSel.searchplaceholder}`;\n  if (!stageWithCount) {\n    this.skip();\n  }\n  cyGet(`[data-rbd-draggable-id=\"${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.id}\"] ${pipelineSel.stageDelIconBtn}`).click({\n    force: true\n  });\n  buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, delNmvStg, pipelineSel.deletestageConfirmatiion, msg2);\n  budropdownInput(`[data-testid=\"input-muiinput-t8mkcx347\"] input`, stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label, length, searchSelecor, moveRecordStage === null || moveRecordStage === void 0 ? void 0 : moveRecordStage.label, globalSel.dialogTitleText);\n  buButton(`[data-testid=\"Move ${asset} and delete Stage\"]`).click();\n});",
              "err": {},
              "uuid": "c8273bb8-37ce-4cef-ab40-dc0c53bb7716",
              "parentUUID": "8955da47-9d65-41d8-a75f-7d2d6f253188",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "476aa114-5644-4cb8-a01e-3024b2f0f733",
            "72d82345-3517-459b-83d6-cb495f040e03",
            "e287f975-9f79-4e3b-8f2d-7bc727b7d9d7",
            "79b54776-0ebb-4751-a843-b41184c74b19",
            "534b91e9-2c89-4f81-9ce1-eb51c86a8057",
            "27b747d3-d1c5-4358-a337-8d31037ec307",
            "c8273bb8-37ce-4cef-ab40-dc0c53bb7716"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 38750,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "94e1ba24-de5f-4d4c-9a61-98bed39a8159",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3d17d420-faaa-41e0-91ed-b52f40320bbd",
          "title": "Navigate the setting page and reorder stage",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reorder stage",
              "fullTitle": "Navigate the setting page and reorder stage Reorder stage",
              "timedOut": null,
              "duration": 8735,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const movements = 1;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\ncy.wait(\"@getStage\").then(({\n  response\n}) => {\n  const stageId = response.body.result.values.map(ele => ele.id);\n  expect(response.body.result.values).to.be.length.greaterThan(1);\n  if (stageId.length > 1) {\n    cyGet(`[data-rbd-draggable-id=${stageId[0]}]`).as('item');\n    cy.get('@item').invoke('attr', 'data-rbd-drag-handle-draggable-id').as('item-id');\n    cy.get('@item').invoke('attr', 'tabindex').as('item-index').should('equal', '0');\n    // lift the element\n    cy.get('@item').focus().trigger('keydown', {\n      keyCode: 32,\n      position: \"left\"\n    }).get('@item'); // need to re-query for a clone\n    cy.wrap(Array.from({\n      length: movements\n    })).each(() => {\n      cy.get('@item').trigger('keydown', {\n        keyCode: 40,\n        force: true\n      }).wait(1000);\n    });\n    // drop an element\n    cy.get('@item').trigger('keydown', {\n      keyCode: 32,\n      force: true\n    });\n    cy.get('@item-id').then(() => {\n      cyGet(`[data-rbd-draggable-id=${stageId[0]}]`).invoke('attr', 'tabindex');\n    });\n    buSaveButton().should(\"have.text\", \"Save\").click();\n    cyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);\n  } else {\n    cy.log(`Stage must be more than 1 but stage found: ${stageId.length}`);\n  }\n});",
              "err": {},
              "uuid": "becaac79-5755-4bad-8a89-1be4f1a2299d",
              "parentUUID": "3d17d420-faaa-41e0-91ed-b52f40320bbd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "becaac79-5755-4bad-8a89-1be4f1a2299d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8735,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "20bed1c2-8995-44bb-aa5f-74f9a5edeabf",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d9ab5c4-da56-4460-8a2d-e821573093a5",
          "title": "Nevigate the setting page and delete pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete pipeline",
              "fullTitle": "Nevigate the setting page and delete pipeline Delete pipeline",
              "timedOut": null,
              "duration": 10164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let countZeroPip;\nlet msg1 = \"Delete Pipeline Confirmation\";\ncy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pipelines = response.body.result.values.map(ele => ele.label);\n  if (pipelines.length === 1) {\n    busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    buButton(globalSel.deltestid).click();\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Last pipeline can't be deleted\");\n  } else {\n    var _countZeroPip, _countZeroPip2;\n    const piplength = response.body.result.values.length;\n    countZeroPip = response.body.result.values.find(ele => ele.count === 0);\n    if (!countZeroPip) {\n      cy.pipelineData(module, asset).then(pipData => {\n        const piplabel = pipData.map(ele => ele.label);\n        cy.log(JSON.stringify(piplabel));\n        countZeroPip = response.body.result.values.find(ele => ele.count === 0);\n        if (!countZeroPip) {\n          throw new Error(`Pipeline not available for delete`);\n        }\n      });\n    }\n    ;\n    let msg2 = `You are about to delete the project titled ${(_countZeroPip = countZeroPip) === null || _countZeroPip === void 0 ? void 0 : _countZeroPip.label}.`;\n    budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipelines[0], piplength, globalSel.search, (_countZeroPip2 = countZeroPip) === null || _countZeroPip2 === void 0 ? void 0 : _countZeroPip2.label, globalSel.dialogTitleText);\n    busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    buButton(globalSel.deltestid).click();\n  }\n  ;\n});",
              "err": {},
              "uuid": "d9ad3be2-4294-4b5b-8c1e-000657c35864",
              "parentUUID": "6d9ab5c4-da56-4460-8a2d-e821573093a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline should not delete which contains record",
              "fullTitle": "Nevigate the setting page and delete pipeline Pipeline should not delete which contains record",
              "timedOut": null,
              "duration": 4692,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let pipcontainRecord;\ncy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pipelines = response.body.result.values.map(ele => ele.label);\n  pipcontainRecord = response.body.result.values.find(ele => ele.count > 0);\n  if (pipelines.length === 1) {\n    busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    buButton(globalSel.deltestid).click();\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Last pipeline can't be deleted\");\n  } else {\n    var _pipcontainRecord;\n    budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipelines[0], pipelines.length, globalSel.search, (_pipcontainRecord = pipcontainRecord) === null || _pipcontainRecord === void 0 ? void 0 : _pipcontainRecord.label, globalSel.dialogTitleText);\n    busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n    buButton(globalSel.del).should(\"have.attr\", \"aria-disabled\", \"true\").trigger(\"mouseover\", {\n      force: true\n    });\n    cy.get('.MuiTooltip-tooltip').should(\"have.text\", \"Pipeline contains lead\");\n  }\n  ;\n});",
              "err": {},
              "uuid": "6ad41420-92df-4d8a-9a50-5e4197ecf7cd",
              "parentUUID": "6d9ab5c4-da56-4460-8a2d-e821573093a5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d9ad3be2-4294-4b5b-8c1e-000657c35864",
            "6ad41420-92df-4d8a-9a50-5e4197ecf7cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14856,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0d0f482d-02cd-4d5b-bfde-bf5332aa2ee9",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d82ef67d-5bf4-4a54-9cb9-f8e6e6dd31fe",
          "title": "Nevigate the setting page and create and update association fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create association field",
              "fullTitle": "Nevigate the setting page and create and update association fields Create association field",
              "timedOut": null,
              "duration": 14569,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(_fieldSel.default.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Association\", _globalSel.default.dialogTitleText);\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Group\");\ncyGet(`${_globalSel.default.muiInput} input[name=\"Select Group\"]`).should('be.disabled').and('have.value', \"System Fields\");\ncy.wait(\"@assetsPipeline\");\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  const apiLength = response.body.result.values.length;\n  const assetsPip = response.body.result.values.find(ele => ele.disable != true);\n  cyGet(`${_globalSel.default.withtitleinputlabel}`).contains(\"Select Asset\");\n  budropdown(_globalSel.default.dialogContent, `button ${_globalSel.default.buttonTypography}`, assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label, apiLength, _globalSel.default.search, assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label, _globalSel.default.dialogTitleText);\n  ascInput(`${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n  (0, _field.headingNsubheading)();\n  buradio(\"Single-selection\");\n  cyGet(`[data-testid=\"avatarinput-textfield-ojwxr8kdk\"] label`).contains(`${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n  cyGet(`[data-testid=\"avatarinput-textfield-ojwxr8kdk\"] input`).should(\"have.attr\", \"placeholder\", `Select ${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "03a5f5ae-83f3-4750-9965-19ba6bcf80e0",
              "parentUUID": "d82ef67d-5bf4-4a54-9cb9-f8e6e6dd31fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify dissabled aaset",
              "fullTitle": "Nevigate the setting page and create and update association fields Verify dissabled aaset",
              "timedOut": null,
              "duration": 4182,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(_fieldSel.default.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Association\", _globalSel.default.dialogTitleText);\ncy.wait(\"@assetsPipeline\");\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  const apiLength = response.body.result.values.length;\n  const assetspipLabels = response.body.result.values.map(ele => ele.label);\n  const disableassetsPip = response.body.result.values.find(ele => ele.disable === true);\n  const availablePip = response.body.result.values.find(ele => ele.disable !== true);\n  if (disableassetsPip) {\n    var _availablePip$label;\n    const assetDropdownContain = (_availablePip$label = availablePip.label) !== null && _availablePip$label !== void 0 ? _availablePip$label : `Select`;\n    budropdown(_globalSel.default.dialogContent, `button ${_globalSel.default.buttonTypography}`, assetDropdownContain);\n    if (apiLength > 5) buSearchbox(_globalSel.default.search, disableassetsPip === null || disableassetsPip === void 0 ? void 0 : disableassetsPip.label);\n    budropdownOption(disableassetsPip === null || disableassetsPip === void 0 ? void 0 : disableassetsPip.label, `[data-testid=\"virtuallist-listitembutton-w6znzg16f\"]`)\n    // .find(`[data-testid=\"virtuallist-listitembutton-w6znzg16f\"]`)\n    .should('have.attr', 'aria-disabled', 'true');\n  } else {\n    cy.log(\"Association field not available in bin\");\n  }\n});",
              "err": {},
              "uuid": "a418a570-d5f6-4add-b681-9f0b6a826596",
              "parentUUID": "d82ef67d-5bf4-4a54-9cb9-f8e6e6dd31fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit association field",
              "fullTitle": "Nevigate the setting page and create and update association fields Edit association field",
              "timedOut": null,
              "duration": 4996,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const totalPages = response.body.result.pages.totalNoOfPages;\n  const handleAscField = fieldData => {\n    const ascField = fieldData.values.find(ele => ele.prop === \"asc\");\n    cy.intercept(method.get, `**/fms/fields/${ascField.id}?*`).as(\"fieldDetail\");\n    (0, _field.searchNactionField)(ascField.label, _globalSel.default.edit, \"Edit\");\n    ascInput(ascField.label);\n    cy.wait(\"@fieldDetail\").then(({\n      response\n    }) => {\n      if (response.body.result.selection === \"multi\") {\n        (0, _utility.editMultiSelectionField)();\n      } else {\n        (0, _utility.editSingleSelectionField)();\n      }\n    });\n  };\n  if (totalPages === 1) {\n    handleAscField(response.body.result);\n  } else {\n    cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click();\n    cy.wait(\"@fieldGrid\").then(({\n      response\n    }) => {\n      handleAscField(response.body.result);\n    });\n  }\n});\nbuSaveButton().click();\ncyGet(_globalSel.default.SnackbarMessage).invoke('text').should('include', _messages.default.updated);",
              "err": {},
              "uuid": "e54cca59-6db5-43b6-9d14-43ef576ca3ff",
              "parentUUID": "d82ef67d-5bf4-4a54-9cb9-f8e6e6dd31fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03a5f5ae-83f3-4750-9965-19ba6bcf80e0",
            "a418a570-d5f6-4add-b681-9f0b6a826596",
            "e54cca59-6db5-43b6-9d14-43ef576ca3ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23747,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "857f2517-0859-46ee-97eb-d781d852ebf6",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "34829094-d4b3-4c56-aa83-dfec7723eac1",
          "title": "Nevigate the setting page and create and update association fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach Field",
              "fullTitle": "Nevigate the setting page and create and update association fields Attach Field",
              "timedOut": null,
              "duration": 11872,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"Attach field\"]').click();\ncy.wait(\"@availableFiels\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cy.log(JSON.stringify(response));\n  const availablefieldLabel = response.body.result.values.map(ele => ele.label);\n  buSearchbox(`${fieldSel.attachfieldstextfield} ${globalSel.searchplaceholder}`, availablefieldLabel[0]);\n  cyGet(`[data-testid=\"propertylist-formcontrollabel-z6t5ag0ev\"] input[type=\"checkbox\"]`).first().click();\n  cyGet(`[data-testid=\"propertylist-formcontrollabel-z6t5ag0ev\"] [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`).contains(availablefieldLabel[0]);\n  buButton('[data-testid=\"Attach\"]').click();\n  onesecondWait();\n  buSearchbox(`${fieldSel.searchBoxfieldGrid} ${globalSel.searchplaceholder}`, availablefieldLabel[0]);\n  cyGet(`table tbody tr [aria-label=\"${availablefieldLabel[0]}\"]`).contains(availablefieldLabel[0]);\n});",
              "err": {},
              "uuid": "bd32faf4-cd36-4b8a-a2a3-32ef9b20300b",
              "parentUUID": "34829094-d4b3-4c56-aa83-dfec7723eac1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd32faf4-cd36-4b8a-a2a3-32ef9b20300b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11872,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a2df743c-41d4-4cb9-bf31-fda97f79bfaa",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7b68a823-1a24-4e6d-9f84-9379ebed0eb0",
          "title": "Nevigate the setting page and verify the field components",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify and select Asset Pipeline",
              "fullTitle": "Nevigate the setting page and verify the field components Verify and select Asset Pipeline",
              "timedOut": null,
              "duration": 7334,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const moduleName = module.toUpperCase();\nconst selectedAsset = asset === \"deal\" ? `${assetName}s` : `${assetName}`;\nconst subHeadingText = `Fields store information about ${moduleName}`;\nbuCaption(globalSel.settinglayoutbox, fieldSel.captionHeading, \"Fields\", fieldSel.captionSubHeading, subHeadingText);\ncyGet('[data-testid=\"properties-typography-ug3bego54\"]').contains(\"Select Asset\");\ncy.wait(\"@assetPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let piplabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `${globalSel.buttonBox} button`, piplabel[0]);\n  cyGet(`[data-testid=\"${selectedAsset}\"] [data-testid=\"groupbaseitems-typography-rnufjql1q\"]`).should(\"contain.text\", selectedAsset);\n  budropdownOption(piplabel[1]).contains(piplabel[1]).click();\n  budropdown(globalSel.settinglayoutbox, `${globalSel.buttonBox} button`, piplabel[1]);\n});\ncyGet('#simple-tab-0 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"All fields\");\ncyGet('#simple-tab-1 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"Groups\");\ncyGet('#simple-tab-2 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"Deleted fields\");",
              "err": {},
              "uuid": "c4ee5b8a-5168-4977-99da-25543ece45b9",
              "parentUUID": "7b68a823-1a24-4e6d-9f84-9379ebed0eb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the group filter is working as expected",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the group filter is working as expected",
              "timedOut": null,
              "duration": 3865,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@assetPipeline\", {\n  timeout: 10000\n}).then(() => {\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All groups\");\n  cy.wait(\"@groupList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let groupLabel = response.body.result.values.map(ele => ele.label);\n    budropdownOption(groupLabel[0]).contains(groupLabel[0]).click();\n    recordCountOnPage(\"5\");\n    validatetableRow(3, groupLabel[0]);\n  });\n});",
              "err": {},
              "uuid": "be2a03ee-7f53-49b3-96b7-1fae2cb51bc7",
              "parentUUID": "7b68a823-1a24-4e6d-9f84-9379ebed0eb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the field type filter should contains all field type",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the field type filter should contains all field type",
              "timedOut": null,
              "duration": 31241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\nfieldTypeFilterSel(\"Single line text\");\nfieldTypeFilterSel(\"Number\");\nfieldTypeFilterSel(\"Email\");\nfieldTypeFilterSel(\"URL\");\nfieldTypeFilterSel(\"Owner\");\nfieldTypeFilterSel(\"Created By\");\nfieldTypeFilterSel(\"Basic Dropdown\");\nfieldTypeFilterSel(\"Colored dropdown\");\nfieldTypeFilterSel(\"Date field\");\nfieldTypeFilterSel(\"Time field\");\nfieldTypeFilterSel(\"Date and time field\");\nfieldTypeFilterSel(\"Stage\");\nfieldTypeFilterSel(\"Attachment\");\nfieldTypeFilterSel(\"Address\");\nfieldTypeFilterSel(\"Image\");\nfieldTypeFilterSel(\"Multi line text\");\nfieldTypeFilterSel(\"Checkbox\");\nfieldTypeFilterSel(\"Radio\");\nfieldTypeFilterSel(\"Rating\");\nfieldTypeFilterSel(\"Formula\");\nfieldTypeFilterSel(\"Unique Id\");\nfieldTypeFilterSel(\"Custom form\");\nfieldTypeFilterSel(\"Data source\");",
              "err": {},
              "uuid": "eb058ea4-eac7-40d5-83ca-130d31f432dc",
              "parentUUID": "7b68a823-1a24-4e6d-9f84-9379ebed0eb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the field type filter is working as expected",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the field type filter is working as expected",
              "timedOut": null,
              "duration": 4683,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@assetPipeline\", {\n  timeout: 10000\n}).then(() => {\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\n  onesecondWait();\n  budropdownOption(\"Single line text\").contains(\"Single line text\").click();\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"Single line text\");\n  recordCountOnPage(\"5\");\n  validatetableRow(2, \"Single line text\");\n});",
              "err": {},
              "uuid": "6857eacd-3d09-492a-a271-7e4104a6c36a",
              "parentUUID": "7b68a823-1a24-4e6d-9f84-9379ebed0eb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate used count with API",
              "fullTitle": "Nevigate the setting page and verify the field components Validate used count with API",
              "timedOut": null,
              "duration": 2579,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-0 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"All fields\").click();\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n});\nrecordCountOnPage(\"10\");\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.recordCount);\n  cyGet('table > tbody > .MuiTableRow-root').each(($row, index) => {\n    cy.wrap($row).as(\"tableRow\");\n    cy.get(\"@tableRow\").find(':nth-child(5)').should('contain', abc[index]);\n  });\n});",
              "err": {},
              "uuid": "fba4fcfb-1447-4e88-87f9-d5c491906424",
              "parentUUID": "7b68a823-1a24-4e6d-9f84-9379ebed0eb0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate attached count with API",
              "fullTitle": "Nevigate the setting page and verify the field components Validate attached count with API",
              "timedOut": null,
              "duration": 2632,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-0 > .MuiTypography-root').contains(\"All fields\").click();\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n});\nrecordCountOnPage(\"10\");\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.attachedCount);\n  let counts = abc.map(fields => {\n    return fields.count;\n  });\n  cyGet('table > tbody > .MuiTableRow-root').each(($row, index) => {\n    cy.wrap($row).as(\"tableRow\");\n    cy.get(\"@tableRow\").find(':nth-child(6)').should('contain', counts[index]);\n  });\n});",
              "err": {},
              "uuid": "2761586a-3e0c-4111-b870-d4bd3e9ca1be",
              "parentUUID": "7b68a823-1a24-4e6d-9f84-9379ebed0eb0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c4ee5b8a-5168-4977-99da-25543ece45b9",
            "be2a03ee-7f53-49b3-96b7-1fae2cb51bc7",
            "eb058ea4-eac7-40d5-83ca-130d31f432dc",
            "6857eacd-3d09-492a-a271-7e4104a6c36a",
            "fba4fcfb-1447-4e88-87f9-d5c491906424",
            "2761586a-3e0c-4111-b870-d4bd3e9ca1be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 52334,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e196d0ce-bda0-41f7-b587-9c7a8ddaf603",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ac8c0041-ba75-4922-a079-d10ae5a33f0d",
          "title": "Navigate to setting page and create and update fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create URL field",
              "fullTitle": "Navigate to setting page and create and update fields Create URL field",
              "timedOut": null,
              "duration": 8315,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `URL-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"URL\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "5c2dd49c-8e5a-4813-ac99-33142fe97cac",
              "parentUUID": "ac8c0041-ba75-4922-a079-d10ae5a33f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit URL field",
              "fullTitle": "Navigate to setting page and create and update fields Edit URL field",
              "timedOut": null,
              "duration": 5643,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `URL-${new Date().valueOf()}`;\nsearchField(\"url\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);",
              "err": {},
              "uuid": "ad1a4eed-e614-42f2-b9ba-33637b6a6bd0",
              "parentUUID": "ac8c0041-ba75-4922-a079-d10ae5a33f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Mobile number field",
              "fullTitle": "Navigate to setting page and create and update fields Create Mobile number field",
              "timedOut": null,
              "duration": 4884,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Mobile-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Mobile number\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"none\", null, null, \"4-3-3\", globalSel.dialogTitleText);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "efc25819-debd-4818-ae48-9d7343ca0673",
              "parentUUID": "ac8c0041-ba75-4922-a079-d10ae5a33f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get phn field details through interception for edit phn field",
              "fullTitle": "Navigate to setting page and create and update fields Get phn field details through interception for edit phn field",
              "timedOut": null,
              "duration": 3918,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchField(\"phn\", null, 'Edit').then(fieldData => {\n  cy.wrap(fieldData).as(\"fieldData\");\n});\ncy.get(\"@fieldData\").then(res => {\n  field = res;\n});",
              "err": {},
              "uuid": "07514bab-a955-46cd-82b1-86d8a621187b",
              "parentUUID": "ac8c0041-ba75-4922-a079-d10ae5a33f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Mobile number field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Mobile number field",
              "timedOut": null,
              "duration": 4806,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Mobile-${new Date().valueOf()}`;\ncy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\nsearchField(\"phn\", field.label, 'Edit');\ncy.wait(\"@getFieldById\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const format = response.body.result.format;\n  labelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\n  budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, format, null, null, \"4-4-2\", globalSel.dialogTitleText);\n  preview(fieldLabel, `Enter ${fieldLabel}`);\n  buSaveButton().click();\n  cyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);\n});",
              "err": {},
              "uuid": "882d4378-509f-402e-933f-8c4944c45d3a",
              "parentUUID": "ac8c0041-ba75-4922-a079-d10ae5a33f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Number field",
              "fullTitle": "Navigate to setting page and create and update fields Create Number field",
              "timedOut": null,
              "duration": 4382,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Number-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Number\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\n// budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"none\", null, null, \"4-3-3\", globalSel.dialogTitleText);\nbutextField(globalSel.butextfield, \"#min\").type(2);\nbutextField(globalSel.butextfield, \"#max\").type(1000);\nbutextField(globalSel.butextfield, \"#decimal\").type(3);\n// cy.componentLabel(lead.formLabel, \"Min Number\", \"input\").type(2)\n// cy.componentLabel(lead.formLabel, \"Max Number\", \"input\").type(10)\n// cy.componentLabel(lead.formLabel, \"Decimal Points\", \"input\").type(2)\ncyGet('[data-testid=\"withtitle-inputlabel-9rg7j5v06\"]').contains(\"Max-3\");\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "b853c4af-6abf-4ea3-8f62-580e6945c268",
              "parentUUID": "ac8c0041-ba75-4922-a079-d10ae5a33f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Number field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Number field",
              "timedOut": null,
              "duration": 6075,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Number-${new Date().valueOf()}`;\nsearchField(\"num\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(globalSel.butextfield, \"#min\").clear().type(3);\nbutextField(globalSel.butextfield, \"#max\").clear().type(50000);\nbutextField(globalSel.butextfield, \"#decimal\").clear().type(2);\ncyGet('[data-testid=\"withtitle-inputlabel-9rg7j5v06\"]').contains(\"Max-3\");\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);",
              "err": {},
              "uuid": "ce0456dd-163a-4fc3-a027-19ab3bc0b079",
              "parentUUID": "ac8c0041-ba75-4922-a079-d10ae5a33f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Rating field",
              "fullTitle": "Navigate to setting page and create and update fields Create Rating field",
              "timedOut": null,
              "duration": 4061,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Rating-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Rating\", globalSel.dialogTitleText);\n// labelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\ncy.get('[data-testid=\"ratingfield-typography-34xvi9zqr\"]').contains(\"Type\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"Star\");\ncy.get('[data-testid=\"ratingfield-typography-lms2xp00s\"]').contains(\"Max\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"5\");\ncy.get('[data-testid=\"burating-formlabel-pfw5vth6c\"]').contains(fieldLabel);\ncy.get('[data-testid=\"burating-styledrating-i1n90l9jw\"] > label').click({\n  multiple: true,\n  force: true\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "940ef912-d25f-4332-b491-dc14b3c9e96f",
              "parentUUID": "ac8c0041-ba75-4922-a079-d10ae5a33f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Rating field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Rating field",
              "timedOut": null,
              "duration": 4522,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Rating-${new Date().valueOf()}`;\nsearchField(\"rtg\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\ncy.get('[data-testid=\"ratingfield-typography-34xvi9zqr\"]').contains(\"Type\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"Star\");\ncy.get('[data-testid=\"ratingfield-typography-lms2xp00s\"]').contains(\"Max\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"5\");\ncy.get('[data-testid=\"burating-formlabel-pfw5vth6c\"]').contains(fieldLabel);\ncy.get('[data-testid=\"burating-styledrating-i1n90l9jw\"] > label').click({\n  multiple: true,\n  force: true\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "d4866a2f-44ab-4604-89a8-06ddefb24eaf",
              "parentUUID": "ac8c0041-ba75-4922-a079-d10ae5a33f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create checkbox field",
              "fullTitle": "Navigate to setting page and create and update fields Create checkbox field",
              "timedOut": null,
              "duration": 3891,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fieldLabel = `Checkbox-${Date.now()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(fieldSel.fieldlabelbox).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Checkbox\", globalSel.dialogTitleText);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\n[\"Option 2\", \"Option 3\"].forEach((optionText, index) => {\n  buButton(globalSel.typBtn).contains(\"Add option\").click();\n  butextField(fieldSel.fieldOptionTextfield, `input[value = \"${optionText}\"]`).should(\"have.value\", optionText);\n});\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(`[data-testid^=\"bucheckboxgroup-formlabel\"]`).contains(fieldLabel);\n[\"Option 1\", \"Option 2\", \"Option 3\"].forEach(optionText => {\n  cyGet(checkboxWrapper).contains(optionText).should(\"have.attr\", \"aria-label\", optionText);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "b026bc5d-627d-4a8c-9307-ac719ec19907",
              "parentUUID": "ac8c0041-ba75-4922-a079-d10ae5a33f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit checkbox field",
              "fullTitle": "Navigate to setting page and create and update fields Edit checkbox field",
              "timedOut": null,
              "duration": 5945,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newLabel = `Checkbox-${Date.now()}`;\nconst newOption = `Option-${Date.now()}`;\nsearchField(\"chk\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(newLabel);\nbutextField(`${fieldSel.fieldOptionTextfield} :nth-child(1)`, `input`).first().clear().type(\"Edited Option 1\");\nbuButton(globalSel.typBtn).contains(\"Add option\").click();\ncy.get(fieldSel.fieldOptionTextfield).last().find(\"input\").clear().type(newOption);\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(checkboxWrapper).contains(\"Edited Option 1\").should(\"have.attr\", \"aria-label\", \"Edited Option 1\");\ncyGet(checkboxWrapper).contains(newOption).should(\"have.attr\", \"aria-label\", newOption);\nbuSaveButton().click();",
              "err": {},
              "uuid": "d820722c-497f-455c-a031-009a52384b73",
              "parentUUID": "ac8c0041-ba75-4922-a079-d10ae5a33f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create radio field",
              "fullTitle": "Navigate to setting page and create and update fields Create radio field",
              "timedOut": null,
              "duration": 3540,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Radio-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Radio\", globalSel.dialogTitleText);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\n[\"Option 2\", \"Option 3\"].forEach((optionText, index) => {\n  buButton(globalSel.typBtn).contains(\"Add option\").click();\n  butextField(fieldSel.fieldOptionTextfield, `input[value = \"${optionText}\"]`).should(\"have.value\", optionText);\n});\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(`[data-testid^=\"bucheckboxgroup-formlabel\"]`).contains(fieldLabel);\n[\"Option 1\", \"Option 2\", \"Option 3\"].forEach(optionText => {\n  cyGet(checkboxWrapper).contains(optionText).should(\"have.attr\", \"aria-label\", optionText);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "bd40aa78-1dec-4ad7-85eb-29d04ae4e318",
              "parentUUID": "ac8c0041-ba75-4922-a079-d10ae5a33f0d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit radio field",
              "fullTitle": "Navigate to setting page and create and update fields Edit radio field",
              "timedOut": null,
              "duration": 5414,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newLabel = `Radio-${Date.now()}`;\nconst newOption = `Option-${Date.now()}`;\nsearchField(\"rad\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(newLabel);\nbutextField(fieldSel.fieldOptionTextfield, `:nth-child(1) input`).first().clear().type(\"Edited Option 1\");\nbuButton(globalSel.typBtn).contains(\"Add option\").click();\ncy.get(fieldSel.fieldOptionTextfield).last().find(\"input\").clear().type(newOption);\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(checkboxWrapper).contains(\"Edited Option 1\").should(\"have.attr\", \"aria-label\", \"Edited Option 1\");\ncyGet(checkboxWrapper).contains(newOption).should(\"have.attr\", \"aria-label\", newOption);\nbuSaveButton().click();",
              "err": {},
              "uuid": "ed3dc73e-9391-4a65-9342-374b7ac41e12",
              "parentUUID": "ac8c0041-ba75-4922-a079-d10ae5a33f0d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c2dd49c-8e5a-4813-ac99-33142fe97cac",
            "ad1a4eed-e614-42f2-b9ba-33637b6a6bd0",
            "efc25819-debd-4818-ae48-9d7343ca0673",
            "07514bab-a955-46cd-82b1-86d8a621187b",
            "882d4378-509f-402e-933f-8c4944c45d3a",
            "b853c4af-6abf-4ea3-8f62-580e6945c268",
            "ce0456dd-163a-4fc3-a027-19ab3bc0b079",
            "940ef912-d25f-4332-b491-dc14b3c9e96f",
            "d4866a2f-44ab-4604-89a8-06ddefb24eaf",
            "b026bc5d-627d-4a8c-9307-ac719ec19907",
            "d820722c-497f-455c-a031-009a52384b73",
            "bd40aa78-1dec-4ad7-85eb-29d04ae4e318",
            "ed3dc73e-9391-4a65-9342-374b7ac41e12"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 65396,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d01aff22-7233-488c-84ce-3fd100bef3be",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c153550c-9b25-4a19-b8d7-08cca23f97a7",
          "title": "Nevigate the setting page and test the data source fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create Single selction data source field",
              "fullTitle": "Nevigate the setting page and test the data source fields Create Single selction data source field",
              "timedOut": null,
              "duration": 14213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dsrcField = `Data source-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Dropdown\", globalSel.dialogTitleText);\nlabelNplaceholder(dsrcField, `Please select the values`);\ncy.get('[data-testid=\"datasourcefield-typography-zui6gbl8o\"]').should(\"have.text\", \"Link Asset\");\ncy.get(`${globalSel.dialogContent} [data-testid=\"buswitch-button-79w8xnphk\"]`).click();\ncy.wait(\"@assetsPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const getAssets = response.body.result.values.map(ele => ele.label);\n  const totalAsset = response.body.result.pages.totalRecords;\n  const getLeadAssets = response.body.result.values.find(ele => ele.group !== asset);\n  budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, getAssets[0], totalAsset, globalSel.search, getLeadAssets.label, globalSel.dialogTitleText);\n});\nheadingNsubheading();\nfiledSelection(\"Single-selection\", \"single\").should(\"be.checked\");\nbudropdown(globalSel.dialogContent, `label`, dsrcField);\ncyGet(`${globalSel.dialogContent} [data-testid=\"datasourcefield-box-6mghg71wb\"] [data-testid=\"budropdown-box-ty1opau5a\"] input`).should(\"have.attr\", \"placeholder\", `Please select the values`);\n// preview(dsrcField, `Please select the values`)\nbuSaveButton().click();",
              "err": {},
              "uuid": "be4db0ca-727a-47c2-b4e1-3e5a5eeeacf9",
              "parentUUID": "c153550c-9b25-4a19-b8d7-08cca23f97a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit label and placehoder ofdata source field",
              "fullTitle": "Nevigate the setting page and test the data source fields Edit label and placehoder ofdata source field",
              "timedOut": null,
              "duration": 5848,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const dsrcField = `Data source-${Date.now()}`;\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const totalPages = response.body.result.pages.totalNoOfPages;\n  const editDataSource = fieldData => {\n    cy.intercept(method.get, `**/fms/fields/${fieldData === null || fieldData === void 0 ? void 0 : fieldData.id}?*`).as(\"fieldDetail\");\n    searchNactionField(fieldData.label, '#edit', \"Edit\");\n    labelNplaceholder(dsrcField, `Please select the values`);\n    cy.wait(\"@fieldDetail\").then(({\n      response\n    }) => {\n      const destPip = response.body.result.catId.label;\n      cy.get(`[aria-label=${destPip}]`).parent().should(\"be.disabled\");\n      // headingNsubheading();\n      if (fieldData.selection === \"multi\") {\n        editMultiSelectionField();\n      } else {\n        editSingleSelectionField();\n      }\n    });\n  };\n  if (totalPages === 1) {\n    const dsrcFieldData = response.body.result.values.find(ele => ele.prop === \"dsrc\");\n    editDataSource(dsrcFieldData);\n  } else {\n    cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click(); // Move to last page\n    cy.wait(\"@fieldGrid\").then(({\n      response\n    }) => {\n      const dsrcFieldData = response.body.result.values.find(ele => ele.prop === \"dsrc\");\n      editDataSource(dsrcFieldData);\n    });\n  }\n});\nbudropdown(globalSel.dialogContent, `label`, dsrcField);\ncyGet(`${globalSel.dialogContent} [data-testid=\"datasourcefield-box-6mghg71wb\"] [data-testid=\"budropdown-box-ty1opau5a\"] input`).should(\"have.attr\", \"placeholder\", `Please select the values`);\n// preview(dsrcField, `Please select the values`)\nbuSaveButton().click();",
              "err": {},
              "uuid": "28778465-afbf-43c8-aea9-ab456c019be6",
              "parentUUID": "c153550c-9b25-4a19-b8d7-08cca23f97a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be4db0ca-727a-47c2-b4e1-3e5a5eeeacf9",
            "28778465-afbf-43c8-aea9-ab456c019be6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20061,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c66ff67f-40ba-489a-beae-c0e6fe83165a",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "08d9a586-3598-480a-aa04-fa834e2bfafe",
          "title": "Nevigate the setting page and test the date and time fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create date and time field with Calendar Type",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date and time field with Calendar Type",
              "timedOut": null,
              "duration": 9761,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dtmField = `dateNtime-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date and Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dtmField, `Please select Date & Time`);\ncy.get('[role=\"dialog\"] [data-testid=\"buswitch-button-79w8xnphk\"]').should(\"have.attr\", \"aria-checked\", \"false\");\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Calendar Type\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"None\", null, null, \"Past Dates\", globalSel.dialogTitleText);\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\ncyGet(`[data-testid=\"buradiogroup-formlabel-ofdcw41bb\"]`).contains(\"Time Format\");\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).first().find(`input`).should(\"have.value\", \"24\");\n// cy.componentLabel(lead.formLabel, \"Time Format\", \"input[value='12']\").should(\"be.checked\").and(\"have.attr\", \"type\", \"radio\")\n// cy.get('.MuiFormGroup-root > :nth-child(2) > .MuiTypography-root').should(\"have.text\", \"12hrs\")\n// cy.componentLabel(lead.formLabel, \"Time Format\", \"input[value='24']\").should(\"have.attr\", \"type\", \"radio\").click()\n// cy.get('.MuiFormGroup-root > :nth-child(1) > .MuiTypography-root').should(\"have.text\", \"24hrs\")\npreviewDateField(dtmField, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "d5235ca2-e478-465b-ad84-831fd40ecdd5",
              "parentUUID": "08d9a586-3598-480a-aa04-fa834e2bfafe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date and time field with Date Range Selection",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date and time field with Date Range Selection",
              "timedOut": null,
              "duration": 9069,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const today = new Date();\nconst currentYear = today.getFullYear();\nconst currentDay = String(today.getDate());\nconst previousDate = new Date();\npreviousDate.setFullYear(previousDate.getFullYear() - 1);\nconst prevYear = previousDate.getFullYear();\nlet dtmField = `dateNtime-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date and Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dtmField, `Please select Date & Time`);\ncy.get('[role=\"dialog\"] button[role=\"switch\"]').click();\n// Choose Min Date\ncy.get('[placeholder= \"Min\"]').prev().find('button').click();\ndateDailogComponent(prevYear, \"1\");\ncy.get('.MuiPickersLayout-root > .MuiDialogActions-root > .MuiButtonBase-root').contains(\"OK\").click();\ncy.wait(250);\n// Choose Max Date\ncy.get('[placeholder= \"Max\"]').prev().find('button').click();\ndateDailogComponent(currentYear, currentDay);\ncy.get('.MuiPickersLayout-root > .MuiDialogActions-root > .MuiButtonBase-root').contains(\"OK\").click();\n// Calendar Type should be disabled when choose Date Range Selection\ncyGet(`[data-testid=\"withtitle-box-mp6w6v7ka\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).should(\"be.disabled\");\n// Restricte days\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\n// Choose date format\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(dtmField, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "a8acf0d3-8443-45e2-b52f-3852196fe1e6",
              "parentUUID": "08d9a586-3598-480a-aa04-fa834e2bfafe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit date and time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit date and time field",
              "timedOut": null,
              "duration": 5780,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dtmFieldLabel = `dateNtime-${new Date().valueOf()}`;\nsearchField(\"dtm\", null, 'Edit');\nlabelNplaceholder(dtmFieldLabel, `Please select Date & Time`);\npreviewDateField(dtmFieldLabel, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "170e9584-6444-47c2-a4ed-1b0a5e971ff5",
              "parentUUID": "08d9a586-3598-480a-aa04-fa834e2bfafe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date field with Calendar Type",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date field with Calendar Type",
              "timedOut": null,
              "duration": 5612,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dateField = `Date-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dateField, `Please select Date`);\ncy.get('[role=\"dialog\"] [data-testid=\"buswitch-button-79w8xnphk\"]').should(\"have.attr\", \"aria-checked\", \"false\");\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Calendar Type\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"None\", null, null, \"Past Dates\", globalSel.dialogTitleText);\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\npreviewDateField(dateField, `Please select Date`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "0038576d-f8ba-4e0f-ba75-8a117b4d0e7d",
              "parentUUID": "08d9a586-3598-480a-aa04-fa834e2bfafe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date field with Date Range Selection",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date field with Date Range Selection",
              "timedOut": null,
              "duration": 7908,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const today = new Date();\nconst currentYear = today.getFullYear();\nconst currentDay = String(today.getDate());\nconst previousDate = new Date();\npreviousDate.setFullYear(previousDate.getFullYear() - 1);\nconst prevYear = previousDate.getFullYear();\nlet dateField = `date-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dateField, `Please select Date`);\ncy.get('[role=\"dialog\"] button[role=\"switch\"]').click();\n// Choose Min Date\ncy.get('[placeholder= \"Min\"]').prev().find('button').click();\ndateDailogComponent(prevYear, \"1\");\ncy.wait(250);\n// Choose Max Date\ncy.get('[placeholder= \"Max\"]').prev().find('button').click();\ndateDailogComponent(currentYear, currentDay);\n// Calendar Type should be disabled when choose Date Range Selection\ncyGet(`[data-testid=\"withtitle-box-mp6w6v7ka\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).should(\"be.disabled\");\n// Restricte days\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\npreviewDateField(dateField, `Please select Date`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "4cfa102c-9c31-4c55-ade3-5a50bcc5d382",
              "parentUUID": "08d9a586-3598-480a-aa04-fa834e2bfafe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit date field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit date field",
              "timedOut": null,
              "duration": 5319,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Date-${new Date().valueOf()}`;\nsearchField(\"dat\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Please select Date`);\npreviewDateField(fieldLabel, `Please select Date`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "b2e6a4dd-66d4-4690-b7e1-ae3de332aa78",
              "parentUUID": "08d9a586-3598-480a-aa04-fa834e2bfafe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create time field",
              "timedOut": null,
              "duration": 3976,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let timeField = `Time-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(timeField, `Please select Time`);\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(timeField, `Please select Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "587223a9-b066-4c03-b8de-b68611de5ac0",
              "parentUUID": "08d9a586-3598-480a-aa04-fa834e2bfafe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit time field",
              "timedOut": null,
              "duration": 4530,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Time-${new Date().valueOf()}`;\nsearchField(\"tim\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Please select Time`);\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(fieldLabel, `Please select Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "6b5d90c4-ba66-4013-8512-737a9a70821f",
              "parentUUID": "08d9a586-3598-480a-aa04-fa834e2bfafe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5235ca2-e478-465b-ad84-831fd40ecdd5",
            "a8acf0d3-8443-45e2-b52f-3852196fe1e6",
            "170e9584-6444-47c2-a4ed-1b0a5e971ff5",
            "0038576d-f8ba-4e0f-ba75-8a117b4d0e7d",
            "4cfa102c-9c31-4c55-ade3-5a50bcc5d382",
            "b2e6a4dd-66d4-4690-b7e1-ae3de332aa78",
            "587223a9-b066-4c03-b8de-b68611de5ac0",
            "6b5d90c4-ba66-4013-8512-737a9a70821f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 51955,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2011e838-5c05-4616-8baa-49b6bf0261af",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c9769f1d-52d7-4007-a99c-a38b1c2abd5d",
          "title": "Nevigate the setting page and test the email fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Field name should be unique",
              "fullTitle": "Nevigate the setting page and test the email fields Field name should be unique",
              "timedOut": null,
              "duration": 6559,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const roleOfUser = response.body.result.user.role;\n  const manageProperties = response.body.result.settings.permission[asset].manageProperties;\n  if (roleOfUser === \"std\" && manageProperties === false) {\n    buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n  } else {\n    cy.wait(\"@fieldGrid\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const existingField = response.body.result.values.find(fld => {\n        var _fld$group;\n        return ((_fld$group = fld.group) === null || _fld$group === void 0 ? void 0 : _fld$group.scope) === \"public\";\n      });\n      buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n      labelNplaceholder(existingField === null || existingField === void 0 ? void 0 : existingField.label, `Please Enter ${existingField === null || existingField === void 0 ? void 0 : existingField.label}`);\n      cyGet(`#string_label-helper-text`).should(\"contain.text\", \"Field label already exists\");\n      buSaveButton().should(\"be.disabled\");\n    });\n  }\n  ;\n});",
              "err": {},
              "uuid": "e198583e-1cbd-4d7a-b1ba-395b743762ac",
              "parentUUID": "c9769f1d-52d7-4007-a99c-a38b1c2abd5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Allow All",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Allow All",
              "timedOut": null,
              "duration": 4727,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fieldLabel = `Email-${new Date().valueOf()}`;\ncy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cy.wrap(response.body.result).as(\"appAuthResponse\");\n  const roleOfUser = response.body.result.user.role;\n  const manageProperties = response.body.result.settings.permission[asset].manageProperties;\n  if (roleOfUser === \"std\" && manageProperties === false) {\n    buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n  } else {\n    buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n    cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n    budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n    labelNplaceholder(fieldLabel, `Please Enter Email`);\n    cyGet('[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]').should(\"have.text\", \"Mode of Email\");\n    budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Allow All\");\n    preview(fieldLabel, `Please Enter Email`);\n    buSaveButton().click();\n  }\n  ;\n});\ncy.get(\"@appAuthResponse\").then(res => {\n  appAuthRes = res;\n});",
              "err": {},
              "uuid": "74325c1a-3682-4674-a1eb-a5497b297f35",
              "parentUUID": "c9769f1d-52d7-4007-a99c-a38b1c2abd5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Allow some",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Allow some",
              "timedOut": null,
              "duration": 5567,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nconst roleOfUser = appAuthRes.user.role;\nconst manageProperties = appAuthRes.settings.permission[asset].manageProperties;\nif (roleOfUser === \"std\" && manageProperties === false) {\n  buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n} else {\n  buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n  cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n  budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n  emlComponentSel(label, \"Allow All\", \"Allow Some\", \"Select Domains\", \"gmail.com\");\n}\n;",
              "err": {},
              "uuid": "790df3ec-2486-45b0-9591-ba3a05cca64d",
              "parentUUID": "c9769f1d-52d7-4007-a99c-a38b1c2abd5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit email field for Allow some Email domains",
              "fullTitle": "Nevigate the setting page and test the email fields Edit email field for Allow some Email domains",
              "timedOut": null,
              "duration": 7901,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  let assetPipId = response.body.result.values.map(ele => ele.id);\n  cy.wrap(assetPipId[0]).as(\"assetPipId\");\n});\n// cy.get(\"@assetPipId\").then((response) => { assetPipelineId = response });\nsearchField(\"eml\", null, 'Edit').then(field => {\n  cy.get('[data-testid=\"close-dialog\"]').click();\n  // const fieldId = field?.id\n  cy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\n  searchField(\"phn\", field.label, 'Edit');\n  cy.wait(\"@getFieldById\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let modetype;\n    const mode = response.body.result.mode;\n    const exclude = response.body.result.excludes;\n    const updatedDomains = allowedMailDomain.filter(domain => !exclude.includes(domain));\n    if (mode === 1) {\n      modetype = \"Allow Some\";\n    } else if (mode === 0) {\n      modetype = \"Restrict Some\";\n    } else {\n      modetype = \"Allow All\";\n    }\n    emlComponentSel(label, modetype, \"Allow Some\", exclude[0], updatedDomains[0]);\n  });\n});",
              "err": {},
              "uuid": "f5207ba5-6ccb-45ca-87ac-3b8278f0ea80",
              "parentUUID": "c9769f1d-52d7-4007-a99c-a38b1c2abd5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Restrict some",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Restrict some",
              "timedOut": null,
              "duration": 5551,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nconst roleOfUser = appAuthRes.user.role;\nconst manageProperties = appAuthRes.settings.permission[asset].manageProperties;\nif (roleOfUser === \"std\" && manageProperties === false) {\n  buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n} else {\n  buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n  cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n  budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n  emlComponentSel(label, \"Allow All\", \"Allow Some\", \"Select Domains\", \"yahoo.com\");\n}\n;",
              "err": {},
              "uuid": "3e5d18f0-1b38-482c-9678-f7208a6afafc",
              "parentUUID": "c9769f1d-52d7-4007-a99c-a38b1c2abd5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit email field for Restricted Email domains",
              "fullTitle": "Nevigate the setting page and test the email fields Edit email field for Restricted Email domains",
              "timedOut": null,
              "duration": 7963,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nsearchField(\"eml\", null, 'Edit').then(field => {\n  cy.get('[data-testid=\"close-dialog\"]').click();\n  // const fieldId = field?.id\n  cy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\n  searchField(\"phn\", field.label, 'Edit');\n  cy.wait(\"@getFieldById\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let modetype;\n    const mode = response.body.result.mode;\n    const exclude = response.body.result.excludes;\n    const updatedDomains = allowedMailDomain.filter(domain => !exclude.includes(domain));\n    if (mode === 1) {\n      modetype = \"Allow Some\";\n    } else if (mode === 0) {\n      modetype = \"Restrict Some\";\n    } else {\n      modetype = \"Allow All\";\n    }\n    emlComponentSel(label, modetype, \"Restrict Some\", exclude[0], updatedDomains[0]);\n  });\n});",
              "err": {},
              "uuid": "e4db7eb1-071e-4db3-91cd-fa7386a07805",
              "parentUUID": "c9769f1d-52d7-4007-a99c-a38b1c2abd5d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e198583e-1cbd-4d7a-b1ba-395b743762ac",
            "74325c1a-3682-4674-a1eb-a5497b297f35",
            "790df3ec-2486-45b0-9591-ba3a05cca64d",
            "f5207ba5-6ccb-45ca-87ac-3b8278f0ea80",
            "3e5d18f0-1b38-482c-9678-f7208a6afafc",
            "e4db7eb1-071e-4db3-91cd-fa7386a07805"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 38268,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d0c5960a-9e22-49ae-8705-2a12c5d2ecd9",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a96a9ab2-0a58-446b-9bc3-089c9ff0caad",
          "title": "Nevigate the setting page and test the field group",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add new group",
              "fullTitle": "Nevigate the setting page and test the field group Add new group",
              "timedOut": null,
              "duration": 6500,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let groupName = `Group-${new Date().valueOf()}`;\ncy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.get(lead.typeBtn).contains(\"Add Group\").click();\ncy.get(lead.dialogTitle).should(\"have.text\", \"Create group\");\ncy.componentLabel(lead.formLabel, \"Create group\", \"input\").type(groupName);\ncy.get(\"#cancel\").should(\"have.text\", \"Cancel\");\ncy.get(\"#add\").click();",
              "err": {},
              "uuid": "603897f4-b195-4b47-b2ea-311fc138cdd2",
              "parentUUID": "a96a9ab2-0a58-446b-9bc3-089c9ff0caad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Private group can't be edited and deleted",
              "fullTitle": "Nevigate the setting page and test the field group Private group can't be edited and deleted",
              "timedOut": null,
              "duration": 3426,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(\"@groupGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let privateGroup = response.body.result.values.find(ele => ele.scope === \"private\");\n  cy.contains(\"tr\", privateGroup === null || privateGroup === void 0 ? void 0 : privateGroup.label).find(`[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`).should(\"contain.text\", privateGroup === null || privateGroup === void 0 ? void 0 : privateGroup.label);\n  cy.contains(\"tr\", privateGroup === null || privateGroup === void 0 ? void 0 : privateGroup.label).find(\"#actions\").click();\n  cyGet(\"#edit\").trigger(\"mouseover\", {\n    force: true\n  });\n  cyGet('.MuiTooltip-tooltip').contains(\"Private group can't be edited\");\n  cyGet('#edit > .MuiButtonBase-root ').should(\"have.attr\", \"aria-disabled\", \"true\");\n  cyGet(\"#delete\").trigger(\"mouseover\", {\n    force: true\n  });\n  cyGet('.MuiTooltip-tooltip').contains(\"Private group can't be deleted\");\n  cyGet('#delete > .MuiButtonBase-root ').should(\"have.attr\", \"aria-disabled\", \"true\");\n});",
              "err": {},
              "uuid": "d9571016-5925-4040-b2ee-7e8f845125f8",
              "parentUUID": "a96a9ab2-0a58-446b-9bc3-089c9ff0caad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate assigned fields count with API",
              "fullTitle": "Nevigate the setting page and test the field group Validate assigned fields count with API",
              "timedOut": null,
              "duration": 4778,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(1000);\ncy.recordCountOnPage(\"5\");\ncy.wait(\"@groupGrid\").then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.assignedFields);\n  let counts = abc.map(fields => {\n    let count = fields.count;\n    return count === 0 ? \"--\" : count;\n  });\n  cyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(2)\").each(($row, index) => {\n    cy.wrap($row).contains(counts[index]);\n  });\n});",
              "err": {},
              "uuid": "cfa60e36-5a91-42bf-8f48-efec7b6f1ca5",
              "parentUUID": "a96a9ab2-0a58-446b-9bc3-089c9ff0caad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "group name should be unique",
              "fullTitle": "Nevigate the setting page and test the field group group name should be unique",
              "timedOut": null,
              "duration": 4198,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(\"@groupGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const group = response.body.result.values.filter(grp => grp.scope === \"public\");\n  cy.contains(`tr`, group[0].label).find(\"#actions\").click();\n  cyGet(\"#edit\").click();\n  cyGet(`[data-testid=\"title-dialog\"] p`).should(\"contain.text\", \"Rename group\");\n  cyGet(`[data-testid=\"butextfield-textfield-lrb6zu6xa\"] label`).contains(\"Rename group\").next().find(`input`).as(\"renameGroupInput\");\n  cy.get(\"@renameGroupInput\").should(\"have.value\", group[0].label);\n  cy.get(\"@renameGroupInput\").clear().type(group[1].label);\n  onesecondWait();\n  cy.wait(\"@groupExist\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    expect(response.body).has.property(\"message\", \"Group already exists.\");\n    // cyGet(\".MuiFormHelperText-root\").should(\"contain.text\", response.body.message)\n    cyGet(\"#add\").should(\"be.disabled\");\n  });\n});",
              "err": {},
              "uuid": "204ed94f-446a-4a28-9ab4-13f8fb2c25ce",
              "parentUUID": "a96a9ab2-0a58-446b-9bc3-089c9ff0caad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Rename group",
              "fullTitle": "Nevigate the setting page and test the field group Rename group",
              "timedOut": null,
              "duration": 4074,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let groupName = `Group-${new Date().valueOf()}`;\ncyGet('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(\"@groupGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const group = response.body.result.values.find(grp => grp.scope === \"public\");\n  cy.log(JSON.stringify(group));\n  cy.contains(`tr`, group === null || group === void 0 ? void 0 : group.label).find(\"#actions\").click();\n  cyGet(\"#edit\").click();\n  cyGet(`[data-testid=\"butextfield-textfield-lrb6zu6xa\"] label`).contains(\"Rename group\").next().find(`input`).as(\"renameGroupInput\");\n  cy.get(\"@renameGroupInput\").should(\"have.value\", group === null || group === void 0 ? void 0 : group.label);\n  cy.get(\"@renameGroupInput\").clear().type(groupName);\n  cyGet(\"#cancel\").should(\"contain.text\", \"Cancel\");\n  cyGet(\"#add\").click();\n});",
              "err": {},
              "uuid": "a3d29180-ffc1-4deb-9245-dde0875542c1",
              "parentUUID": "a96a9ab2-0a58-446b-9bc3-089c9ff0caad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete group",
              "fullTitle": "Nevigate the setting page and test the field group Delete group",
              "timedOut": null,
              "duration": 5110,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let msg1 = \"Delete Group\";\nlet msg2 = \"Are you sure! want to delete this group?\";\ncy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(1000);\ncy.recordCountOnPage(\"5\");\ncyGet('[aria-label=\"pagination navigation\"] ul > :last').prev().click();\ncy.wait(\"@groupGrid\").then(({\n  response\n}) => {\n  const group = response.body.result.values.find(grp => grp.assignedFields.count === 0 && grp.scope === \"public\");\n  if (group) {\n    cy.contains(\"tr\", group.label).find(\"#actions\").click();\n    cyGet(\"#delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n  } else {\n    cy.log(`Either all groups contain the field, or no public groups are available: ${group}`);\n  }\n});",
              "err": {},
              "uuid": "69ca3349-ac94-44fb-b4bb-37e9b55b4a9e",
              "parentUUID": "a96a9ab2-0a58-446b-9bc3-089c9ff0caad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "603897f4-b195-4b47-b2ea-311fc138cdd2",
            "d9571016-5925-4040-b2ee-7e8f845125f8",
            "cfa60e36-5a91-42bf-8f48-efec7b6f1ca5",
            "204ed94f-446a-4a28-9ab4-13f8fb2c25ce",
            "a3d29180-ffc1-4deb-9245-dde0875542c1",
            "69ca3349-ac94-44fb-b4bb-37e9b55b4a9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28086,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "77143be9-a8ca-476d-b43f-76cfa2beb605",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "be001f9b-622d-41b6-96cd-92885320b747",
          "title": "Navigate to setting page and create and update fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create Multi line text field",
              "fullTitle": "Navigate to setting page and create and update fields Create Multi line text field",
              "timedOut": null,
              "duration": 10515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Multiline-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Multi line text\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${globalSel.butextfield}`, \"input\").type(3); // set min\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${globalSel.butextfield}`, \"input\").type(100); // set max\n// butextField(globalSel.butextfield, \"#max\").type(100)\ntextCaseFormat();\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"] > label`).should(\"have.text\", fieldLabel);\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"]`).find(\"textarea\").should(\"have.attr\", \"placeholder\", `Enter ${fieldLabel}`);\n// preview(fieldLabel, `Enter ${fieldLabel}`)\nbuSaveButton().click();\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.created);",
              "err": {},
              "uuid": "31b5c1a8-20f1-4770-a6dc-14439323356e",
              "parentUUID": "be001f9b-622d-41b6-96cd-92885320b747",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Multi line text field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Multi line text field",
              "timedOut": null,
              "duration": 9694,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Multiline-${new Date().valueOf()}`;\ncy.visit(`${Cypress.env(\"lmsUrl\")}/setting/properties`);\ncy.wait(\"@assetsPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let assetPipId = response.body.result.values.map(ele => ele.id);\n  cy.wrap(assetPipId[0]).as(\"assetPipId\");\n});\ncy.get(\"@assetPipId\").then(response => {\n  assetPipelineId = response;\n});\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\nfieldTypeFilterOnSetting(\"Multi line text\");\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"Multi line text\");\nsearchField(\"txa\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${globalSel.butextfield}`, \"input\").clear().type(3); // edit min\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${globalSel.butextfield}`, \"input\").clear().type(150); // edit max\ntextCaseFormat();\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"] > label`).should(\"have.text\", fieldLabel);\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"]`).find(\"textarea\").should(\"have.attr\", \"placeholder\", `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", messages.updated);",
              "err": {},
              "uuid": "668f95ab-e81f-4ebd-8abb-80cb959ec23b",
              "parentUUID": "be001f9b-622d-41b6-96cd-92885320b747",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31b5c1a8-20f1-4770-a6dc-14439323356e",
            "668f95ab-e81f-4ebd-8abb-80cb959ec23b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20209,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6e085493-efb7-44a4-a54f-a192c4b0b740",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
      "file": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "00525eba-7bd8-4595-a32b-a2a4993888d2",
          "title": "Nevigate the lead page and Test Header componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
          "file": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Header componet of lead management",
              "fullTitle": "Nevigate the lead page and Test Header componet Header componet of lead management",
              "timedOut": null,
              "duration": 7959,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "/*\n    Company profile Icon and Name should be present\n    Action, Export, Import and Create lead button should be present\n    Pipeline-user Show and add icon should be present\n    List view, Kanban view and Chart view button should be present\n*/\n// Company profile Icon and Name\ncy.wait(\"@appAuth\").then(({\n  response\n}) => {\n  cy.get('#bu-layout h6').should(\"have.text\", response.body.result.company.label);\n});\n// Action button\ncyGet(`[data-testid=\"Action\"]`).should(\"contain.text\", \"Action\");\n// Export button\ncyGet(`[data-testid=\"Export\"]`).should(\"contain.text\", \"Export\");\n// Import Button\ncyGet(`[data-testid=\"Import\"]`).should(\"contain.text\", \"Import\");\n// Create record button\ncyGet(`[data-testid=\"Create ${assetName}\"]`).should(\"contain.text\", `Create ${assetName}`);\n// Pipeline-user Show and add icon\ncy.wait(\"@crewPipelines\").then(({\n  response\n}) => {\n  let userOnPip = response.body.result.values.length;\n  if (userOnPip > 4) {\n    let userInPlusIcon = response.body.result.pages.totalRecords - 3;\n    cy.get('#bu-layout [data-testid=\"activitybar-box-txgt1t82k\"] [data-testid=\"buavatargroup-avatargroup-dovjvw4cl\"] .MuiAvatarGroup-avatar').contains(userInPlusIcon);\n  } else {\n    cy.get('#bu-layout [data-testid=\"activitybar-box-txgt1t82k\"] [data-testid=\"buavatargroup-avatargroup-dovjvw4cl\"] .MuiAvatarGroup-avatar').then($el => {\n      expect($el.length).be.eq(userOnPip);\n    });\n  }\n});\n// List view button\ncy.get('#bu-layout [aria-label=\"Grid view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");\n// Kanban view button\nif (asset === \"contact\") {\n  cy.get('#bu-layout [aria-label=\"Card view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");\n} else {\n  cy.get('#bu-layout [aria-label=\"Kanban view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");\n}\n// Chart view button\ncy.get('#bu-layout [aria-label=\"Chart view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");",
              "err": {},
              "uuid": "a6704802-ac66-4933-b9dc-416dbe72c533",
              "parentUUID": "00525eba-7bd8-4595-a32b-a2a4993888d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6704802-ac66-4933-b9dc-416dbe72c533"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7959,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "36809f59-2e06-454a-bbc0-6fadb2d6d3a7",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
      "file": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b440da00-20ea-4dda-8d0e-543c54905bd4",
          "title": "Nevigate the lead page and Test Header componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
          "file": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Header componet of lead management",
              "fullTitle": "Nevigate the lead page and Test Header componet Header componet of lead management",
              "timedOut": null,
              "duration": 6028,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#app-routes > header > .MuiToolbar-root .MuiButtonBase-root > :first ');\n// .should(\"have.css\", \"color\", \"rgba(0, 0, 0, 0.6)\").and(\"have.css\", \"height\")\n// .and(\"have.css\", \"width\")\ncy.get('#app-routes > header a[href=\"/dashboard\"]').should(\"have.attr\", \"style\", \"display: flex;\");\ncy.get('#app-routes > header h6').should(\"have.text\", formatModuleName(module));\n// Check Light/Dark mode functionality\ncy.get('#app-routes > header [aria-label] :first .MuiTypography-root').then($item => {\n  let data = $item.text();\n  cy.log(data);\n  if (data === \"OFF\") {\n    cy.get('#app-routes > header [role=\"switch\"]').click({\n      force: true\n    });\n    cy.get('#app-routes > header [aria-label] :first .MuiTypography-root').should(\"have.text\", \"ON\");\n  } else if (data === \"ON\") {\n    cy.get('#app-routes > header [role=\"switch\"]').click({\n      force: true\n    });\n    cy.get('#app-routes > header [aria-label] :first .MuiTypography-root').should(\"have.text\", \"OFF\");\n  }\n});\n// Check Notifications button present on header or not\ncy.get('#app-routes > header [aria-label=\"Notifications\"]').click();\ncy.get('.MuiDrawer-paperAnchorRight h6').should(\"have.text\", \"Notifications\");\ncy.get('.MuiDrawer-paperAnchorRight .MuiBox-root > .MuiButtonBase-root .MuiSvgIcon-fontSizeSmall').click();\n// Check Settings button present on header or not\ncy.get('#app-routes > header [aria-label=\"Settings\"] button').should(\"have.attr\", \"type\", \"button\");\n// Check User Profile button present on header or not\ncy.get('#app-routes > header [aria-label=\"User Profile\"] button').should(\"have.attr\", \"aria-label\", \"account of current user\").click();\ncy.wait(\"@appAuth\").then(({\n  response\n}) => {\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.user.email);\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.company.label);\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.company.name);\n});",
              "err": {},
              "uuid": "14408443-e589-45be-b359-16f3016a4679",
              "parentUUID": "b440da00-20ea-4dda-8d0e-543c54905bd4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "14408443-e589-45be-b359-16f3016a4679"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6028,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0d52545f-0cb7-41f7-b561-adacc55359e0",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4ded04d7-1177-45ef-b7b0-f50c26880574",
          "title": "Navigate on field config page",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the presence of the \"Attach Field\", \"Create field\", \"Cancel\" and \"Apply\" button",
              "fullTitle": "Navigate on field config page Verify the presence of the \"Attach Field\", \"Create field\", \"Cancel\" and \"Apply\" button",
              "timedOut": null,
              "duration": 7185,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"title-dialog\"]').should(\"have.text\", \"Edit fields\");\ncy.get('[data-testid=\"Attach field\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Attach field\");\ncy.get('[data-testid=\"Create field\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Create field\");\ncy.get('[data-testid=\"cancel\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"cancel\");\ncy.get('[data-testid=\"Apply\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Apply\");",
              "err": {},
              "uuid": "fccba73c-5723-41f5-a8b8-aaaefae38081",
              "parentUUID": "4ded04d7-1177-45ef-b7b0-f50c26880574",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the presence of the System required field on form config",
              "fullTitle": "Navigate on field config page Verify the presence of the System required field on form config",
              "timedOut": null,
              "duration": 5950,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait('@fieldConfig').then(interception => {\n  const responseBody = interception.response.body;\n  const values = responseBody.result.values;\n  const filteredFields = values.filter(field => field.system && field.required);\n  const labels = filteredFields.map(field => field.label);\n  cy.log(labels.join(', '));\n  cy.get('[data-testid=\"buformeditor-listitemtext-ofe56xosa\"]').contains(\"System Fields\");\n  labels.forEach(label => {\n    cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input[placeholder=\"Search...\"]').clear({\n      force: true\n    }).type(label, {\n      force: true\n    });\n    cy.get('[data-testid=\"propertylist-listitemtext-esgc2itka\"]').first().should('have.text', label);\n    cy.get('[data-testid=\"propertylist-checkbox-9qc6i0a6w\"] input').should('have.attr', 'disabled');\n    // .and('have.attr', 'checked');\n  });\n});",
              "err": {},
              "uuid": "3c6bd90f-9b5b-4ea9-9a58-461d9cdc0658",
              "parentUUID": "4ded04d7-1177-45ef-b7b0-f50c26880574",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the System field should be checkable or uncheckable on form config",
              "fullTitle": "Navigate on field config page Verify the System field should be checkable or uncheckable on form config",
              "timedOut": null,
              "duration": 7445,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait('@fieldConfig').then(interception => {\n  const responseBody = interception.response.body;\n  const values = responseBody.result.values;\n  const filteredFields = values.filter(field => field.system);\n  const labels = filteredFields.map(field => field.label);\n  cy.log(labels.join(', '));\n  cy.get('[data-testid=\"buformeditor-listitemtext-ofe56xosa\"]').contains(\"System Fields\");\n  labels.forEach(label => {\n    cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input[placeholder=\"Search...\"]').clear({\n      force: true\n    }).type(label, {\n      force: true\n    });\n    cy.get('[data-testid=\"propertylist-listitemtext-esgc2itka\"]').first().should('have.text', label);\n    cy.get('[data-testid=\"propertylist-checkbox-9qc6i0a6w\"] input').then($input => {\n      if ($input.is(':checked')) {\n        cy.wrap($input).uncheck({\n          force: true\n        });\n      } else {\n        cy.wrap($input).check({\n          force: true\n        });\n      }\n    });\n  });\n});",
              "err": {},
              "uuid": "d8dda179-b385-4417-a9b6-35652b7e2bbd",
              "parentUUID": "4ded04d7-1177-45ef-b7b0-f50c26880574",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select property and Make required and remove required and de-select property ",
              "fullTitle": "Navigate on field config page Select property and Make required and remove required and de-select property ",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "//Check field from field config, make required and add on form config\ncy.wait(\"@fieldConfig\").then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(item => item.system === false).slice(-1);\n  let fieldId = fieldData[0].id.toString();\n  let fieldName = fieldData[0].label.toString();\n  cy.get('.MuiFormControl-root [placeholder=\"Search...\"]').type(fieldName);\n  cy.get(':nth-child(1) > .MuiListItem-root > .MuiFormControlLabel-root input').check();\n  cy.get(`[data-rbd-droppable-id=\"column\"]`).children(`[data-rbd-draggable-id=${fieldId}]`).contains(fieldName);\n});\n// cy.get(':nth-child(1) > .MuiListItem-root > .MuiFormControlLabel-root input').check()\n// cy.get('.MuiGrid-item > :last')\n// cy.get('.MuiFormControl-root [placeholder=\"Search...\"]')\n// .type(Cypress.env(\"fieldName\"))\n// cy.get('input[name=\"checkedB\"]').check(fieldName)\n// cy.get('[data-rbd-droppable-id=\"column\"]').find('[type=\"checkbox\"]').last().check()\n// cy.get(lead.typeBtn).contains(\"Apply\").click()\n// cy.get('#create-lead .MuiFormControl-root label').contains(Cypress.env(\"fieldName\"))\n// cy.get(`#create-lead .MuiFormControl-root [placeholder='Enter ${Cypress.env(\"fieldName\")}']`).\n//     should(\"have.attr\", \"required\")\n// //uncheck the field from field config\n// cy.get(lead.typeBtn).contains(\"Add fields\").click()\n// cy.get('[data-rbd-droppable-id=\"column\"]').find('[type=\"checkbox\"]').last().uncheck()\n// cy.get('.MuiFormControl-root [placeholder=\"Search...\"]').type(Cypress.env(\"fieldName\"))\n// cy.get('input[name=\"checkedB\"]').uncheck()\n// cy.get(lead.typeBtn).contains(\"Apply\").click()",
              "err": {},
              "uuid": "60ce0b70-4d9d-48a1-bb29-6d4a09b50ae9",
              "parentUUID": "4ded04d7-1177-45ef-b7b0-f50c26880574",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fccba73c-5723-41f5-a8b8-aaaefae38081",
            "3c6bd90f-9b5b-4ea9-9a58-461d9cdc0658",
            "d8dda179-b385-4417-a9b6-35652b7e2bbd"
          ],
          "failures": [],
          "pending": [
            "60ce0b70-4d9d-48a1-bb29-6d4a09b50ae9"
          ],
          "skipped": [],
          "duration": 20580,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4fa57db5-1784-4513-a0f7-f9ccaa9f7e3a",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "60a9a7ae-a3fb-4fe8-afb2-76e878069e4c",
          "title": "Nevigate the lead page and create new fields",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create single line text field",
              "fullTitle": "Nevigate the lead page and create new fields Create single line text field",
              "timedOut": null,
              "duration": 13603,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let stringField = `String-${new Date().valueOf()}`;\ncy.get(lead.inputField).should(\"have.value\", \"Single line text\");\ncy.wait(\"@groupList\").then(({\n  response\n}) => {\n  let privateGroup = response.body.result.values.filter(ele => ele.scope == \"private\");\n  cy.get(`input[name=\"Select Group\"]`).should(\"have.value\", privateGroup[0].label);\n});\n(0, _field.labelNplaceholder)(stringField, `Enter ${stringField}`);\n(0, _global.butextField)(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${_globalSel.default.butextfield}`, \"input\").type(3); // set min\n(0, _global.butextField)(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${_globalSel.default.butextfield}`, \"input\").type(30); // set max\n(0, _field.textCaseFormat)();\n(0, _field.preview)(stringField, `Enter ${stringField}`);\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.created);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'String-1756384579075' within the element: <div.MuiFormControl-root.MuiFormControl-fullWidth.MuiTextField-root.field.jss213.css-5pibqg> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'String-1756384579075' within the element: <div.MuiFormControl-root.MuiFormControl-fullWidth.MuiTextField-root.field.jss213.css-5pibqg> but never did.\n    at preview (webpack://bu-testing/./cypress/helpers/field.js:54:62)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/2_fields/addFields.js:33:16)",
                "diff": null
              },
              "uuid": "201c9c68-13b7-4e52-b95f-25e16416dbb0",
              "parentUUID": "60a9a7ae-a3fb-4fe8-afb2-76e878069e4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create dropdown field",
              "fullTitle": "Nevigate the lead page and create new fields Create dropdown field",
              "timedOut": null,
              "duration": 9963,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dropdownField = `Dropdown-${new Date().valueOf()}`;\n(0, _global.budropdownInput)(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Dropdown\", _globalSel.default.dialogTitleText);\ncy.wait(\"@groupList\").then(({\n  response\n}) => {\n  let publicGroup = response.body.result.values.filter(ele => ele.scope == \"public\");\n  cy.get(`input[name=\"Select Group\"]`).click();\n  cy.get(lead.chooseOptions).contains(publicGroup[0].label).click();\n});\n(0, _field.labelNplaceholder)(dropdownField, `Enter ${dropdownField}`);\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"] input`).should(\"have.value\", \"Option 1\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get('[data-testid=\"optionslist-textfield-ud6koj7f1\"] input').eq(1).should(\"have.value\", \"Option 2\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get('[data-testid=\"optionslist-textfield-ud6koj7f1\"] input').eq(2).should(\"have.value\", \"Option 3\");\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.created);",
              "err": {},
              "uuid": "9e4fc5ed-d476-4e6d-9dbc-58d5cd6e9122",
              "parentUUID": "60a9a7ae-a3fb-4fe8-afb2-76e878069e4c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e4fc5ed-d476-4e6d-9dbc-58d5cd6e9122"
          ],
          "failures": [
            "201c9c68-13b7-4e52-b95f-25e16416dbb0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 23566,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1fd857de-c53d-43ab-9e73-7da5bb3fea2c",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3f4fe71c-8fd2-4db1-96eb-45a3287d1986",
          "title": "Test the functionality of attach field",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach field",
              "fullTitle": "Test the functionality of attach field Attach field",
              "timedOut": null,
              "duration": 10120,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"Attach field\"]').should(\"have.text\", \"Attach field\").click();\ncy.wait(500);\ncy.get(`[data-testid=\"title-dialog\"] p`).contains(\"Attach field\");\n// cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').last().type(\"jddnn\")\ncy.wait(\"@availableField\").then(({\n  response\n}) => {\n  if (response.body.result.values.length == 0) {\n    cy.log(\"Fields are not available for attach\");\n    cy.get('#cancel').click();\n  } else {\n    let field = response.body.result.values.map(ele => ele.label);\n    cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').last().type(field[0]);\n    // cy.get('.MuiDialog-container .MuiDialogContent-root > :last [placeholder=\"Search...\"]')\n    cy.wait(200);\n    cy.get('[data-testid=\"attachfields-collapse-uvsmqfw9l\"] [data-testid=\"propertylist-listitemtext-esgc2itka\"]').contains(field[0]).click();\n    cy.get('#attach').click();\n    cy.wait(500);\n    cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').type(field[0]);\n    cy.get('[data-testid=\"propertylist-box-k4wxytcqz\"] [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').last().should(\"have.text\", field[0]);\n    cy.get('[data-testid=\"propertylist-box-k4wxytcqz\"] input').last().should(\"be.checked\");\n  }\n});\ncy.get('[data-testid=\"close-dialog\"]').click();\ncy.get('[data-testid=\"title-dialog\"] p').eq(1).contains(\"Warning\");\ncy.get('[data-testid=\"buformeditor-typography-3mxztjea3\"]');\ncy.get('[data-testid=\"Confirm\"]').click();",
              "err": {},
              "uuid": "2c2f53e7-138c-487f-99b5-fec24dc889b6",
              "parentUUID": "3f4fe71c-8fd2-4db1-96eb-45a3287d1986",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c2f53e7-138c-487f-99b5-fec24dc889b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10120,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c2f16bf0-20ff-4297-9334-14989111d98b",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9864b974-2a64-42b3-90ca-010e50398c8a",
          "title": "Nevigate the lead page and Update fields",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Edit Single line text field",
              "fullTitle": "Nevigate the lead page and Update fields Edit Single line text field",
              "timedOut": null,
              "duration": 12808,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let singleField = `Single line-${new Date().valueOf()}`;\ncy.wait(\"@fieldList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(ele => ele.required == false && ele.system == false && ele.prop == \"str\").slice(-1);\n  cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input').type(fieldData[0].label);\n  cy.get('[data-testid=\"actions-iconbutton-4zbo8fvnl\"]').first().click();\n  cy.get('[data-testid=\"actions-box-qexr9sum4\"]').contains('Edit').click({\n    force: true\n  });\n  cy.get('[data-testid=\"input-muiinput-t8mkcx347\"] input[name=\"Select Field Type\"]').should(\"have.value\", \"Single line text\");\n  // Field label and Placeholder\n  (0, _field.labelNplaceholder)(singleField, `Enter ${singleField}`);\n  // Min and Max\n  cy.get('[data-testid=\"withtitle-box-mp6w6v7ka\"] label').contains(\"Min Length\").next().clear().type(faker.number.int({\n    min: 3,\n    max: 9\n  }));\n  cy.get('[data-testid=\"withtitle-box-mp6w6v7ka\"] label').contains(\"Max Length\").next().clear().type(faker.number.int({\n    min: 15,\n    max: 100\n  }));\n  // Text Case\n  (0, _field.textCaseFormat)();\n  // Preview\n  cy.get('#single_text_field-label').should(\"have.text\", singleField);\n  cy.get('#single_text_field').should(\"have.attr\", \"placeholder\", `Enter ${singleField}`);\n});\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.updated);",
              "err": {},
              "uuid": "29ad3595-1edc-4394-ae27-9f97531796b4",
              "parentUUID": "9864b974-2a64-42b3-90ca-010e50398c8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit dropdown field",
              "fullTitle": "Nevigate the lead page and Update fields Edit dropdown field",
              "timedOut": null,
              "duration": 10165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let basField = `Dropdown-${new Date().valueOf()}`;\ncy.wait(500);\ncy.wait(\"@fieldList\").then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(ele => ele.required == false && ele.system == false && ele.prop == \"bas\").slice(-1);\n  // cy.log(\"fieldData\", JSON.stringify(fieldData[0].label))\n  cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input').type(fieldData[0].label);\n  cy.get('[data-testid=\"actions-iconbutton-4zbo8fvnl\"]').first().click();\n  cy.get('[data-testid=\"actions-box-qexr9sum4\"]').contains('Edit').click({\n    force: true\n  });\n  cy.get('[data-testid=\"input-muiinput-t8mkcx347\"] input[name=\"Select Field Type\"]').should(\"have.value\", \"Dropdown\").and(\"have.prop\", \"disabled\");\n  (0, _field.labelNplaceholder)(basField, `Enter ${basField}`);\n});\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"]`).first().clear().type(\"Edited Option 1\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"]`).last().clear().type(`Option-${new Date().valueOf()}`);\ncy.get('[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"] input[value=\"multi\"]').then($ele => {\n  if ($ele.is(':disabled')) {\n    cy.log(\"Multi-selection option type can't be edit\");\n  } else {\n    cy.get('[value=\"single\"]').click();\n    cy.get('[value=\"multi\"]').click();\n  }\n});\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.updated);",
              "err": {},
              "uuid": "71bacee5-1f31-4cf4-adb6-8c4c9174b427",
              "parentUUID": "9864b974-2a64-42b3-90ca-010e50398c8a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "29ad3595-1edc-4394-ae27-9f97531796b4",
            "71bacee5-1f31-4cf4-adb6-8c4c9174b427"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22973,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c53fa32c-ab8c-4ae0-b68b-d8004e21c943",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "09a50268-d4da-4145-9b0b-b32636de5ee1",
          "title": "Nevigate the lead page and Create Lead",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2e43f05c-023d-45d2-819b-45633c6d4f2c",
              "title": "Create record",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create record with \"str\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"str\" field",
                  "timedOut": null,
                  "duration": 14465,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"str\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "8fb4db9c-e1e7-4b3b-a18f-e42bc4d53843",
                  "parentUUID": "2e43f05c-023d-45d2-819b-45633c6d4f2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"phn\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"phn\" field",
                  "timedOut": null,
                  "duration": 10564,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"phn\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "430bd147-058c-4afb-8e79-fdc9a5052145",
                  "parentUUID": "2e43f05c-023d-45d2-819b-45633c6d4f2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"num\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"num\" field",
                  "timedOut": null,
                  "duration": 10117,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"num\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "f1fe6aa3-de97-4506-a356-9d07e8e6352f",
                  "parentUUID": "2e43f05c-023d-45d2-819b-45633c6d4f2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"txa\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"txa\" field",
                  "timedOut": null,
                  "duration": 11556,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"txa\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "9e7e91dc-9f25-45d9-bebd-25a24a0313f1",
                  "parentUUID": "2e43f05c-023d-45d2-819b-45633c6d4f2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"eml\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"eml\" field",
                  "timedOut": null,
                  "duration": 10215,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"eml\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "84047f71-96a6-4a70-9a94-0b19bded90a6",
                  "parentUUID": "2e43f05c-023d-45d2-819b-45633c6d4f2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"url\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"url\" field",
                  "timedOut": null,
                  "duration": 8008,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"url\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "701174b4-24e8-4af4-927d-a9d3be3b20a7",
                  "parentUUID": "2e43f05c-023d-45d2-819b-45633c6d4f2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"bas\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"bas\" field",
                  "timedOut": null,
                  "duration": 9662,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"bas\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "7221dc49-35c0-4f75-b020-cae40caa5428",
                  "parentUUID": "2e43f05c-023d-45d2-819b-45633c6d4f2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"dsrc\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"dsrc\" field",
                  "timedOut": null,
                  "duration": 12592,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"dsrc\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "3d790a30-eca9-440d-bb18-637a5f21d765",
                  "parentUUID": "2e43f05c-023d-45d2-819b-45633c6d4f2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"asc\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"asc\" field",
                  "timedOut": null,
                  "duration": 11253,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"asc\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "1dd5d5af-2439-469b-a0e9-09868f17ad54",
                  "parentUUID": "2e43f05c-023d-45d2-819b-45633c6d4f2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"rad\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"rad\" field",
                  "timedOut": null,
                  "duration": 9996,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"rad\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "19207b75-907a-40d3-9a2a-455c2ff1edd1",
                  "parentUUID": "2e43f05c-023d-45d2-819b-45633c6d4f2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"chk\" fields",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"chk\" fields",
                  "timedOut": null,
                  "duration": 10923,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"chk\"], userRole, createAccess, pipelines);",
                  "err": {},
                  "uuid": "7b8ce66d-8c6c-40c3-867f-accf6b321e19",
                  "parentUUID": "2e43f05c-023d-45d2-819b-45633c6d4f2c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8fb4db9c-e1e7-4b3b-a18f-e42bc4d53843",
                "430bd147-058c-4afb-8e79-fdc9a5052145",
                "f1fe6aa3-de97-4506-a356-9d07e8e6352f",
                "9e7e91dc-9f25-45d9-bebd-25a24a0313f1",
                "84047f71-96a6-4a70-9a94-0b19bded90a6",
                "701174b4-24e8-4af4-927d-a9d3be3b20a7",
                "7221dc49-35c0-4f75-b020-cae40caa5428",
                "3d790a30-eca9-440d-bb18-637a5f21d765",
                "1dd5d5af-2439-469b-a0e9-09868f17ad54",
                "19207b75-907a-40d3-9a2a-455c2ff1edd1",
                "7b8ce66d-8c6c-40c3-867f-accf6b321e19"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 119351,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "711c4f50-94b9-4aa6-99a0-8e29872f98c9",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9c34ae3e-469b-4191-a37b-2c0e6cc2ad6f",
          "title": "Nevigate on lead asset page and edit record",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Edit record with single line text field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with single line text field",
              "timedOut": null,
              "duration": 12943,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"str\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "4211f74e-e81b-4abf-aeca-3c43c3154207",
              "parentUUID": "9c34ae3e-469b-4191-a37b-2c0e6cc2ad6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with multi line text field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with multi line text field",
              "timedOut": null,
              "duration": 10450,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"txa\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "90704165-f409-4839-b14f-1aeeb7844a94",
              "parentUUID": "9c34ae3e-469b-4191-a37b-2c0e6cc2ad6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with email field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with email field",
              "timedOut": null,
              "duration": 8955,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"eml\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "2af14e44-0546-4745-b897-66f1af1e0f44",
              "parentUUID": "9c34ae3e-469b-4191-a37b-2c0e6cc2ad6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with number field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with number field",
              "timedOut": null,
              "duration": 9152,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"num\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "8f549d60-6ab2-4a06-97a6-947396720796",
              "parentUUID": "9c34ae3e-469b-4191-a37b-2c0e6cc2ad6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with url field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with url field",
              "timedOut": null,
              "duration": 8655,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"url\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "33b80225-4348-41d8-855b-dae10b085cac",
              "parentUUID": "9c34ae3e-469b-4191-a37b-2c0e6cc2ad6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with phn field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with phn field",
              "timedOut": null,
              "duration": 7659,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"phn\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "ed7599cb-1410-4f24-aca1-cc8cd430a3cb",
              "parentUUID": "9c34ae3e-469b-4191-a37b-2c0e6cc2ad6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with simple dropdown field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with simple dropdown field",
              "timedOut": null,
              "duration": 8167,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"bas\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "d39e8962-6c8a-4bbc-90fa-c1babad05494",
              "parentUUID": "9c34ae3e-469b-4191-a37b-2c0e6cc2ad6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with checkbox field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with checkbox field",
              "timedOut": null,
              "duration": 6302,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"chk\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "7d5267a9-26e9-402a-96f5-7f57ca6ca556",
              "parentUUID": "9c34ae3e-469b-4191-a37b-2c0e6cc2ad6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with radio field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with radio field",
              "timedOut": null,
              "duration": 7763,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"rad\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "8c515879-e688-4495-a658-80985029ef8d",
              "parentUUID": "9c34ae3e-469b-4191-a37b-2c0e6cc2ad6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with data source field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with data source field",
              "timedOut": null,
              "duration": 9283,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"dsrc\"], userRole, editAccess, pipelines);",
              "err": {},
              "uuid": "e419ad85-0e60-4c6c-b950-38611cdc67f3",
              "parentUUID": "9c34ae3e-469b-4191-a37b-2c0e6cc2ad6f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4211f74e-e81b-4abf-aeca-3c43c3154207",
            "90704165-f409-4839-b14f-1aeeb7844a94",
            "2af14e44-0546-4745-b897-66f1af1e0f44",
            "8f549d60-6ab2-4a06-97a6-947396720796",
            "33b80225-4348-41d8-855b-dae10b085cac",
            "ed7599cb-1410-4f24-aca1-cc8cd430a3cb",
            "d39e8962-6c8a-4bbc-90fa-c1babad05494",
            "7d5267a9-26e9-402a-96f5-7f57ca6ca556",
            "8c515879-e688-4495-a658-80985029ef8d",
            "e419ad85-0e60-4c6c-b950-38611cdc67f3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 89329,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2a15d09b-5532-46c2-9700-7ce5a0cdc81c",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c758cda1-d0c2-44ac-bad2-cab20eebd450",
          "title": "Test the functionality of follow up",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create follow-up for record",
              "fullTitle": "Test the functionality of follow up Create follow-up for record",
              "timedOut": null,
              "duration": 11277,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cyGet(`[data-testid=\"followup-typography-buacu26k2\"]`).should(\"contain.text\", \"Follow-up date\")\ncy.wait(\"@followupStatus\", {\n  timeout: 30000\n}).then(({\n  response\n}) => {\n  var _response$body$result;\n  twosecondWait();\n  const followStatus = (_response$body$result = response.body.result) === null || _response$body$result === void 0 ? void 0 : _response$body$result.status;\n  cyGet(`[data-testid=\"followup-iconbutton-4twf9rpig\"]`).click();\n  if (followStatus === \"pending\") {\n    inputRemark();\n    cy.reload();\n    createNewFollowUP();\n  } else {\n    createNewFollowUP();\n  }\n});",
              "err": {},
              "uuid": "12334f15-5035-45eb-8e49-5294bd53a7af",
              "parentUUID": "c758cda1-d0c2-44ac-bad2-cab20eebd450",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify folow up created or not",
              "fullTitle": "Test the functionality of follow up Verify folow up created or not",
              "timedOut": null,
              "duration": 4053,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[aria-label=\"Follow Up\"]`).click();\ncy.wait(\"@getFollowup\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const followupDetail = response.body.result.values[0];\n  const formattedScheduledOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.scheduledOn).format(\"DD MMM YYYY, h:mm A\");\n  const formattedCreatedOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.createdOn).format(\"DD MMM YYYY, h:mm A\");\n  cyGet(`#tool-container [data-testid=\"followuplist-box-ans7d4l18\"] h6`).should(\"contain.text\", \"Follow-up History\");\n  cyGet(`#tool-container [data-testid=\"followuplist-typography-rweu6rcqo\"]`).should(\"contain.text\", \"Scheduled on: \");\n  cyGet(`#tool-container [data-testid=\"followuplist-typography-rweu6rcqo\"]`).should(\"contain.text\", formattedScheduledOn);\n  cyGet(`#tool-container [data-testid=\"followuplist-typography-66kydwtv0\"]`).should(\"contain.text\", formattedCreatedOn);\n});",
              "err": {},
              "uuid": "a6e0190b-f995-49f8-b329-38c6a5e928c0",
              "parentUUID": "c758cda1-d0c2-44ac-bad2-cab20eebd450",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remark follow Up",
              "fullTitle": "Test the functionality of follow up Remark follow Up",
              "timedOut": null,
              "duration": 7707,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[data-testid=\"followup-iconbutton-4twf9rpig\"]`).click();\ninputRemark();",
              "err": {},
              "uuid": "050e8ddb-b686-4bab-993b-141a19b399e9",
              "parentUUID": "c758cda1-d0c2-44ac-bad2-cab20eebd450",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify follow up after remark",
              "fullTitle": "Test the functionality of follow up verify follow up after remark",
              "timedOut": null,
              "duration": 3609,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[aria-label=\"Follow Up\"]`).click();\ncy.wait(\"@getFollowup\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const followupDetail = response.body.result.values[0];\n  const formattedScheduledOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.scheduledOn).format(\"DD MMM YYYY, h:mm A\");\n  const formattedCreatedOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.createdOn).format(\"DD MMM YYYY, h:mm A\");\n  const formattedfollowedUpOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.followedUpOn).format(\"DD MMM YYYY, h:mm A\");\n  validateFollowup(`[data-testid=\"followuplist-typography-uvdjc7jp2\"]`, \"Scheduled on\");\n  validateFollowup(`[data-testid=\"followuplist-typography-2uwam0ib5\"]`, formattedScheduledOn);\n  validateFollowup(`[data-testid=\"followuplist-typography-mbqzjmh26\"]`, \"Followed up on\");\n  validateFollowup(`[data-testid=\"followuplist-typography-oaxl04km4\"]`, formattedfollowedUpOn);\n  validateFollowup(`[data-testid=\"followuplist-typography-9p4iy3xy5\"]`, \"Creation date\");\n  validateFollowup(`[data-testid=\"followuplist-typography-j73cs8h41\"]`, formattedCreatedOn);\n});",
              "err": {},
              "uuid": "3856ae67-2a71-453e-a277-4bd1f1f7dd96",
              "parentUUID": "c758cda1-d0c2-44ac-bad2-cab20eebd450",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12334f15-5035-45eb-8e49-5294bd53a7af",
            "a6e0190b-f995-49f8-b329-38c6a5e928c0",
            "050e8ddb-b686-4bab-993b-141a19b399e9",
            "3856ae67-2a71-453e-a277-4bd1f1f7dd96"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26646,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "21660041-c9bc-4fe4-8f06-2d5749d7a235",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "edcc936d-3c53-45c8-be86-4382c7e4fc42",
          "title": "Visit the import page and import record",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Ensure the asset box is available for import on the Import page.",
              "fullTitle": "Visit the import page and import record Ensure the asset box is available for import on the Import page.",
              "timedOut": null,
              "duration": 5274,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getAsset\", {\n  timeout: 15000\n}).then(({\n  response\n}) => {\n  var _response$body;\n  const assetData = response === null || response === void 0 || (_response$body = response.body) === null || _response$body === void 0 || (_response$body = _response$body.result) === null || _response$body === void 0 ? void 0 : _response$body.find(ast => ast.id === asset);\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains(assetData === null || assetData === void 0 ? void 0 : assetData.label).next().should(\"contain.text\", assetDescription(asset));\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains(assetData === null || assetData === void 0 ? void 0 : assetData.label).parent().find(`button [aria-label=\"Select pipeline\"]`);\n});",
              "err": {},
              "uuid": "f68d5f8c-1047-40c9-b09a-6eb18533bd03",
              "parentUUID": "edcc936d-3c53-45c8-be86-4382c7e4fc42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ensure the Import button is disabled until a pipeline is selected.",
              "fullTitle": "Visit the import page and import record Ensure the Import button is disabled until a pipeline is selected.",
              "timedOut": null,
              "duration": 693,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getAsset\", {\n  timeout: 15000\n}).then(({\n  response\n}) => {\n  var _response$body2;\n  const assetData = response === null || response === void 0 || (_response$body2 = response.body) === null || _response$body2 === void 0 || (_response$body2 = _response$body2.result) === null || _response$body2 === void 0 ? void 0 : _response$body2.find(ast => ast.id === asset);\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains(assetData === null || assetData === void 0 ? void 0 : assetData.label).parent().find(`button [aria-label=\"Select pipeline\"]`).should(\"contain.text\", \"Select pipeline\");\n  cyGet(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).should(\"be.disabled\");\n});",
              "err": {},
              "uuid": "af7a2bfc-3bca-4b24-be29-f7d030c97a0b",
              "parentUUID": "edcc936d-3c53-45c8-be86-4382c7e4fc42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Download sample spreadsheet",
              "fullTitle": "Visit the import page and import record Download sample spreadsheet",
              "timedOut": null,
              "duration": 4926,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getAsset\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _response$body3;\n  const assetData = response === null || response === void 0 || (_response$body3 = response.body) === null || _response$body3 === void 0 || (_response$body3 = _response$body3.result) === null || _response$body3 === void 0 ? void 0 : _response$body3.find(ast => ast.id === asset);\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains(assetData === null || assetData === void 0 ? void 0 : assetData.label).parent().find(`button [aria-label=\"Select pipeline\"]`).click();\n  cy.wait(\"@getPipeline\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const totalPipelines = response.body.result.pages.totalRecords;\n    const pipelineLabel = response.body.result.values.slice(0, 1).map(pip => pip.label);\n    cy.log(JSON.stringify(pipelineLabel));\n    if (totalPipelines > 5) {\n      buSearchbox(globalSel.search, pipelineLabel[0]);\n    }\n    budropdownOption(pipelineLabel[0]).first().click();\n    cyGet(`[data-testid=\"download\"]`).contains(\"Download sample spreadsheet\").click();\n    cyGet(`[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`).contains(\"Download sample spreadsheet\");\n    cyGet(`[data-testid=\"downloaddrawer-typography-9qmfph90r\"]`).contains(\"Sample import files\");\n    cyGet(`[data-testid=\"downloaddrawer-typography-j1aqze5i1\"]`).contains(\"This sample file shows the required column headers you need for your import file\");\n    cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`)\n    // .first()\n    .find(`[data-testid=\"downloaddrawer-box-yv4v1mdli\"] [data-testid=\"downloaddrawer-typography-lysrpjimb\"]`).contains(assetData === null || assetData === void 0 ? void 0 : assetData.label);\n    cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`).first().find(`[data-testid=\"downloaddrawer-b-ft7iumddc\"]`).contains(pipelineLabel[0]);\n    cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`).first().find(`[data-testid=\"downloaddrawer-typography-xj4o496p9\"]`).contains(\"CSV\");\n  });\n  // cyGet(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).should(\"be.disabled\")\n});",
              "err": {},
              "uuid": "22ea0755-8c33-4033-9dc8-b910d2d38cfd",
              "parentUUID": "edcc936d-3c53-45c8-be86-4382c7e4fc42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Import file and generate record",
              "fullTitle": "Visit the import page and import record Import file and generate record",
              "timedOut": null,
              "duration": 13937,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getAsset\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _response$body4;\n  const assetData = response === null || response === void 0 || (_response$body4 = response.body) === null || _response$body4 === void 0 || (_response$body4 = _response$body4.result) === null || _response$body4 === void 0 ? void 0 : _response$body4.find(ast => ast.id === asset);\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains(assetData === null || assetData === void 0 ? void 0 : assetData.label).parent().find(`button [aria-label=\"Select pipeline\"]`).click();\n  cy.wait(\"@getPipeline\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const totalPipelines = response.body.result.pages.totalRecords;\n    const pipelineLabel = response.body.result.values.slice(0, 1).map(pip => pip.label);\n    const fileName = getFileForAsset(asset, pipelineLabel[0]);\n    cy.log(JSON.stringify(pipelineLabel));\n    if (totalPipelines > 5) {\n      buSearchbox(globalSel.search, pipelineLabel[0]);\n    }\n    budropdownOption(pipelineLabel[0]).first().click({\n      force: true\n    });\n    cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains(assetData === null || assetData === void 0 ? void 0 : assetData.label).parent().find(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).click();\n    cyGet(`[data-testid=\"uploadfile-input-r5bkv246o\"]`).selectFile(fileName, {\n      force: true\n    });\n    twosecondWait();\n    cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n    twosecondWait();\n    cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n    cyGet(`#fileName-label`).should(\"contain.text\", \"Import file name\");\n    // cyGet(`input[placeholder=\"Enter file name\"]`).should(\"have.value\", fileName)\n    cy.wait(\"@requiredProps\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const requiredFields = response.body.result.values.filter(ele => ele.required === true);\n      if (requiredFields.length > 0) {\n        propwiseFields(requiredFields);\n      }\n    });\n    cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n    cyGet(`[data-testid=\"importcommit-box-8kavef2af\"] > button`).contains(\"Confirm import\").click();\n  });\n});",
              "err": {},
              "uuid": "0a0c0b18-fec5-44cc-9449-a30c976d683e",
              "parentUUID": "edcc936d-3c53-45c8-be86-4382c7e4fc42",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f68d5f8c-1047-40c9-b09a-6eb18533bd03",
            "af7a2bfc-3bca-4b24-be29-f7d030c97a0b",
            "22ea0755-8c33-4033-9dc8-b910d2d38cfd",
            "0a0c0b18-fec5-44cc-9449-a30c976d683e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24830,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4a98a81b-093e-4b92-bd27-df7d991ca767",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a3e09b04-4dfa-4209-8f42-d090a3bd41a7",
          "title": "Test the functionality of Activity log",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Activity log of update record",
              "fullTitle": "Test the functionality of Activity log Activity log of update record",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "// cy.get('table > tbody > :nth-child(1)').click()\ncy.wait(1000);\ncy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").clear();\ncy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").type(faker.string.numeric(10));\ncy.get(lead.typeBtn).contains(\"Save\").click();\ncy.wait(1000);\ncy.get('[aria-label=\"Activities\"] > .MuiButtonBase-root').click();\ncy.get('.MuiTooltip-tooltip').should(\"have.text\", \"Activities\");\ncy.wait(\"@activity\").then(({\n  response\n}) => {\n  // let preValue = response.body.result.values[0].prev\n  let curValue = response.body.result.values[0].currentValue;\n  // let previousValue = preValue.toString()\n  let currentValue = `${curValue} `.toString();\n  // let userIdKey = Object.keys(response.body.result.users)\n  // cy.get(`${lead.chooseOptions} > :first`).find(\"aria-label\",previousValue).should(\"have.text\", previousValue)\n  // cy.get(`.ReactVirtualized__Grid__innerScrollContainer [aria-label=${previousValue}]`).should(\"have.text\", previousValue)\n  cy.get(`.ReactVirtualized__Grid__innerScrollContainer [aria-label=${currentValue}]`).should(\"have.text\", currentValue);\n});",
              "err": {},
              "uuid": "b5b61e61-473b-4ad7-b025-96f0094e2322",
              "parentUUID": "a3e09b04-4dfa-4209-8f42-d090a3bd41a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "b5b61e61-473b-4ad7-b025-96f0094e2322"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6cc74d18-462d-493a-9792-4c6df8d271eb",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e0364113-ad58-4d2c-a611-ed242129ab2c",
          "title": "Navigate on lead and test Export functoinality",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check the behavior of the Export button based on the total number of records in a pipeline",
              "fullTitle": "Navigate on lead and test Export functoinality Check the behavior of the Export button based on the total number of records in a pipeline",
              "timedOut": null,
              "duration": 8487,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click()\n// cyGet(`[data-testid=\"title-dialog\"] p`).should(\"contain.text\", \"Export\");\n// cy.wait(\"@appAuth\", { timeout: 10000 }).then(({ response }) => {\n//     email = response.body.result.user.email;\n//     role = response.body.result.user.role;\n// const userRole = response.body.result.user.email;\ncy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const accessToExport = response.body.result.tools.export;\n  if (role === \"std\" && !accessToExport) {\n    cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n  } else {\n    cy.wait(\"@recordGrid\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalRecord = response.body.result.pages.totalRecords;\n      cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n      cyGet(`[data-testid=\"title-dialog\"] p`).should(\"contain.text\", \"Export\");\n      cyGet(`[data-testid=\"exportactor-typography-7vhpyacm5\"]`).contains(`Once exported, the file will be sent to ${email} and you will be notified.`);\n      cyGet(`[data-testid=\"exportactor-typography-awnrepr3p\"]`).contains(`Total number of records after all filters are applied:${totalRecord}`);\n      const total = Number(totalRecord);\n      cyGet('[role=\"dialog\"] [data-testid=\"Export\"]').should(total === 0 || total > 10000 ? 'be.disabled' : 'not.be.disabled');\n    });\n  }\n  ;\n});\n// });",
              "err": {},
              "uuid": "1bbe2032-d264-4626-b218-5f1f5238229d",
              "parentUUID": "e0364113-ad58-4d2c-a611-ed242129ab2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Export records based on the creation date range filter selected on the export page",
              "fullTitle": "Navigate on lead and test Export functoinality Export records based on the creation date range filter selected on the export page",
              "timedOut": null,
              "duration": 6794,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (role === \"std\" && !accessToExport) {\n  cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n} else {\n  cy.wait(\"@recordGrid\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const totalRecord = response.body.result.pages.totalRecords;\n    cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n    cyGet(`[data-testid=\"exportactor-typography-awnrepr3p\"]`).contains(`Total number of records after all filters are applied:${totalRecord}`);\n    cy.get('[data-testid=\"exportactor-grid-zywx8bilv\"] [data-testid=\"budate-iconbutton-v63dt06ut\"]').click();\n    cy.get('[aria-label=\"Previous month\"]').click();\n    cy.get('[role=\"row\"]').contains(pastDay).click();\n    cyGet(`[name=\"File format\"]`).click();\n    budropdownOption(\"csv\").first().click();\n    cy.get('[data-testid=\"exportactor-grid-ti62k6zn2\"] [data-testid=\"budate-iconbutton-v63dt06ut\"]').click();\n    cy.get('[role=\"dialog\"] [role=\"row\"]').filter(':visible').contains((0, _moment.default)().date()).click();\n    cy.wait(\"@recordCount\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const recordToExport = response.body.result;\n      if (recordToExport > 0 && recordToExport < 10000) {\n        cyGet(`[role=\"dialog\"] [data-testid=\"Export\"]`).click();\n      } else {\n        throw new Error(`Record for Export:${recordToExport}`);\n      }\n    });\n    cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Export request submitted successfully. Please check your email address after sometime.\");\n  });\n}\n;",
              "err": {},
              "uuid": "16985042-c1c1-437e-8c35-1adc61ce700c",
              "parentUUID": "e0364113-ad58-4d2c-a611-ed242129ab2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter record and Export records",
              "fullTitle": "Navigate on lead and test Export functoinality Filter record and Export records",
              "timedOut": null,
              "duration": 7976,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (role === \"std\" && !accessToExport) {\n  cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n} else {\n  cy.wait(\"@existsPipelines\", {\n    timeout: 10000\n  });\n  cyGet(`#filter`).click();\n  cy.wait(\"@filters\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const uidField = response.body.result.find(ele => ele.prop === \"uid\");\n    cyGet(`[placeholder=\"Search...\"]`).type(uidField.label);\n    onesecondWait();\n    cyGet(`[data-testid=\"filterheader-box-jox1agcx8\"] > [aria-label=\"${uidField.label}\"]`).click();\n    cyGet(`[data-testid=\"comparestringfilter-box-f914y6cfe\"] [placeholder=\"Add value...\"]`).type(1);\n    onesecondWait();\n    cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalRecord = response.body.result.pages.totalRecords;\n      if (totalRecord > 0 && totalRecord < 10000) {\n        cyGet(`[role=\"dialog\"] [data-testid=\"Export\"]`).click();\n      } else {\n        throw new Error(`Record for Export:${totalRecord}`);\n      }\n      cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Export request submitted successfully. Please check your email address after sometime.\");\n    });\n  });\n}\n;",
              "err": {},
              "uuid": "129502fa-b1b4-44db-9804-97a0f200afe3",
              "parentUUID": "e0364113-ad58-4d2c-a611-ed242129ab2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1bbe2032-d264-4626-b218-5f1f5238229d",
            "16985042-c1c1-437e-8c35-1adc61ce700c",
            "129502fa-b1b4-44db-9804-97a0f200afe3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23257,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "724d4724-2609-4d2c-b76d-3d2099d9b11b",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2c545807-ec6e-4671-b20c-543af26f9f9e",
          "title": "Navigate on filter and test filter functoinality",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8daf02ce-25c0-4f40-a7aa-13dfa4e87b64",
              "title": "Apply filter on string-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Apply “contains” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “contains” filter",
                  "timedOut": null,
                  "duration": 13692,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues ? findFieldValues[stringBasedProp.id].substring(0, 3) : faker.string.alpha(3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Contains\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    if (response.body.result.values.length > 0) {\n      const filterdValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n      expect(filterdValues[0]).contains(firstThreeChars);\n      response.body.result.values.forEach(valueArray => {\n        // expect(valueArray[stringBasedProp.id]).to.contain(firstThreeChars);\n        const keys = Object.keys(valueArray);\n        const findKey = keys.find(ele => ele === stringBasedProp.id);\n        if (findKey) {\n          expect(valueArray[stringBasedProp.id]).to.contain(firstThreeChars);\n        } else {\n          expect(valueArray).has.not.property(stringBasedProp.id);\n        }\n      });\n    } else {\n      cy.log(response.body.result.values);\n    }\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "9a54f893-5162-402a-8176-0b3131454377",
                  "parentUUID": "8daf02ce-25c0-4f40-a7aa-13dfa4e87b64",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Does not contains” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Does not contains” filter",
                  "timedOut": null,
                  "duration": 11591,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues ? findFieldValues[stringBasedProp.id].substring(0, 3) : faker.string.alpha(3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Does not contains\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      const keys = Object.keys(valueArray);\n      const findKey = keys.find(ele => ele === stringBasedProp.id);\n      if (findKey) {\n        expect(valueArray[stringBasedProp.id]).not.contain(firstThreeChars);\n      } else {\n        expect(valueArray).has.not.property(stringBasedProp.id);\n      }\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "6ca2d9a8-e1f5-4bee-8ffe-283a47c91e55",
                  "parentUUID": "8daf02ce-25c0-4f40-a7aa-13dfa4e87b64",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Starts with” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Starts with” filter",
                  "timedOut": null,
                  "duration": 10016,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues ? findFieldValues[stringBasedProp.id].substring(0, 3) : faker.string.alpha(3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Starts with\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(value => {\n      const startingDigit = value[stringBasedProp.id].substring(0, 3);\n      expect(startingDigit).to.equal(firstThreeChars);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "f2d0b4d6-ce44-46fa-88e2-5c04843b48ba",
                  "parentUUID": "8daf02ce-25c0-4f40-a7aa-13dfa4e87b64",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply \"Ends with\" filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply \"Ends with\" filter",
                  "timedOut": null,
                  "duration": 10480,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const lastThreeChars = findFieldValues ? findFieldValues[stringBasedProp.id].slice(-3) : faker.string.alpha(3);\n  filterElements(stringBasedProp.label, lastThreeChars, \"Ends with\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(value => {\n      const keys = Object.keys(value);\n      const findKey = keys.find(ele => ele === stringBasedProp.id);\n      if (findKey) {\n        const lastDigits = value[stringBasedProp.id].slice(-3);\n        expect(lastDigits).to.equal(lastThreeChars);\n      } else {\n        expect(value).has.not.property(stringBasedProp.id);\n      }\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "b4f8663d-760e-4e8a-a93e-a2bb1738a6ee",
                  "parentUUID": "8daf02ce-25c0-4f40-a7aa-13dfa4e87b64",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Equals” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Equals” filter",
                  "timedOut": null,
                  "duration": 9783,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const fieldvalue = findFieldValues[stringBasedProp.id];\n  filterElements(stringBasedProp.label, fieldvalue, \"Equals\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      expect(valueArray[stringBasedProp.id]).eq(fieldvalue);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "957357de-809f-4954-88d7-4058175dd8f8",
                  "parentUUID": "8daf02ce-25c0-4f40-a7aa-13dfa4e87b64",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Does not equals” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Does not equals” filter",
                  "timedOut": null,
                  "duration": 10030,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.find(ele => ele[stringBasedProp.id]);\n  const fieldvalue = findFieldValues[stringBasedProp.id];\n  filterElements(stringBasedProp.label, fieldvalue, \"Does not equals\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      expect(valueArray[stringBasedProp.id]).not.eq(fieldvalue);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {},
                  "uuid": "803949ae-a4b4-4d9a-b99e-a09bbb1a16e2",
                  "parentUUID": "8daf02ce-25c0-4f40-a7aa-13dfa4e87b64",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9a54f893-5162-402a-8176-0b3131454377",
                "6ca2d9a8-e1f5-4bee-8ffe-283a47c91e55",
                "f2d0b4d6-ce44-46fa-88e2-5c04843b48ba",
                "b4f8663d-760e-4e8a-a93e-a2bb1738a6ee",
                "957357de-809f-4954-88d7-4058175dd8f8",
                "803949ae-a4b4-4d9a-b99e-a09bbb1a16e2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 65592,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "5370a016-e1f1-4fd8-a20d-9cd04427a7f4",
              "title": "Apply filter on dropdown-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Apply  filter on stage",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on dropdown-based field to filter the records Apply  filter on stage",
                  "timedOut": null,
                  "duration": 7970,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "dropdownFilter(\"stg\", this);",
                  "err": {},
                  "uuid": "4b3ab7eb-40d9-4642-98d8-4e845021e44d",
                  "parentUUID": "5370a016-e1f1-4fd8-a20d-9cd04427a7f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply  filter on owner",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on dropdown-based field to filter the records Apply  filter on owner",
                  "timedOut": null,
                  "duration": 6668,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "dropdownFilter(\"own\", this);",
                  "err": {},
                  "uuid": "ccf5d7b9-4755-47d3-8b6a-5098d6cdbf6b",
                  "parentUUID": "5370a016-e1f1-4fd8-a20d-9cd04427a7f4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4b3ab7eb-40d9-4642-98d8-4e845021e44d",
                "ccf5d7b9-4755-47d3-8b6a-5098d6cdbf6b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14638,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e27952d1-aac2-43a8-bdc5-919990d0cbd5",
              "title": "Apply filter on date&time-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Filter records based on the date & time field",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on date&time-based field to filter the records Filter records based on the date & time field",
                  "timedOut": null,
                  "duration": 9357,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.get('#filter').click();\ncy.wait(\"@filters\").then(({\n  response\n}) => {\n  let propDtm = response.body.result.filter(ele => ele.prop == \"dtm\");\n  cy.get(lead.searchInfilter).type(propDtm[0].label);\n  cy.wait(500);\n  cy.get(`span[aria-label=\"${propDtm[0].label}\"]`).click();\n});\ncy.get(lead.filerCaption).contains(\"Today till midnight\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 7 days\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 30 days\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 3 months\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Custom Date\").click();\ncy.get('.rdrMonthPicker > select').select(previousMonth); // Select previous month\ncy.get('.rdrDayStartOfMonth > .rdrDayNumber').click(); // Choose date of previous month\ncy.get('.rdrNextButton').click(); // Click on next button to move on current month\ncy.get('.rdrDayToday > .rdrDayNumber').click(); // Choose date of current month",
                  "err": {},
                  "uuid": "0c588da1-eb0a-4118-a205-afb3703b54a0",
                  "parentUUID": "e27952d1-aac2-43a8-bdc5-919990d0cbd5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0c588da1-eb0a-4118-a205-afb3703b54a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9357,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "29d95b8f-5da3-4e41-9bd2-288758a1f1ad",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3378b49e-9737-4eaa-a7c4-1621573b7dbe",
          "title": "Test the functionality of notes",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update notes",
              "fullTitle": "Test the functionality of notes Update notes",
              "timedOut": null,
              "duration": 21547,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const updateNote = faker.lorem.sentence();\ncyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(\"[data-testid='bunotepad-box-8lxcermoa']\").first().clear().type(updateNote);\ncy.wait(\"@editNotes\", {\n  timeout: 10000\n}).then(() => {\n  cyGet('[data-testid=\"buwrapper-iconbutton-s8exp1h26\"]').click();\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(updateNote);\n  cyGet(`#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]`).find(`[data-testid=\"card-typography-8vfwf8lhh\"]`).should(\"contain.text\", updateNote);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:3:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/notes.js:35:8)",
                "diff": null
              },
              "uuid": "151b4a9a-6356-4621-aa24-c68a2f92387e",
              "parentUUID": "3378b49e-9737-4eaa-a7c4-1621573b7dbe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "151b4a9a-6356-4621-aa24-c68a2f92387e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 21547,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1fc133d5-6304-451e-8672-c1aa9fc16627",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2bf1bc2c-ab4e-4bc7-a7dc-78dbdb3a6ee4",
          "title": "Test the functionality of task",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify auto assignment to login user",
              "fullTitle": "Test the functionality of task Verify auto assignment to login user",
              "timedOut": null,
              "duration": 10971,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const loginUser = response.body.result.user;\n  cy.wait(\"@existsPipelines\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    cyGet(`[aria-label=\"Tasks\"]`).click();\n    twosecondWait();\n    cyGet(`button[type=\"button\"]`).contains(\"Create task\").click({\n      force: true\n    });\n    cy.wait(\"@owners\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const findLoginUser = response.body.result.values.find(ele => ele.subLabel === loginUser.email);\n      cyGet(`#buForm [data-testid=\"avatarinput-textfield-ojwxr8kdk\"]`).contains(\"Assigned to\").next().find(`[data-testid=\"buchip-chip-5r51zm55o\"] span`).should(\"contain.text\", findLoginUser === null || findLoginUser === void 0 ? void 0 : findLoginUser.label);\n    });\n  });\n});",
              "err": {},
              "uuid": "d1ab4d5e-e4f9-412a-83fa-5d4116ca454b",
              "parentUUID": "2bf1bc2c-ab4e-4bc7-a7dc-78dbdb3a6ee4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create task in lead",
              "fullTitle": "Test the functionality of task Create task in lead",
              "timedOut": null,
              "duration": 10725,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cyGet(`[aria-label=\"Tasks\"]`).click();\n  twosecondWait();\n  cyGet(`button[type=\"button\"]`).contains(\"Create task\").click({\n    force: true\n  });\n  cy.wait(\"@getformDetails\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    // twosecondWait()\n    propwiseFields(response.body.result.values);\n    // twosecondWait()\n    cyGet(`[data-testid=\"buttongroup-dialogactions-fb25djtod\"] [data-testid=\"Save\"]`).click();\n    cy.wait(\"@postTask\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      expect(response.body).has.property(\"message\", messages.created);\n    });\n  });\n});",
              "err": {},
              "uuid": "89bc1c24-6791-41ea-a490-15a81d1f3c73",
              "parentUUID": "2bf1bc2c-ab4e-4bc7-a7dc-78dbdb3a6ee4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit task in lead",
              "fullTitle": "Test the functionality of task Edit task in lead",
              "timedOut": null,
              "duration": 10476,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cyGet(`[aria-label=\"Tasks\"]`).click();\n  twosecondWait();\n  searchAndChooseTask(\"Edit\").then(() => {\n    cy.wait(\"@getTaskById\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const profile = response.body.result.profile;\n      propwiseFields(profile);\n    });\n    cyGet(`[data-testid=\"buttongroup-dialogactions-fb25djtod\"] [data-testid=\"Save\"]`).click();\n  });\n});",
              "err": {},
              "uuid": "e304a53d-31db-44d5-98a0-6e8e724ca0ef",
              "parentUUID": "2bf1bc2c-ab4e-4bc7-a7dc-78dbdb3a6ee4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete task",
              "fullTitle": "Test the functionality of task Delete task",
              "timedOut": null,
              "duration": 7440,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const msg1 = \"Delete task\";\nconst msg2 = \"Are you sure you want to delete this task?\";\ncy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cyGet(`[aria-label=\"Tasks\"]`).click();\n  twosecondWait();\n  searchAndChooseTask(\"Delete\").then(() => {\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    cyGet(globalSel.deltestid).click();\n  });\n});",
              "err": {},
              "uuid": "38489ff7-0538-401b-88cd-cd3943cc8453",
              "parentUUID": "2bf1bc2c-ab4e-4bc7-a7dc-78dbdb3a6ee4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d1ab4d5e-e4f9-412a-83fa-5d4116ca454b",
            "89bc1c24-6791-41ea-a490-15a81d1f3c73",
            "e304a53d-31db-44d5-98a0-6e8e724ca0ef",
            "38489ff7-0538-401b-88cd-cd3943cc8453"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 39612,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b4c24c29-a2c1-42b7-8b92-c870c0359ef9",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "28089c58-305d-44f9-8344-19eceefe3ecc",
          "title": "Test the functionality of Addresses",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0dbb7581-21a7-42a9-aaaa-8c9accf9bde8",
              "title": "Test the functionality of add address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Add address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of add address Add address",
                  "timedOut": null,
                  "duration": 22582,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _addressField, _addressField2;\n// cy.wait(\"@getBiztab\", { timeout: 10000 }).then(({ response }) => {\n//     addressField = response.body.result.find(fld => fld.prop === \"add\");\nif (!addressField) {\n  this.skip();\n}\ncyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField = addressField) === null || _addressField === void 0 ? void 0 : _addressField.label}]`).should(\"contain.text\", (_addressField2 = addressField) === null || _addressField2 === void 0 ? void 0 : _addressField2.label).click();\ncyGet(`[data-testid=\"Add\"]`).click();\ntwosecondWait();\ncy.wait(\"@getAddresssForm\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const fieldsOnAddressForm = Object.values(response.body.result.fields);\n  propwiseFields(fieldsOnAddressForm, {}, [], true);\n  cyGet(`#clone`).check();\n  cyGet('[data-testid=\"buwrapper-box-2gkcmtrgi\"] > [data-testid=\"buttongroup-box-ell22p9ne\"] > [data-testid=\"buttongroup-dialogactions-fb25djtod\"] > * > [data-testid=\"Save\"]').click();\n  cyGet('.MuiSnackbarContent-message').should(\"contain.text\", messages.created);\n});\n// })",
                  "err": {},
                  "uuid": "be3dc059-1993-4211-ab2a-4686b8cac6ac",
                  "parentUUID": "0dbb7581-21a7-42a9-aaaa-8c9accf9bde8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "be3dc059-1993-4211-ab2a-4686b8cac6ac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 22582,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "6cea6a91-50fd-4a21-8421-a4636e80a0b8",
              "title": "Test the functionality of edit address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Edit address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of edit address Edit address",
                  "timedOut": null,
                  "duration": 13116,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _addressField3, _addressField4;\nif (!addressField) {\n  this.skip();\n}\ncyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField3 = addressField) === null || _addressField3 === void 0 ? void 0 : _addressField3.label}]`).should(\"contain.text\", (_addressField4 = addressField) === null || _addressField4 === void 0 ? void 0 : _addressField4.label).click();\ncy.wait(\"@addressDeatail\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const addressView = response.body.result.view;\n  const billingAddress = response.body.result.billing;\n  const shippingAddress = response.body.result.shipping;\n  if (billingAddress || shippingAddress) {\n    const country = addressView.find(view => view.prop === \"cnt\");\n    const fieldValues = billingAddress ? billingAddress.values[0][country.id] : shippingAddress.values[0][country.id];\n    cyGet(`[data-testid=\"addresssection-box-ykc0hvq21\"] [data-testid=\"busimpledropdown-box-l5z1y823c\"]`).first().click();\n    cyGet(`#edit`).click();\n    propwiseFields(addressView, {}, fieldValues, true);\n    cyGet('[data-testid=\"buwrapper-box-2gkcmtrgi\"] > [data-testid=\"buttongroup-box-ell22p9ne\"] > [data-testid=\"buttongroup-dialogactions-fb25djtod\"] > * > [data-testid=\"Save\"]').click();\n    cyGet('.MuiSnackbarContent-message').should(\"contain.text\", messages.updated);\n  }\n});",
                  "err": {},
                  "uuid": "20af5352-cba4-497d-9da8-8bc8e8c792bb",
                  "parentUUID": "6cea6a91-50fd-4a21-8421-a4636e80a0b8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "20af5352-cba4-497d-9da8-8bc8e8c792bb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13116,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ddf7b903-1d5d-4cca-bbea-b5123968576c",
              "title": "Test the functionality of delete address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of delete address Delete address",
                  "timedOut": null,
                  "duration": 7207,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _addressField5, _addressField6;\nif (!addressField) {\n  this.skip();\n}\ncyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField5 = addressField) === null || _addressField5 === void 0 ? void 0 : _addressField5.label}]`).should(\"contain.text\", (_addressField6 = addressField) === null || _addressField6 === void 0 ? void 0 : _addressField6.label).click();\ncyGet(`[data-testid=\"addresssection-box-ykc0hvq21\"] [data-testid=\"busimpledropdown-box-l5z1y823c\"]`).first().click();\ncyGet(`#delete`).click();\ncyGet('#customized-dialog-title p').should(\"have.text\", \"Delete Address\");\ncyGet(`[role=\"dialog\"] [data-testid=\"buconfirmation-typography-9lgofl82d\"]`).should(\"contain.text\", \"Are you sure to delete this address?\");\ncyGet(`[data-testid=\"Delete\"]`).contains(\"Delete\").click();",
                  "err": {},
                  "uuid": "c496e45a-9696-40b5-b078-7afd2922d1b3",
                  "parentUUID": "ddf7b903-1d5d-4cca-bbea-b5123968576c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c496e45a-9696-40b5-b078-7afd2922d1b3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7207,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "047ac6c6-7c64-49a3-a440-4a9b89ab5910",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5cc1df5f-1037-4435-ae82-5b25709928bb",
          "title": "Test the functionality of Association",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2df1c609-960f-46a4-93b7-a05d4531be93",
              "title": "Test the functionality of Association",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Associate the record",
                  "fullTitle": "Test the functionality of Association Test the functionality of Association Associate the record",
                  "timedOut": null,
                  "duration": 11272,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let associatonField = response.body.result.find(ele => ele.prop === \"asc\");\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${associatonField === null || associatonField === void 0 ? void 0 : associatonField.label}\"]`).should(\"contain.text\", associatonField === null || associatonField === void 0 ? void 0 : associatonField.label).click();\n  if ((associatonField === null || associatonField === void 0 ? void 0 : associatonField.selection) == \"single\") {\n    cy.wait(\"@associations\").then(({\n      response\n    }) => {\n      if (response.body.result.values.length == 0) {\n        cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1)`).click();\n        cy.wait(1500);\n      } else {\n        cy.log(\"Association alredy exist\");\n      }\n    });\n  } else {\n    cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n    cy.wait(\"@associable\").then(({\n      response\n    }) => {\n      if (response.body.result.values.length > 1) {\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n        cy.get(`${lead.selectAssociableRecord} :nth-child(2) input`).click();\n        cy.wait(1500);\n      } else if (response.body.result.values.length = 1) {\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n        cy.wait(1500);\n      } else if (response.body.result.values.length = 0) {\n        expect(response.body.result.values).to.be.length.eq(0);\n      }\n      ;\n    });\n  }\n  ;\n});",
                  "err": {},
                  "uuid": "8fe94d77-ab96-46f1-93d4-b68b37588754",
                  "parentUUID": "2df1c609-960f-46a4-93b7-a05d4531be93",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8fe94d77-ab96-46f1-93d4-b68b37588754"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11272,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "60daacd1-56a8-481c-9294-ddb675c7e23d",
              "title": "Test the functionality of Remove Association",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Remove associated record from association list",
                  "fullTitle": "Test the functionality of Association Test the functionality of Remove Association Remove associated record from association list",
                  "timedOut": null,
                  "duration": 5936,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let associatonField = response.body.result.find(ele => ele.prop === \"asc\");\n  // expect(associatonField).be.length.greaterThan(0)\n  // cy.get(lead.simpleTab).contains(associatonField[0].label).click()\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${associatonField === null || associatonField === void 0 ? void 0 : associatonField.label}\"]`).should(\"contain.text\", associatonField === null || associatonField === void 0 ? void 0 : associatonField.label).click();\n  cy.wait(\"@associations\").then(({\n    response\n  }) => {\n    if (response.body.result.values == 0) {\n      cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n      cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n      cy.wait(1500);\n      cy.get('[data-testid=\"commoncard-box-ze66boaek\"]').first().click();\n      cy.get(\"#remove\").click();\n    } else {\n      cy.get('[data-testid=\"commoncard-box-ze66boaek\"]').first().click();\n      cy.get(\"#remove\").click();\n    }\n    ;\n    cy.wait(\"@deleteAssociation\").then(({\n      response\n    }) => {\n      expect(response.body).has.property(\"message\", \"Associations removed successfully.\");\n    });\n  });\n});",
                  "err": {},
                  "uuid": "0e9c5328-c180-4217-90a4-f9819481793c",
                  "parentUUID": "60daacd1-56a8-481c-9294-ddb675c7e23d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0e9c5328-c180-4217-90a4-f9819481793c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5936,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1f3e9a54-c063-49d8-9a4b-e8ec217db5f8",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "613da58d-5ac3-43d7-97ef-9f4147ab16bd",
          "title": "Test the functionality of Attachment",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach file",
              "fullTitle": "Test the functionality of Attachment Attach file",
              "timedOut": null,
              "duration": 10360,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.simpleTab).contains(\"Attachment\").click();\ncyGet(lead.tabpanelBtn).contains(\"Add\").click();\ncyGet('input[type=\"file\"]').selectFile(\"cypress/fixtures/data.csv\", {\n  force: true\n});\ncyGet('[role=\"tabpanel\"] .MuiTypography-noWrap').first().dblclick();\n// cy.wait(1000)\n//cyGet(lead.dialogTitle).contains(\"data.csv\")\ncyGet(`#customized-dialog-title ${lead.typeBtn}`).contains(\"Download\");\ncyGet('#customized-dialog-title .MuiIconButton-root').click();",
              "err": {},
              "uuid": "15b5f7f0-7cf9-4c14-b38e-ec3f717002da",
              "parentUUID": "613da58d-5ac3-43d7-97ef-9f4147ab16bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Download file",
              "fullTitle": "Test the functionality of Attachment Download file",
              "timedOut": null,
              "duration": 5071,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.simpleTab).contains(\"Attachment\").click();\ncyGet('#attachment-action').click();\ncyGet('#download').click();",
              "err": {},
              "uuid": "49ec3338-1186-4605-90b8-ba4230e70789",
              "parentUUID": "613da58d-5ac3-43d7-97ef-9f4147ab16bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete attached file",
              "fullTitle": "Test the functionality of Attachment delete attached file",
              "timedOut": null,
              "duration": 4555,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let msg2 = \"Are you sure want to delete this file?\";\ncyGet(lead.simpleTab).contains(\"Attachment\").click();\ncyGet('#attachment-action').click();\ncyGet('#delete').click();\ncy.roleDialog(lead.dialogTitle, \"Confirmation\", lead.dialogDesc, msg2, `.MuiDialogActions-root ${lead.typeBtn}`, \"Delete\");",
              "err": {},
              "uuid": "bc59d52b-89e1-4622-b7ba-90eada6e209a",
              "parentUUID": "613da58d-5ac3-43d7-97ef-9f4147ab16bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "15b5f7f0-7cf9-4c14-b38e-ec3f717002da",
            "49ec3338-1186-4605-90b8-ba4230e70789",
            "bc59d52b-89e1-4622-b7ba-90eada6e209a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19986,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d0efabad-27f9-4b8a-aeb9-e77c53a091c5",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_customForm\\1_addForm.js",
      "file": "cypress\\e2e\\lms\\lead\\5_customForm\\1_addForm.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
          "title": "Test the functionality of custom form",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_customForm\\1_addForm.js",
          "file": "cypress\\e2e\\lms\\lead\\5_customForm\\1_addForm.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add custom form",
              "fullTitle": "Test the functionality of custom form Add custom form",
              "timedOut": null,
              "duration": 10194,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pipId = response.body.result.catId;\n  cy.wait(\"@getBiztab\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const biztabFieldIds = response.body.result.map(fld => fld.id);\n    if (biztabFieldIds.length > 3) {\n      const toUpdateField = biztabFieldIds.slice(0, 2);\n      const reqHeader = {\n        Authorization: `Bearer ${Cypress.env(\"token\")}`\n      };\n      const reqQs = {\n        \"custom\": true,\n        module: _module,\n        asset,\n        catId: pipId\n      };\n      const payload = {\n        fields: [...toUpdateField]\n      };\n      request(\"PATCH\", biztabUrl, reqHeader, reqQs, payload).then(({\n        body\n      }) => {\n        expect(body).has.property(\"message\", messages.updated);\n      });\n    }\n    cyGet(`[aria-label=\"Simple Tab\"] [data-testid=\"busimpletabs-tab-bmcqbakaf\"]`).contains(\"Add form\").click();\n    cy.wait(\"@getFormDetail\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const {\n        label,\n        align,\n        fontSize\n      } = response.body.result.form;\n      expect(response.body.result.form).has.property(\"align\", \"left\");\n      expect(response.body.result.form).has.property(\"fontSize\", \"14px\");\n      expect(response.body.result.form).has.property(\"width\", 500);\n      cyGet(`input[value=\"${label}\"]`).should(\"have.attr\", \"style\", `font-size: 14px; text-align: left;`);\n    });\n  });\n});",
              "err": {},
              "uuid": "2bd77b79-54f1-46a1-97d8-b014755e1870",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "save button should be dissable without form title",
              "fullTitle": "Test the functionality of custom form save button should be dissable without form title",
              "timedOut": null,
              "duration": 8271,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "editctmFromScript().then(ctmformdata => {\n  cyGet(`input[value=\"${ctmformdata === null || ctmformdata === void 0 ? void 0 : ctmformdata.label}\"]`).clear();\n  buSaveButton().should(\"be.disabled\");\n  buSaveButton().trigger(\"mouseover\", {\n    force: true\n  });\n  cyGet('.MuiTooltip-tooltip').should(\"contain.text\", \"Please fill form title!\");\n});",
              "err": {},
              "uuid": "40a4d74c-6950-4db4-b79c-19c9cbe38b32",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "attach fields on custom form",
              "fullTitle": "Test the functionality of custom form attach fields on custom form",
              "timedOut": null,
              "duration": 16387,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "editctmFromScript().then(() => {\n  cyGet(`[aria-label=\"Existing fields\"]`).should(\"contain.text\", \"Existing fields\").click();\n  onesecondWait();\n  cyGet(`[data-testid=\"Attach field\"]`).should(\"contain.text\", \"Attach field\").click();\n  cy.wait(\"@availableField\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const availableField = response.body.result.values.slice(0, 2);\n    if (availableField.length === 0) {\n      this.skip();\n    }\n    const prop1 = availableField[0].prop;\n    const id1 = availableField[0].id;\n    const field1_Draggable = `[data-rbd-draggable-id=\"existingField@${prop1}@${id1}\"]`;\n    const droppable = '[role=\"tabpanel\"] [data-rbd-droppable-id=\"new-container\"]';\n    cyGet(`[data-testid=\"attachfields-textfield-g0au8eoj4\"] [placeholder=\"Search...\"]`).type(availableField[0].label);\n    cyGet(`[aria-label=\"${availableField[0].label}\"]`).should(\"contain.text\", availableField[0].label).click();\n    if (availableField.length > 1) {\n      cyGet(`[data-testid=\"attachfields-textfield-g0au8eoj4\"] [placeholder=\"Search...\"]`).clear().type(availableField[1].label);\n      cyGet(`[aria-label=\"${availableField[1].label}\"]`).should(\"contain.text\", availableField[1].label).click();\n    }\n    cyGet(`[data-testid=\"Attach\"]`).click();\n    twosecondWait();\n    // Drag and Drop first field\n    cy.dragAndDrop(field1_Draggable, droppable);\n    twosecondWait();\n    // Drag and Drop second field\n    if (availableField.length > 1) {\n      const prop2 = availableField[1].prop;\n      const id2 = availableField[1].id;\n      const field2_Draggable = `[data-rbd-draggable-id=\"existingField@${prop2}@${id2}\"]`;\n      cy.dragAndDrop(field2_Draggable, droppable);\n      twosecondWait();\n    }\n    buSaveButton().click();\n    cy.wait(\"@patchForm\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      expect(response.body).has.property(\"message\", messages.updated);\n    });\n  });\n});",
              "err": {},
              "uuid": "e9a2f284-a0d9-4ea3-8704-634d239974b6",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "attached fields should not be re-attached on form",
              "fullTitle": "Test the functionality of custom form attached fields should not be re-attached on form",
              "timedOut": null,
              "duration": 8369,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "editctmFromScript().then(() => {\n  cyGet(`[aria-label=\"Existing fields\"]`).should(\"contain.text\", \"Existing fields\").click();\n  onesecondWait();\n  cy.wait(\"@getFormDetail\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const fields = Object.values(response.body.result.fields);\n    const prop1 = fields[0].prop;\n    const id1 = fields[0].id;\n    cyGet(`[data-rbd-draggable-id=\"existingField@${prop1}@${id1}\"]`).should(\"have.attr\", \"style\", \"opacity: 0.7;\");\n  });\n});",
              "err": {},
              "uuid": "5d815728-88ec-4153-bce6-a940f02d910f",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Set test-alignment center and font-size medium",
              "fullTitle": "Test the functionality of custom form Set test-alignment center and font-size medium",
              "timedOut": null,
              "duration": 8706,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validateAlignmentAndFontSize(`[data-testid=\"textalignment-iconbutton-nqzrlk6uv\"]`, \"Medium\", \"16px\", \"center\");",
              "err": {},
              "uuid": "9db58088-680b-428b-a509-6f454acba3a4",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Set test-alignment right and font-size large",
              "fullTitle": "Test the functionality of custom form Set test-alignment right and font-size large",
              "timedOut": null,
              "duration": 6529,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validateAlignmentAndFontSize(`[data-testid=\"textalignment-iconbutton-xvufy7vwj\"]`, \"Large\", \"18px\", \"right\");",
              "err": {},
              "uuid": "4930ecdb-8506-4008-89ac-ecd4b1ccf023",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Set test-alignment right and font-size large",
              "fullTitle": "Test the functionality of custom form Set test-alignment right and font-size large",
              "timedOut": null,
              "duration": 8111,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "validateAlignmentAndFontSize(`[data-testid=\"textalignment-iconbutton-ztu8e2vt9\"]`, \"Small\", \"14px\", \"left\");",
              "err": {},
              "uuid": "d6c3cce6-7c8b-4549-97f0-d5b7876e6569",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have str field type",
              "fullTitle": "Test the functionality of custom form Verify form have str field type",
              "timedOut": null,
              "duration": 8591,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragStr, fieldType.str);",
              "err": {},
              "uuid": "c880b95a-1095-4560-a403-37d80204e3d3",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have txa field type",
              "fullTitle": "Test the functionality of custom form Verify form have txa field type",
              "timedOut": null,
              "duration": 10011,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragTxa, fieldType.txa);",
              "err": {},
              "uuid": "392aa6fd-efe6-4f41-87bf-54dffcba5d07",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have phn field type",
              "fullTitle": "Test the functionality of custom form Verify form have phn field type",
              "timedOut": null,
              "duration": 9662,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragPhn, fieldType.phn);",
              "err": {},
              "uuid": "4c181529-cf58-4633-905e-10db203f1c9f",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have num field type",
              "fullTitle": "Test the functionality of custom form Verify form have num field type",
              "timedOut": null,
              "duration": 9361,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragNum, fieldType.num);",
              "err": {},
              "uuid": "d2c66e5f-0ad8-4c62-b629-5dfce366f9c1",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have eml field type",
              "fullTitle": "Test the functionality of custom form Verify form have eml field type",
              "timedOut": null,
              "duration": 8576,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragEml, fieldType.eml);",
              "err": {},
              "uuid": "3c883db0-f93e-4d2a-95b7-e4844a0dce74",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have url field type",
              "fullTitle": "Test the functionality of custom form Verify form have url field type",
              "timedOut": null,
              "duration": 10541,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragUrl, fieldType.url);",
              "err": {},
              "uuid": "afc34b28-7fc2-42de-b7d8-f48eac6bc498",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have bas field type",
              "fullTitle": "Test the functionality of custom form Verify form have bas field type",
              "timedOut": null,
              "duration": 8345,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragBas, fieldType.bas);",
              "err": {},
              "uuid": "8a3766ad-f2ec-4a66-ad36-9ff43a3a331c",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have img field type",
              "fullTitle": "Test the functionality of custom form Verify form have img field type",
              "timedOut": null,
              "duration": 9493,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragImg, fieldType.img);",
              "err": {},
              "uuid": "cc478e4b-4e72-4844-9134-57369cced97a",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have dat field type",
              "fullTitle": "Test the functionality of custom form Verify form have dat field type",
              "timedOut": null,
              "duration": 8934,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragDat, fieldType.dat);",
              "err": {},
              "uuid": "b9ab1056-6272-494f-912a-237486d242e3",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have tim field type",
              "fullTitle": "Test the functionality of custom form Verify form have tim field type",
              "timedOut": null,
              "duration": 9853,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragTim, fieldType.tim);",
              "err": {},
              "uuid": "b8e93251-33ea-46cc-bd20-220d546c22ec",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have dtm field type",
              "fullTitle": "Test the functionality of custom form Verify form have dtm field type",
              "timedOut": null,
              "duration": 8824,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragDtm, fieldType.dtm);",
              "err": {},
              "uuid": "748cba72-762c-4ffd-93bf-b5cd7529956a",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have chk field type",
              "fullTitle": "Test the functionality of custom form Verify form have chk field type",
              "timedOut": null,
              "duration": 10066,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragChk, fieldType.chk);",
              "err": {},
              "uuid": "edf7a085-23cd-4ce6-bb00-c905643eb81c",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have rad field type",
              "fullTitle": "Test the functionality of custom form Verify form have rad field type",
              "timedOut": null,
              "duration": 8436,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragRad, fieldType.rad);",
              "err": {},
              "uuid": "a11d0133-61ab-4a53-b06e-e55409154518",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have atc field type",
              "fullTitle": "Test the functionality of custom form Verify form have atc field type",
              "timedOut": null,
              "duration": 9789,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragAtc, fieldType.atc);",
              "err": {},
              "uuid": "e8787187-e888-412d-a68f-73a3cd03f69a",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have grd field type",
              "fullTitle": "Test the functionality of custom form Verify form have grd field type",
              "timedOut": null,
              "duration": 9060,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragGrd, fieldType.grd);",
              "err": {},
              "uuid": "c556eeec-1fd2-4850-817c-e43fda6f87b4",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have fx field type",
              "fullTitle": "Test the functionality of custom form Verify form have fx field type",
              "timedOut": null,
              "duration": 8432,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragFx, fieldType.fx);",
              "err": {},
              "uuid": "fc0eb6fc-f11e-4edb-bdde-b62a1356895c",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have rtg field type",
              "fullTitle": "Test the functionality of custom form Verify form have rtg field type",
              "timedOut": null,
              "duration": 8776,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragRtg, fieldType.rtg);",
              "err": {},
              "uuid": "8771071d-ae41-4820-b207-c00e1c2e29c2",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify form have gloc field type",
              "fullTitle": "Test the functionality of custom form Verify form have gloc field type",
              "timedOut": null,
              "duration": 9153,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "verifyFieldType(globalSel.dragGloc, fieldType.gloc);",
              "err": {},
              "uuid": "bebf2013-8c2d-4000-80c7-87719c88257f",
              "parentUUID": "2940b4eb-ea82-4da6-b0b1-07d984d94189",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2bd77b79-54f1-46a1-97d8-b014755e1870",
            "40a4d74c-6950-4db4-b79c-19c9cbe38b32",
            "e9a2f284-a0d9-4ea3-8704-634d239974b6",
            "5d815728-88ec-4153-bce6-a940f02d910f",
            "9db58088-680b-428b-a509-6f454acba3a4",
            "4930ecdb-8506-4008-89ac-ecd4b1ccf023",
            "d6c3cce6-7c8b-4549-97f0-d5b7876e6569",
            "c880b95a-1095-4560-a403-37d80204e3d3",
            "392aa6fd-efe6-4f41-87bf-54dffcba5d07",
            "4c181529-cf58-4633-905e-10db203f1c9f",
            "d2c66e5f-0ad8-4c62-b629-5dfce366f9c1",
            "3c883db0-f93e-4d2a-95b7-e4844a0dce74",
            "afc34b28-7fc2-42de-b7d8-f48eac6bc498",
            "8a3766ad-f2ec-4a66-ad36-9ff43a3a331c",
            "cc478e4b-4e72-4844-9134-57369cced97a",
            "b9ab1056-6272-494f-912a-237486d242e3",
            "b8e93251-33ea-46cc-bd20-220d546c22ec",
            "748cba72-762c-4ffd-93bf-b5cd7529956a",
            "edf7a085-23cd-4ce6-bb00-c905643eb81c",
            "a11d0133-61ab-4a53-b06e-e55409154518",
            "e8787187-e888-412d-a68f-73a3cd03f69a",
            "c556eeec-1fd2-4850-817c-e43fda6f87b4",
            "fc0eb6fc-f11e-4edb-bdde-b62a1356895c",
            "8771071d-ae41-4820-b207-c00e1c2e29c2",
            "bebf2013-8c2d-4000-80c7-87719c88257f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 232470,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e1e8f3e7-b362-4b82-bea4-49dc9db1babd",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_customForm\\2_editForm.js",
      "file": "cypress\\e2e\\lms\\lead\\5_customForm\\2_editForm.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6fbfe8d4-d024-4e4d-ac5c-9ce717072f70",
          "title": "Test the functionality of custom form",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_customForm\\2_editForm.js",
          "file": "cypress\\e2e\\lms\\lead\\5_customForm\\2_editForm.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add field on custom form",
              "fullTitle": "Test the functionality of custom form Add field on custom form",
              "timedOut": null,
              "duration": 18046,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "editctmFromScript().then(ctmformdata => {\n  cyGet('[aria-label=\"Field type\"]').click();\n  twosecondWait();\n  cy.dragAndDrop(globalSel.dragStr, droppable);\n  labelNplaceholder(strLabel, `Enter ${strLabel}`);\n  cyGet('[data-testid=\"budialog-box-xmpv7w06s\"] > * > [data-testid=\"Save\"]').click();\n  twosecondWait();\n  buSaveButton().click();\n});",
              "err": {},
              "uuid": "7ccbd287-876b-4445-9c6b-b2e8163cd1d4",
              "parentUUID": "6fbfe8d4-d024-4e4d-ac5c-9ce717072f70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add grid field on custom form",
              "fullTitle": "Test the functionality of custom form Add grid field on custom form",
              "timedOut": null,
              "duration": 25848,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "editctmFromScript().then(ctmformdata => {\n  cyGet('[aria-label=\"Field type\"]').click();\n  twosecondWait();\n  cyGet(gridDraggable).find(`[data-testid=\"index-typography-442pqldco\"]`).should(\"contain.text\", \"Grid\");\n  cy.dragAndDrop(gridDraggable, droppable);\n  cy.wait(\"@postGrid\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const gridLabel = response.body.result.label;\n    const snField = response.body.result.fields.find(fld => (fld === null || fld === void 0 ? void 0 : fld.label) === \"Serial No\");\n    cyGet(`[aria-label=\"Add Grid\"]`).should(\"contain.text\", \"Add Grid\");\n    cyGet(`[data-testid=\"gridfield-box-sm139nqrq\"] label`).should(\"contain.text\", \"Title\");\n    cyGet(`[data-testid=\"gridfield-box-sm139nqrq\"]`).find(\"input\").as(\"gridLabel\");\n    cy.get(\"@gridLabel\").should(\"have.attr\", \"required\");\n    cy.get(\"@gridLabel\").should(\"have.value\", gridLabel);\n    cy.contains(`tr`, snField === null || snField === void 0 ? void 0 : snField.label);\n    addfieldonGrid(\"Single line text\", strLabel);\n    addfieldonGrid(\"URL\", urlLabel);\n    addfieldonGrid(\"Email\", emlField);\n    // save grid on custom form\n    cyGet('[data-testid=\"buttongroup-dialogactions-fb25djtod\"] > * > [data-testid=\"Save\"]').click();\n    // save custom form\n    buSaveButton().click();\n  });\n});",
              "err": {},
              "uuid": "3b728e1c-5c46-49c1-8d03-51ce87a6b139",
              "parentUUID": "6fbfe8d4-d024-4e4d-ac5c-9ce717072f70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Make a field required and check field behaviour",
              "fullTitle": "Test the functionality of custom form Make a field required and check field behaviour",
              "timedOut": null,
              "duration": 8153,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "ctmFieldSettingScript(\"required\");",
              "err": {},
              "uuid": "5297cc39-eca7-4a71-aca0-0b120da0a716",
              "parentUUID": "6fbfe8d4-d024-4e4d-ac5c-9ce717072f70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "save button should be disabled without filling required field",
              "fullTitle": "Test the functionality of custom form save button should be disabled without filling required field",
              "timedOut": null,
              "duration": 16735,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const ctmField = response.body.result.find(ele => ele.prop === \"ctm\");\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${ctmField === null || ctmField === void 0 ? void 0 : ctmField.label}\"]`).contains(ctmField === null || ctmField === void 0 ? void 0 : ctmField.label).click();\n  cyGet(`[data-testid=\"Add\"]`).contains(\"Add\").click();\n  cy.wait(\"@getFormDetail\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const fields = response.body.result.fields;\n    const containers = response.body.result.form.containers;\n    const allFieldIds = containers.flatMap(container => container.fields.map(i => i.id));\n    const requiredFieldIds = containers.flatMap(container => container.fields.filter(f => f.required === true).map(i => i.id));\n    const optionalFields = allFieldIds.map(id => fields[id]).filter(f => !requiredFieldIds.includes(f.id));\n    propwiseFields(optionalFields, {}, [], true);\n    buSaveButton().should(\"be.disabled\");\n  });\n});",
              "err": {},
              "uuid": "180aa179-3612-45be-b6d7-c3f1ab8cefb7",
              "parentUUID": "6fbfe8d4-d024-4e4d-ac5c-9ce717072f70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Make a field read-only and check field behaviour",
              "fullTitle": "Test the functionality of custom form Make a field read-only and check field behaviour",
              "timedOut": null,
              "duration": 8635,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "ctmFieldSettingScript(\"readOnly\", \"Read only\");",
              "err": {},
              "uuid": "31263b03-d46b-4914-a9c8-505e92dc15c3",
              "parentUUID": "6fbfe8d4-d024-4e4d-ac5c-9ce717072f70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Make a field hidden and check field behaviour",
              "fullTitle": "Test the functionality of custom form Make a field hidden and check field behaviour",
              "timedOut": null,
              "duration": 9203,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "ctmFieldSettingScript(\"hidden\", \"Hidden\");",
              "err": {},
              "uuid": "e5993357-f13b-4886-9015-f1be3a652dde",
              "parentUUID": "6fbfe8d4-d024-4e4d-ac5c-9ce717072f70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Make a field editable and check field behaviour",
              "fullTitle": "Test the functionality of custom form Make a field editable and check field behaviour",
              "timedOut": null,
              "duration": 9469,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "ctmFieldSettingScript(\"editable\", \"Editable\");",
              "err": {},
              "uuid": "a11d18e3-1440-422d-b4fe-c085848670d5",
              "parentUUID": "6fbfe8d4-d024-4e4d-ac5c-9ce717072f70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ccbd287-876b-4445-9c6b-b2e8163cd1d4",
            "3b728e1c-5c46-49c1-8d03-51ce87a6b139",
            "5297cc39-eca7-4a71-aca0-0b120da0a716",
            "180aa179-3612-45be-b6d7-c3f1ab8cefb7",
            "31263b03-d46b-4914-a9c8-505e92dc15c3",
            "e5993357-f13b-4886-9015-f1be3a652dde",
            "a11d18e3-1440-422d-b4fe-c085848670d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 96089,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e50f941f-c536-4ea8-8f3c-04516cc744a5",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_customForm\\3_ctmRecord.js",
      "file": "cypress\\e2e\\lms\\lead\\5_customForm\\3_ctmRecord.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e893dc6d-13e4-4158-aeee-6047d078a5b4",
          "title": "Test the functionality of custom form",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_customForm\\3_ctmRecord.js",
          "file": "cypress\\e2e\\lms\\lead\\5_customForm\\3_ctmRecord.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add row in grid, save template and create custom form record",
              "fullTitle": "Test the functionality of custom form Add row in grid, save template and create custom form record",
              "timedOut": null,
              "duration": 33463,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "gotocreatectmrecordForm().then(ctmfieldData => {\n  cy.wait(\"@getFormDetail\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const formfields = Object.values(response.body.result.fields);\n    propwiseFields(formfields, {}, [], true);\n    createctmTemplate();\n    buSaveButton().click(); // click on save record\n  });\n});",
              "err": {},
              "uuid": "f04e35eb-d3f4-4deb-b5b0-500be77939c1",
              "parentUUID": "e893dc6d-13e4-4158-aeee-6047d078a5b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify custom form record listing after create record",
              "fullTitle": "Test the functionality of custom form Verify custom form record listing after create record",
              "timedOut": null,
              "duration": 9360,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipeline\", {\n  timeout: 10000\n}).then(() => {\n  cy.wait(\"@getBiztab\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const ctmField = response.body.result.find(ele => ele.prop === \"ctm\");\n    cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${ctmField === null || ctmField === void 0 ? void 0 : ctmField.label}\"]`).contains(ctmField === null || ctmField === void 0 ? void 0 : ctmField.label).click();\n    cy.wait(\"@getDependent\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalRecord = response.body.result.values.length;\n      const view = response.body.result.view;\n      if (totalRecord > 0) {\n        const dependenRecord = response.body.result.values[0];\n        validatectmRecord(dependenRecord, view);\n      } else {\n        throw new Error(`Custom form record not available`);\n      }\n    });\n  });\n});",
              "err": {},
              "uuid": "1935af71-eecb-4843-b7f5-eb866ffac634",
              "parentUUID": "e893dc6d-13e4-4158-aeee-6047d078a5b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Retrieve data from template and create record",
              "fullTitle": "Test the functionality of custom form Retrieve data from template and create record",
              "timedOut": null,
              "duration": 12231,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "gotocreatectmrecordForm().then(ctmfieldData => {\n  buSaveButton().should(\"be.disabled\");\n  cyGet(`[data-testid=\"create-iconbutton-dqbsjv0je\"]`).click();\n  cy.wait(\"@getTemplateRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const templateData = response.body.result.values.slice(0, 1);\n    cyGet(`[data-testid=\"templates-textfield-1k2cknyxa\"] [placeholder=\"Search...\"]`).type(templateData[0].label);\n    cyGet(`[data-testid=\"templates-listitembutton-j1lf8cl9p\"] [aria-label=\"${templateData[0].label}\"]`).should(\"contain.text\", templateData[0].label).click();\n    twosecondWait();\n    buSaveButton().click(); // click on save record\n  });\n});",
              "err": {},
              "uuid": "6767ccd1-f955-4e6a-89c4-a258e4f8b3cf",
              "parentUUID": "e893dc6d-13e4-4158-aeee-6047d078a5b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update custom form record",
              "fullTitle": "Test the functionality of custom form Update custom form record",
              "timedOut": null,
              "duration": 67620,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipeline\", {\n  timeout: 10000\n}).then(() => {\n  cy.wait(\"@getBiztab\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const ctmField = response.body.result.find(ele => ele.prop === \"ctm\");\n    cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${ctmField === null || ctmField === void 0 ? void 0 : ctmField.label}\"]`).contains(ctmField === null || ctmField === void 0 ? void 0 : ctmField.label).click();\n    cy.wait(\"@getDependent\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalRecord = response.body.result.values.length;\n      if (totalRecord > 0) {\n        cyGet(`[data-testid=\"customform-box-jpf6ej62l\"]`).first().find(`[data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).click();\n        cyGet(`#edit * [data-testid=\"busimpledropdown-typography-pkpid4cdj\"]`).should(\"contain.text\", \"Edit\").click();\n        cy.wait(\"@getFormDetail\", {\n          timeout: 10000\n        }).then(({\n          response\n        }) => {\n          const formfields = Object.values(response.body.result.fields);\n          propwiseFields(formfields, {}, [], true);\n          cyGet(`[data-testid=\"Update\"]`).click(); // click on save record\n        });\n      } else {\n        throw new Error(`Custom form record not available`);\n      }\n    });\n  });\n});",
              "err": {},
              "uuid": "a72c46d3-3d1b-40fa-87ea-bfdf4ab745cf",
              "parentUUID": "e893dc6d-13e4-4158-aeee-6047d078a5b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f04e35eb-d3f4-4deb-b5b0-500be77939c1",
            "1935af71-eecb-4843-b7f5-eb866ffac634",
            "6767ccd1-f955-4e6a-89c4-a258e4f8b3cf",
            "a72c46d3-3d1b-40fa-87ea-bfdf4ab745cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 122674,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d8436735-8ba7-4e2d-9e0a-de0fda130bf7",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "91111e41-8a56-4e55-b85b-40a4f31c78e1",
          "title": "Test the functionality of bulk edit",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Bulk edit the record",
              "fullTitle": "Test the functionality of bulk edit Bulk edit the record",
              "timedOut": null,
              "duration": 26091,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncyGet('table > thead input').check();\ncyGet('#bulkActions [data-testid=\"Edit\"]').contains(\"Edit\").click();\ncyGet(lead.dialogTitle).should(\"have.text\", \"Bulk record update\");\ncyGet(`[aria-label=\"Select Field\"]`).click();\ncy.wait(\"@getbulkEdit\").then(({\n  response\n}) => {\n  const bulkeditValues = response.body.result.values;\n  const lengthgetbulkEdit = bulkeditValues.length;\n  if (asset === \"contact\") {\n    const otherField = bulkeditValues.find(ele => ele.label !== \"Stage\");\n    if (lengthgetbulkEdit > 5) {\n      buSearchbox(globalSel.search, otherField === null || otherField === void 0 ? void 0 : otherField.label);\n    }\n    budropdownOption(otherField === null || otherField === void 0 ? void 0 : otherField.label).first().click({\n      force: true\n    });\n    if (otherField.selection === \"single\" && otherField.prop != \"dsrc\") {\n      handleDropdownField(otherField, `[data-testid=\"fields-box-xhbyf34nj\"]`, `[data-testid=\"buchip-chip-5r51zm55o\"]`);\n    } else {\n      handleDropdownField(otherField, `[data-testid=\"fields-box-xhbyf34nj\"]`);\n    }\n  } else {\n    let stageField = bulkeditValues.find(ele => ele.label === \"Stage\");\n    if (lengthgetbulkEdit > 5) {\n      buSearchbox(globalSel.search, stageField === null || stageField === void 0 ? void 0 : stageField.label);\n    }\n    budropdownOption(stageField === null || stageField === void 0 ? void 0 : stageField.label).first().click({\n      force: true\n    });\n    handleDropdownField(stageField, `[data-testid=\"fields-box-xhbyf34nj\"]`, `[data-testid=\"buchip-chip-5r51zm55o\"]`);\n    if (lengthgetbulkEdit > 1) {\n      const otherField = bulkeditValues.find(ele => ele.label !== \"Stage\");\n      cyGet(`[data-testid=\"staticfieldcard-iconbutton-u6zoboy9a\"]`).click();\n      cyGet(`[aria-label=\"Select Field\"]`).click();\n      if (lengthgetbulkEdit > 5) {\n        buSearchbox(globalSel.search, otherField === null || otherField === void 0 ? void 0 : otherField.label);\n      }\n      budropdownOption(otherField === null || otherField === void 0 ? void 0 : otherField.label).first().click({\n        force: true\n      });\n      if (otherField.selection === \"single\" && otherField.prop != \"dsrc\") {\n        handleDropdownField(otherField, `[data-testid=\"fields-box-xhbyf34nj\"]`, `[data-testid=\"buchip-chip-5r51zm55o\"]`);\n      } else {\n        handleDropdownField(otherField, `[data-testid=\"fields-box-xhbyf34nj\"]`);\n      }\n    }\n  }\n  buSaveButton().click();\n  cyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.requestSuccess);\n});",
              "err": {},
              "uuid": "ad3564f2-4748-40ef-b7e2-74ba61af2048",
              "parentUUID": "91111e41-8a56-4e55-b85b-40a4f31c78e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad3564f2-4748-40ef-b7e2-74ba61af2048"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26091,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "49e3f900-7405-431c-abaa-7bf908454603",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "abf3c55e-d69e-4ee2-a177-4d7089b10f7f",
          "title": "Test the functionality of bulk Assign",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Single owner assignment",
              "fullTitle": "Test the functionality of bulk Assign Single owner assignment",
              "timedOut": null,
              "duration": 13923,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  const totalOwner = response.body.result.values.length;\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (totalOwner > 5) {\n    buSearchbox(globalSel.search, subLabel[0]);\n  }\n  ownerIndex(ownerLabel[0], subLabel[0]);\n  cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n  buSaveButton().click({\n    force: true\n  });\n});",
              "err": {},
              "uuid": "dc63ac68-e9d2-4bab-a2ab-7b7f786db8e2",
              "parentUUID": "abf3c55e-d69e-4ee2-a177-4d7089b10f7f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assign lead equally",
              "fullTitle": "Test the functionality of bulk Assign Assign lead equally",
              "timedOut": null,
              "duration": 10018,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  const totalOwner = response.body.result.values.length;\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (response.body.result.values.length > 1) {\n    if (totalOwner > 5) {\n      buSearchbox(globalSel.search, subLabel[0]);\n    }\n    ownerIndex(ownerLabel[0], subLabel[0]);\n    if (totalOwner > 5) {\n      buSearchbox(globalSel.search, subLabel[1]);\n    }\n    ownerIndex(ownerLabel[1], subLabel[1]);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"eq\"]').click();\n    cyGet('[aria-label=\"Assign lead equally\"]').should(\"have.text\", \"Assign lead equally\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label === ownerLabel[0]);\n      let ownerName_1 = response.body.result.values.filter(ele => ele[ownerFieldId][0].label === ownerLabel[1]);\n      let recordLength = response.body.result.values.length;\n      if (recordLength % 2 === 0) {\n        expect(ownerName).have.length(recordLength / 2);\n        expect(ownerName_1).have.length(recordLength / 2);\n      } else {\n        expect(ownerName).have.length((recordLength + 1) / 2);\n        expect(ownerName_1).have.length((recordLength - 1) / 2);\n      }\n    });\n  } else {\n    ownerIndex(ownerLabel[0], subLabel[0]);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n    });\n  }\n});",
              "err": {},
              "uuid": "07838b4d-1abd-4372-9407-0fe0fd063a26",
              "parentUUID": "abf3c55e-d69e-4ee2-a177-4d7089b10f7f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assign all lead",
              "fullTitle": "Test the functionality of bulk Assign Assign all lead",
              "timedOut": null,
              "duration": 10115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (response.body.result.values.length > 1) {\n    ownerIndex(ownerLabel[0], subLabel[0], 1);\n    ownerIndex(ownerLabel[1], subLabel[1], 2);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"all\"]').should(\"be.checked\");\n    cyGet('[aria-label=\"Assign all\"]').should(\"have.text\", \"Assign all\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let ownerName_1 = response.body.result.values.filter(ele => ele[ownerFieldId][1].label == ownerLabel[1]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n      expect(ownerName_1).have.length(recordLength);\n    });\n  } else {\n    ownerIndex(ownerLabel[0], subLabel[0], 1);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"all\"]').should(\"be.checked\");\n    cyGet('[aria-label=\"Assign all\"]').should(\"have.text\", \"Assign all\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n    });\n  }\n  ;\n});",
              "err": {},
              "uuid": "da33e3bb-d932-4d82-a670-4595a2ef7fb5",
              "parentUUID": "abf3c55e-d69e-4ee2-a177-4d7089b10f7f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc63ac68-e9d2-4bab-a2ab-7b7f786db8e2",
            "07838b4d-1abd-4372-9407-0fe0fd063a26",
            "da33e3bb-d932-4d82-a670-4595a2ef7fb5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 34056,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "07a92167-5beb-40a9-9efb-2e813d3984dc",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f97404e9-3bd8-406f-9dd3-b1f5fa7809a4",
          "title": "Test the functionality of bulk delete",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Soft delete records",
              "fullTitle": "Test the functionality of bulk delete Soft delete records",
              "timedOut": null,
              "duration": 15585,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncy.wait(\"@getRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  if (recordLength === 0) {\n    cyGet('table > thead input').should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    bulkdeletedialogElements(recordLength, asset, \"soft\", remainsRecord);\n  }\n  ;\n});",
              "err": {},
              "uuid": "881e73c9-aff6-4926-b1d0-15c87e422641",
              "parentUUID": "f97404e9-3bd8-406f-9dd3-b1f5fa7809a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Hard delete records",
              "fullTitle": "Test the functionality of bulk delete Hard delete records",
              "timedOut": null,
              "duration": 5371,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncy.wait(\"@getRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  if (recordLength === 0) {\n    cyGet('table > thead input').should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    bulkdeletedialogElements(recordLength, asset, \"hard\", remainsRecord);\n  }\n  ;\n});",
              "err": {},
              "uuid": "e5165186-7db8-4519-83b3-e0787e4cac48",
              "parentUUID": "f97404e9-3bd8-406f-9dd3-b1f5fa7809a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "881e73c9-aff6-4926-b1d0-15c87e422641",
            "e5165186-7db8-4519-83b3-e0787e4cac48"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20956,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e1b86d35-94f7-4f93-a726-4f868fbbdd88",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
      "file": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "82ca9b17-f90c-4f1b-9d58-06c323e544ff",
          "title": "Navigate the lead page and test grid view component",
          "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
          "file": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "00f5f422-08fe-481f-91da-4f6a24d10d71",
              "title": "Global search for grid view",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "search using mobile number",
                  "fullTitle": "Navigate the lead page and test grid view component Global search for grid view search using mobile number",
                  "timedOut": null,
                  "duration": 13404,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const {\n    label,\n    catId\n  } = response.body.result;\n  cy.wait(\"@recordGrid\", {\n    timeout: 15000\n  }).then(({\n    response\n  }) => {\n    var _response$body$result;\n    let systemPhnFieldId = (_response$body$result = response.body.result.view.columns.find(ele => ele.label === \"Mobile number\")) === null || _response$body$result === void 0 ? void 0 : _response$body$result.id;\n    if (!systemPhnFieldId) {\n      const reqQs = {\n        module,\n        asset,\n        catId\n      };\n      const reqHeader = {\n        Authorization: `Bearer ${Cypress.env(\"token\")}`\n      };\n      request(\"GET\", gridViewUrl, reqHeader, reqQs).then(({\n        body\n      }) => {\n        const mobField = body.result.values.find(ele => ele.label === \"Mobile number\");\n        const payload = {\n          fields: [mobField === null || mobField === void 0 ? void 0 : mobField.id]\n        };\n        request(\"PATCH\", gridViewUrl, reqHeader, reqQs, payload).then(({\n          body\n        }) => {\n          expect(body).to.have.property(\"success\", true);\n        });\n      });\n      cy.reload();\n      cy.wait(\"@recordGrid\", {\n        timeout: 15000\n      }).then(({\n        response\n      }) => {\n        var _response$body$result2;\n        systemPhnFieldId = (_response$body$result2 = response.body.result.view.columns.find(ele => ele.label === \"Mobile number\")) === null || _response$body$result2 === void 0 ? void 0 : _response$body$result2.id;\n        performSearch(systemPhnFieldId, response.body.result);\n      });\n    } else {\n      performSearch(systemPhnFieldId, response.body.result);\n    }\n  });\n});",
                  "err": {},
                  "uuid": "71d8131b-ee74-4b3c-a1e9-dddea08bc1ad",
                  "parentUUID": "00f5f422-08fe-481f-91da-4f6a24d10d71",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "71d8131b-ee74-4b3c-a1e9-dddea08bc1ad"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13404,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "df1e6ade-5377-446d-b665-7ad1994cf114",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
      "file": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "238c98f9-3499-4a4e-9164-0e8050772fc4",
          "title": "Nevigate the lead page and test grid view componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
          "file": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add Field on grid view",
              "fullTitle": "Nevigate the lead page and test grid view componet Add Field on grid view",
              "timedOut": null,
              "duration": 17544,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const {\n    label,\n    catId\n  } = response.body.result;\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const allGroup = response.body.result.values.filter(ele => ele.group === label);\n    const selectedField = response.body.result.selectedProperties;\n    const lastIndexfield = allGroup.slice(-1);\n    if (selectedField.length >= 20) {\n      const attachFieldOnView = selectedField.slice(0, 10);\n      const apiUrl = Cypress.env(\"apiurl\");\n      const gridViewUrl = `${apiUrl}/fms/views/grid`;\n      const reqQs = {\n        module,\n        asset,\n        \"catId\": catId\n      };\n      const reqHeader = {\n        Authorization: \"Bearer \" + Cypress.env(\"token\")\n      };\n      const payload = {\n        fields: [...attachFieldOnView]\n      };\n      request(\"PATCH\", gridViewUrl, reqHeader, reqQs, payload).then(({\n        body\n      }) => {\n        expect(body).to.have.property(\"success\", true);\n      });\n      cyGet(`[data-testid=\"cancel\"]`).click();\n      cyGet('#fields').click();\n      cyGet('#editCol').click();\n    }\n    setFieldOnViewConfig('[role=\"dialog\"] [type=\"text\"]', lastIndexfield[0].label, lead.chkbxOnfieldConfig);\n    cyGet(lead.typeBtn).contains(\"Apply\").click();\n    cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\").then(({\n      response\n    }) => {\n      let fieldView = response.body.result.view.columns.filter(ele => ele.label == lastIndexfield[0].label);\n      expect(fieldView[0].label).to.eq(lastIndexfield[0].label);\n    });\n  });\n});",
              "err": {},
              "uuid": "bae66f88-5773-407c-a958-838eec985314",
              "parentUUID": "238c98f9-3499-4a4e-9164-0e8050772fc4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Field from grid view",
              "fullTitle": "Nevigate the lead page and test grid view componet Remove Field from grid view",
              "timedOut": null,
              "duration": 8913,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipName = response.body.result.label;\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let allGroup = response.body.result.values.filter(ele => ele.group == pipName);\n    let lstindexfield = allGroup.slice(-1);\n    cy.get('[role=\"dialog\"] [type=\"text\"]').clear().type(lstindexfield[0].label);\n    cy.get('.MuiBox-root > .MuiListItem-root input').first().then($ele => {\n      if ($ele.is(':checked')) {\n        cy.wrap($ele).first().click();\n      } else {\n        cy.wrap($ele).first().click(); //check then\n        cy.wrap($ele).first().click(); // uncheck\n      }\n    });\n    cy.get(lead.typeBtn).contains(\"Apply\").click();\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\").then(({\n      response\n    }) => {\n      let fieldView = response.body.result.view.columns.map(ele => ele.label);\n      fieldView.forEach(ele => {\n        expect(ele).be.not.eq(lstindexfield[0].label);\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "06db1cb4-30e9-4b57-a819-c9abb0959776",
              "parentUUID": "238c98f9-3499-4a4e-9164-0e8050772fc4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Re-order field on grid view config page",
              "fullTitle": "Nevigate the lead page and test grid view componet Re-order field on grid view config page",
              "timedOut": null,
              "duration": 8310,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(() => {\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let selectedProp = response.body.result.selectedProperties;\n    if (selectedProp.length > 3) {\n      cy.dragAndDrop(`[data-rbd-draggable-id=\"${selectedProp[1]}\"]`, `[data-rbd-draggable-id=\"${selectedProp[2]}\"]`);\n      onesecondWait();\n      cyGet(lead.typeBtn).contains(\"Apply\").click();\n      cy.wait(\"@recordGrid\");\n      cy.wait(\"@recordGrid\").then(({\n        response\n      }) => {\n        expect(response.body.result.view.columns[1]).have.property(\"id\", selectedProp[2]);\n        expect(response.body.result.view.columns[2]).have.property(\"id\", selectedProp[1]);\n      });\n    } else {\n      this.skip();\n    }\n  });\n});",
              "err": {},
              "uuid": "842579fb-d31a-4598-8bac-9b29ee53ecda",
              "parentUUID": "238c98f9-3499-4a4e-9164-0e8050772fc4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Redirect on field setting page after clicking on \"manage field\" button",
              "fullTitle": "Nevigate the lead page and test grid view componet Redirect on field setting page after clicking on \"manage field\" button",
              "timedOut": null,
              "duration": 5738,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editCol').click();\ncyGet(`[data-testid=\"Manage fields\"]`).contains(\"Manage fields\").click();\ncy.url().should(\"eq\", `${updatedUrl}/setting/properties`);\ncyGet('.MuiTypography-caption').contains(`Fields store information about ${moduleName}.`);",
              "err": {},
              "uuid": "389bcda1-f2c7-4482-8f55-07898398527c",
              "parentUUID": "238c98f9-3499-4a4e-9164-0e8050772fc4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the detail page",
              "fullTitle": "Nevigate the lead page and test grid view componet Should redirected to the detail page",
              "timedOut": null,
              "duration": 4406,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@recordGrid\").then(({\n  response\n}) => {\n  const recordId = response.body.result.values[0].id;\n  const uidField = response.body.result.view.columns.find(ele => ele.prop === \"uid\");\n  const uidFieldValue = response.body.result.values[0][uidField.id];\n  cy.contains(`tr`, uidFieldValue).find(`td`).contains(uidFieldValue).click({\n    force: true\n  });\n  cy.url().should(\"contain\", `${updatedUrl}/${asset}s/${recordId}`);\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'id')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'id')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/grid.js:139:60)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147616:15)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)",
                "diff": null
              },
              "uuid": "3a619a9f-bef9-44ec-80d0-f91e5c21caed",
              "parentUUID": "238c98f9-3499-4a4e-9164-0e8050772fc4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bae66f88-5773-407c-a958-838eec985314",
            "06db1cb4-30e9-4b57-a819-c9abb0959776",
            "842579fb-d31a-4598-8bac-9b29ee53ecda",
            "389bcda1-f2c7-4482-8f55-07898398527c"
          ],
          "failures": [
            "3a619a9f-bef9-44ec-80d0-f91e5c21caed"
          ],
          "pending": [],
          "skipped": [],
          "duration": 44911,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a6223839-28a3-4516-8091-45cf4b3ce170",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
      "file": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e7d022dc-6189-49ae-b8ac-60c9c897c170",
          "title": "Nevigate the lead page and test kanban view componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
          "file": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify uid field should be required and selected on kanban view",
              "fullTitle": "Nevigate the lead page and test kanban view componet Verify uid field should be required and selected on kanban view",
              "timedOut": null,
              "duration": 14873,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncy.wait(\"@kanbanViewConfig\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const getKanbanResult = response.body.result;\n  const uidField = getKanbanResult.values.find(ele => ele.required === true);\n  expect(uidField).has.property(\"label\", `${assetName} Id`);\n  expect(uidField).has.property(\"required\", true);\n  expect(uidField).has.property(\"selected\", true);\n  cyGet('[variant=\"standard\"] [type=\"search\"]').type(uidField === null || uidField === void 0 ? void 0 : uidField.label);\n  cyGet(lead.chkbxOnfieldConfig).first().should(\"be.checked\").and(\"be.disabled\");\n});",
              "err": {},
              "uuid": "8e905491-be4c-4f72-82d7-bbaa063d5c1d",
              "parentUUID": "e7d022dc-6189-49ae-b8ac-60c9c897c170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Field on Kanban view if selected field less than 5",
              "fullTitle": "Nevigate the lead page and test kanban view componet Add Field on Kanban view if selected field less than 5",
              "timedOut": null,
              "duration": 6608,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncy.wait(\"@kanbanViewConfig\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const getKanbanResult = response.body.result;\n  const selectedFields = getKanbanResult.selectedProperties;\n  if (selectedFields.length < 5) {\n    const unselectedFields = getKanbanResult.values.find(ele => ele.selected === false);\n    cy.log(JSON.stringify(selectedFields));\n    cy.log(JSON.stringify(unselectedFields));\n    setFieldOnViewConfig('[variant=\"standard\"] [type=\"search\"]', unselectedFields === null || unselectedFields === void 0 ? void 0 : unselectedFields.label, lead.chkbxOnfieldConfig);\n    cyGet(lead.typeBtn).contains(\"Save\").click();\n  } else {\n    cy.log(`5 field already selected`);\n  }\n});",
              "err": {},
              "uuid": "250582cd-7997-412a-86a4-8314da177376",
              "parentUUID": "e7d022dc-6189-49ae-b8ac-60c9c897c170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Field on Kanban view",
              "fullTitle": "Nevigate the lead page and test kanban view componet Remove Field on Kanban view",
              "timedOut": null,
              "duration": 20631,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet('[data-rbd-droppable-id=\"column\"]').children().then(childlength => {\n  let count = Cypress.$(childlength).length;\n  let nth = count - 1;\n  cy.log('option count: ', count);\n  cyGet(`[data-rbd-droppable-id=\"column\"] > :nth-child(${nth}) > :nth-child(1) > :nth-child(1) > :nth-child(2)`).click();\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-rbd-droppable-id=\"column\"] > :nth-child(0) > :nth-child(1) > :nth-child(1) > :nth-child(2)`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-rbd-droppable-id=\"column\"] > :nth-child(0) > :nth-child(1) > :nth-child(1) > :nth-child(2)`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:3:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/kanban.js:71:12)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)",
                "diff": null
              },
              "uuid": "7200db55-b7af-4717-aedf-acb2749158fd",
              "parentUUID": "e7d022dc-6189-49ae-b8ac-60c9c897c170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Card style: Compact",
              "fullTitle": "Nevigate the lead page and test kanban view componet Card style: Compact",
              "timedOut": null,
              "duration": 7298,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet(`[name=\"compact\"]`).then($ele => {\n  if ($ele.is(':checked')) {\n    cy.log(`Compact already checked`);\n  } else {\n    cy.wrap($ele).check();\n  }\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\ncy.wait(\"@recordKanben\");\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.config).have.property(\"cardStyle\", \"compact\");\n});",
              "err": {},
              "uuid": "2b906d34-6703-4392-894b-4c32aa9bc300",
              "parentUUID": "e7d022dc-6189-49ae-b8ac-60c9c897c170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Card style: Default",
              "fullTitle": "Nevigate the lead page and test kanban view componet Card style: Default",
              "timedOut": null,
              "duration": 7037,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet(`[name=\"default\"]`).then($ele => {\n  if ($ele.is(':checked')) {\n    cy.log(`Default already checked`);\n  } else {\n    cy.wrap($ele).check();\n  }\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\ncy.wait(1000);\ncy.wait(\"@recordKanben\");\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.config).have.property(\"cardStyle\", \"default\");\n});",
              "err": {},
              "uuid": "72b46959-300a-43c1-ba6c-376a0832b148",
              "parentUUID": "e7d022dc-6189-49ae-b8ac-60c9c897c170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Re-order field on kanban view config page",
              "fullTitle": "Nevigate the lead page and test kanban view componet Re-order field on kanban view config page",
              "timedOut": null,
              "duration": 8797,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncy.wait(\"@kanbanViewConfig\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let selectedProp = response.body.result.selectedProperties;\n  expect(response.body.result.selectedProperties).be.length.greaterThan(2);\n  cy.dragAndDrop(`[data-rbd-draggable-id=\"${selectedProp[1]}\"]`, `[data-rbd-draggable-id=\"${selectedProp[2]}\"]`);\n  onesecondWait();\n  cyGet(lead.typeBtn).contains(\"Save\").click();\n  cy.wait(\"@recordKanben\");\n  cy.wait(\"@recordKanben\").then(({\n    response\n  }) => {\n    expect(response.body.result.config.fields[0]).have.property(\"id\", selectedProp[2]);\n    expect(response.body.result.config.fields[1]).have.property(\"id\", selectedProp[1]);\n  });\n});",
              "err": {},
              "uuid": "c6bb6625-a6a5-42df-8870-9051c52a331b",
              "parentUUID": "e7d022dc-6189-49ae-b8ac-60c9c897c170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the create record form after clicking the \"Add Lead\" button",
              "fullTitle": "Nevigate the lead page and test kanban view componet Should redirected to the create record form after clicking the \"Add Lead\" button",
              "timedOut": null,
              "duration": 7442,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData = response.body.result.values[stageOnKanban[1]];\n  cyGet(`[data-rbd-draggable-id=\"${stageOnKanban[1]}\"] > :nth-child(1) > :nth-child(1)> :nth-child(1) > :nth-child(1)`).should(\"have.text\", stageData.label);\n  cyGet(`[data-rbd-draggable-id=\"${stageOnKanban[1]}\"] > :nth-child(1) > :nth-child(4) button`).click();\n  cy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").type(faker.string.numeric(10));\n  cy.componentLabel(lead.formLabel, \"Stage\", \"span\").should(\"have.text\", stageData.label);\n  cyGet(lead.saveBtn).click();\n  cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Created successfully.\");\n});",
              "err": {},
              "uuid": "f7bd87eb-6e6a-4dbe-8019-61dece551b67",
              "parentUUID": "e7d022dc-6189-49ae-b8ac-60c9c897c170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Drag and drop an item one stage to another stage",
              "fullTitle": "Nevigate the lead page and test kanban view componet Drag and drop an item one stage to another stage",
              "timedOut": null,
              "duration": 11773,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[1]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cy.dragAndDrop(`[data-rbd-draggable-id=\"${itemId_1[0]}\"]`, `[data-rbd-draggable-id=\"${stageOnKanban[0]}\"]`);\n  cy.wait(1000);\n  cy.wait(\"@kanbanStage\").then(({\n    response\n  }) => {\n    expect(response.body).have.property(\"message\", \"Updated successfully.\");\n    expect(response.body.result.source).have.property(\"id\", stageOnKanban[1]);\n    expect(response.body.result.target).have.property(\"id\", stageOnKanban[0]);\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `kanbanStage`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `kanbanStage`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:77648:18)\n    at Object.errByPath (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:77702:10)\n    at checkForXhr (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:138962:84)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:138988:28)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147344:68)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147285:14)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:5420:46)\nFrom Your Spec Code:\n    at Object.proxyGetter [as get] (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:80410:22)\n    at exists (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:146526:26)\n    at elExists (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:146541:10)\n    at ensureExistence (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:146722:22)\n    at onFailFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:146751:53)",
                "diff": null
              },
              "uuid": "3107d0c1-a8b4-45bb-8ab4-ddcbd598a742",
              "parentUUID": "e7d022dc-6189-49ae-b8ac-60c9c897c170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the detail page after clicking the \"edit\" button",
              "fullTitle": "Nevigate the lead page and test kanban view componet Should redirected to the detail page after clicking the \"edit\" button",
              "timedOut": null,
              "duration": 22223,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[0]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cyGet(`[data-rbd-draggable-id=\"${itemId_1[0]}\"] [aria-controls=\"more\"]`).click();\n  cyGet('[role=\"menu\"] > :nth-child(1) > li').first().find(\"span\").contains(\"Edit\").click();\n  cy.url().should(\"contain\", `${updatedUrl}/${asset}s/${itemId_1[0]}`);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-rbd-draggable-id=\"undefined\"] [aria-controls=\"more\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-rbd-draggable-id=\"undefined\"] [aria-controls=\"more\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:3:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/kanban.js:163:12)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)",
                "diff": null
              },
              "uuid": "4deb9280-e06b-4d96-b797-35a4e9b1640c",
              "parentUUID": "e7d022dc-6189-49ae-b8ac-60c9c897c170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete record from kanban view page",
              "fullTitle": "Nevigate the lead page and test kanban view componet delete record from kanban view page",
              "timedOut": null,
              "duration": 19400,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let dialogDecs = `Are you sure you want to delete this ${asset}?`;\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[0]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cyGet(`[data-rbd-draggable-id=\"${itemId_1[0]}\"] [aria-controls=\"more\"]`).click();\n  cyGet('[role=\"menu\"] > :nth-child(1) > li').last().find(\"span\").contains(\"Delete\").click();\n  cy.roleDialog(lead.dialogTitle, `Delete ${asset}`, lead.dialogDesc, dialogDecs, '#delete', \"Delete\");\n  cy.wait(\"@deleteRecord\").then(({\n    response\n  }) => {\n    expect(response.body).have.property(\"message\", \"Deleted successfully.\");\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-rbd-draggable-id=\"undefined\"] [aria-controls=\"more\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[data-rbd-draggable-id=\"undefined\"] [aria-controls=\"more\"]`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:3:47)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/kanban.js:176:12)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)",
                "diff": null
              },
              "uuid": "2819d1de-c85d-40f4-a76b-e44f1a2d09bc",
              "parentUUID": "e7d022dc-6189-49ae-b8ac-60c9c897c170",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e905491-be4c-4f72-82d7-bbaa063d5c1d",
            "250582cd-7997-412a-86a4-8314da177376",
            "2b906d34-6703-4392-894b-4c32aa9bc300",
            "72b46959-300a-43c1-ba6c-376a0832b148",
            "c6bb6625-a6a5-42df-8870-9051c52a331b",
            "f7bd87eb-6e6a-4dbe-8019-61dece551b67"
          ],
          "failures": [
            "7200db55-b7af-4717-aedf-acb2749158fd",
            "3107d0c1-a8b4-45bb-8ab4-ddcbd598a742",
            "4deb9280-e06b-4d96-b797-35a4e9b1640c",
            "2819d1de-c85d-40f4-a76b-e44f1a2d09bc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 126082,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fe87375b-b892-4f2d-949f-8438ccae79c6",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
      "file": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fc4fca82-62fc-4f55-8709-5fd55fe5132e",
          "title": "Nevigate the setting page and delete and restore field",
          "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
          "file": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete or detach a field and verify that it is stored in the deleted field section",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete or detach a field and verify that it is stored in the deleted field section",
              "timedOut": null,
              "duration": 13553,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${updatedUrl}/setting/properties`);\n// cy.visit(`${Cypress.env(\"lmsUrl\")}/setting/properties`)\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const nonSystemFields = response.body.result.values.filter(field => field.system === false);\n  // cy.log(JSON.stringify(nonSystemFields))\n  let fieldData = nonSystemFields.slice(-1);\n  // cy.log(JSON.stringify(fieldData))\n  let attachedCount = nonSystemFields[0].attachedCount.count;\n  if (attachedCount <= 1) {\n    (0, _global.fieldSearchAndAct)(fieldData[0].label, \"#delete\");\n    cy.get(\"#delete\").click();\n  } else {\n    (0, _global.fieldSearchAndAct)(fieldData[0].label, \"#detach\");\n    cy.get(\"#detach\").click();\n  }\n  cy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n    timeout: 10000\n  }).contains(\"Deleted fields\").click();\n  cy.wait(\"@binList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let binField = response.body.result.values.map(ele => ele.label);\n    cy.log(JSON.stringify(binField));\n    // if (response.body.result.pages.totalNoOfPages == 1) {\n    //     expect(binField.slice(-1)).to.be.contains(fieldData[0].label)\n    // } else {\n    //     cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click()\n    //     cy.wait(\"@binList\", { timeout: 10000 }).then(({ response }) => {\n    //         let binField = response.body.result.values.map(ele => ele.label)\n    //         expect(binField.slice(-1)).to.be.contains(fieldData[0].label)\n    //     })\n    // }\n  });\n});",
              "err": {},
              "uuid": "049d1823-75be-4e74-99be-d1522cc095fe",
              "parentUUID": "fc4fca82-62fc-4f55-8709-5fd55fe5132e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore field from field tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Restore field from field tab",
              "timedOut": null,
              "duration": 2996,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Restore 1 field ?\";\nlet desc = \"Are you sure you want to  restore 1 field ?\";\ncy.visit(`${updatedUrl}/setting/properties`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Deleted fields\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#restore\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[data-testid=\"Restore\"]`, \"Restore\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:77:58)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)",
                "diff": ""
              },
              "uuid": "68e306ee-5c3b-407f-b3c5-ea7780f7fed3",
              "parentUUID": "fc4fca82-62fc-4f55-8709-5fd55fe5132e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete field from field tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete field from field tab",
              "timedOut": null,
              "duration": 2250,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Delete 1 field ?\";\nlet desc = \"Are you sure you want to  delete 1 field ?\";\ncy.visit(`${updatedUrl}/setting/properties`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Deleted fields\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#delete\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:90:58)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)",
                "diff": ""
              },
              "uuid": "c8f53e8e-f8b7-45b2-9b47-bb17398a84a2",
              "parentUUID": "fc4fca82-62fc-4f55-8709-5fd55fe5132e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter single line field and verify column with rows us",
              "fullTitle": "Nevigate the setting page and delete and restore field Filter single line field and verify column with rows us",
              "timedOut": null,
              "duration": 8353,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.recordCountOnPage(\"10\");\ncy.get('[aria-label=\"Select field type\"]').click();\nfieldTypeFilterSel(\"Multi line text\");\ncy.get('.MuiButton-endIcon').click();\ncy.wait(\"@binList\");\ncy.wait(\"@binList\");\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  let binFieldLabel = response.body.result.values.map(ele => ele.label);\n  let deletedType = response.body.result.values.map(ele => {\n    return ele.type.charAt(0).toUpperCase() + ele.type.slice(1);\n  });\n  let deletedBy = response.body.result.values.map(ele => ele.deletedBy);\n  let userName = deletedBy.map(key => {\n    let label = key.label;\n    return label;\n  });\n  let fieldTypeArray = Array(binFieldLabel.length).fill(\"Multi line text\");\n  verifyTablecolNrow(lead.thead, 2, \"Field name\", lead.tbody, binFieldLabel);\n  verifyTablecolNrow(lead.thead, 3, \"Field type\", lead.tbody, fieldTypeArray);\n  verifyTablecolNrow(lead.thead, 4, \"Deleted by\", lead.tbody, userName);\n  verifyTablecolNrow(lead.thead, 5, \"Deleted type\", lead.tbody, deletedType);\n});",
              "err": {},
              "uuid": "8c616afd-7d12-4c30-b7c1-578f25de32ef",
              "parentUUID": "fc4fca82-62fc-4f55-8709-5fd55fe5132e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore field from bin tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Restore field from bin tab",
              "timedOut": null,
              "duration": 5485,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let title = \"Restore 1 field ?\";\nlet desc = \"Are you sure you want to restore 1 field ? \";\ncy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#restore\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Restore\");\n});",
              "err": {},
              "uuid": "3823aebc-ec63-4302-9126-2012d0ee71cc",
              "parentUUID": "fc4fca82-62fc-4f55-8709-5fd55fe5132e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete field from bin tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete field from bin tab",
              "timedOut": null,
              "duration": 4457,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let title = \"Delete 1  field ?\";\nlet desc = \"Are you sure you want to delete 1 field ? \";\ncy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#delete\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n});",
              "err": {},
              "uuid": "e6e0563f-949a-4e26-88db-805ace804d08",
              "parentUUID": "fc4fca82-62fc-4f55-8709-5fd55fe5132e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "049d1823-75be-4e74-99be-d1522cc095fe",
            "8c616afd-7d12-4c30-b7c1-578f25de32ef",
            "3823aebc-ec63-4302-9126-2012d0ee71cc",
            "e6e0563f-949a-4e26-88db-805ace804d08"
          ],
          "failures": [
            "68e306ee-5c3b-407f-b3c5-ea7780f7fed3",
            "c8f53e8e-f8b7-45b2-9b47-bb17398a84a2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 37094,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a3a9b3bc-6c9f-454f-ac76-c5593bc2a182",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
      "file": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a2080513-1022-47a6-9dc6-743555397fec",
          "title": "Test the functionality of restore lead from bin",
          "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
          "file": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check if the Cancel button is working when restoring lead from bin",
              "fullTitle": "Test the functionality of restore lead from bin Check if the Cancel button is working when restoring lead from bin",
              "timedOut": null,
              "duration": 11910,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(lead.typeBtn).contains(\"Delete\").should(\"be.disabled\");\ncy.get(lead.typeBtn).contains(\"Restore\").should(\"be.disabled\");\ncy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  uidFeild = response.body.result.view.columns.find(fld => fld.prop === \"uid\");\n  const msg1 = `Restore ${recordLength} ${asset} ?`;\n  const msg2 = `Are you sure you want to restore ${recordLength} ${asset} ? `;\n  if (totalRecord === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(totalRecord).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Restore\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, lead.typeBtn, \"Cancel\");\n    cy.wait(500);\n    cy.get(lead.countOnGrid).contains(totalRecord);\n  }\n});",
              "err": {},
              "uuid": "5749692f-bdb7-4e71-b9e9-63c417c99081",
              "parentUUID": "a2080513-1022-47a6-9dc6-743555397fec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore the lead from bin",
              "fullTitle": "Test the functionality of restore lead from bin Restore the lead from bin",
              "timedOut": null,
              "duration": 3604,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  let msg1 = `Restore ${recordLength} lead ?`;\n  let msg2 = `Are you sure you want to restore ${recordLength} lead ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Restore\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `.MuiDialogActions-root ${lead.typeBtn}`, \"Restore\");\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Request successful.\");\n    cy.get(lead.countOnGrid).contains(remainsRecord);\n  }\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'label')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'label')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/record.js:51:43)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147616:15)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)",
                "diff": null
              },
              "uuid": "8b829502-6371-444c-a6c7-0110cb4ee1a9",
              "parentUUID": "a2080513-1022-47a6-9dc6-743555397fec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check if the Cancel button is working when deleting lead from bin",
              "fullTitle": "Test the functionality of restore lead from bin Check if the Cancel button is working when deleting lead from bin",
              "timedOut": null,
              "duration": 3536,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let msg1 = `Delete ${recordLength} ${asset} ?`;\n  let msg2 = `Are you sure you want to delete ${recordLength} ${asset} ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, lead.typeBtn, \"Cancel\");\n    cy.wait(500);\n    cy.get(lead.countOnGrid).contains(totalRecord);\n  }\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'label')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'label')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/record.js:70:43)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147616:15)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)",
                "diff": null
              },
              "uuid": "33d963e0-df2a-44c1-8e3e-d758c3309fde",
              "parentUUID": "a2080513-1022-47a6-9dc6-743555397fec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the lead from bin",
              "fullTitle": "Test the functionality of restore lead from bin Delete the lead from bin",
              "timedOut": null,
              "duration": 2088,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  let msg1 = `Delete ${recordLength} ${asset} ?`;\n  let msg2 = `Are you sure you want to delete ${recordLength} ${asset} ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Deleted successfully.\");\n    cy.get(lead.countOnGrid).contains(remainsRecord);\n  }\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'label')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'label')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/record.js:90:43)\n    at getRet (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121066:20)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121077:66)\n    at Context.then (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:121328:21)\n    at wrapped (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:141671:19)\n    at <unknown> (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:147616:15)\n    at tryCatcher (http://lms.buopso.lcl/__cypress/runner/cypress_runner.js:1777:23)",
                "diff": null
              },
              "uuid": "ea179eda-ec54-446a-9d5f-01b3558b857f",
              "parentUUID": "a2080513-1022-47a6-9dc6-743555397fec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5749692f-bdb7-4e71-b9e9-63c417c99081"
          ],
          "failures": [
            "8b829502-6371-444c-a6c7-0110cb4ee1a9",
            "33d963e0-df2a-44c1-8e3e-d758c3309fde",
            "ea179eda-ec54-446a-9d5f-01b3558b857f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 21138,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[datetime]",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "Buopso-UI-Report",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "reportFilename": "[datetime]",
        "timestamp": "isoDateTime",
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\.jsons",
        "saveJson": true
      },
      "version": "6.2.0"
    }
  }
}