{
  "stats": {
    "suites": 47,
    "tests": 198,
    "passes": 121,
    "pending": 32,
    "failures": 45,
    "testsRegistered": 198,
    "passPercent": 61.111111111111114,
    "pendingPercent": 16.161616161616163,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2025-07-29T06:16:34.925Z",
    "end": "2025-07-29T06:49:57.032Z",
    "duration": 2002107
  },
  "results": [
    {
      "uuid": "45eaf61f-ae12-41d8-b737-c874c2cc67a6",
      "title": "",
      "fullFile": "cypress\\e2e\\auth\\login.js",
      "file": "cypress\\e2e\\auth\\login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7334f577-a13b-4d1d-9b1d-763a6c5c6683",
          "title": "Test case for login",
          "fullFile": "cypress\\e2e\\auth\\login.js",
          "file": "cypress\\e2e\\auth\\login.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Pass invalid email",
              "fullTitle": "Test case for login Pass invalid email",
              "timedOut": null,
              "duration": 3387,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(\"abc.xyzgmail.com\");\n  cy.get('.MuiFormHelperText-root').should(\"contain\", \"Please provide proper username\");\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Please enter a valid email.\");",
              "err": {},
              "uuid": "5c0cbb15-5349-4fe8-849c-54f810514aaf",
              "parentUUID": "7334f577-a13b-4d1d-9b1d-763a6c5c6683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass wrong email",
              "fullTitle": "Test case for login Pass wrong email",
              "timedOut": null,
              "duration": 884,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(\"abc@xyx.com\");\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"user not found.\");",
              "err": {},
              "uuid": "ac843e50-75b7-4969-99db-4176f4a96846",
              "parentUUID": "7334f577-a13b-4d1d-9b1d-763a6c5c6683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass invalid password",
              "fullTitle": "Test case for login Pass invalid password",
              "timedOut": null,
              "duration": 1124,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(Cypress.env(\"email\"));\n  cy.get(\"@password\").type(132134344);\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Invalid username or password.\");",
              "err": {},
              "uuid": "3db4881e-55b8-46ca-9df6-3901bbdb3288",
              "parentUUID": "7334f577-a13b-4d1d-9b1d-763a6c5c6683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass wrong password",
              "fullTitle": "Test case for login Pass wrong password",
              "timedOut": null,
              "duration": 1638,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(Cypress.env(\"email\"));\n  cy.get(\"@password\").type(\"AAsdf1234\");\n  cy.root().submit();\n});\ncy.get('.MuiSnackbarContent-message').should(\"contain\", \"Invalid username or password.\");",
              "err": {},
              "uuid": "0b6ebcd1-b8d1-4222-8deb-9422a1a2260c",
              "parentUUID": "7334f577-a13b-4d1d-9b1d-763a6c5c6683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pass the valid email in upper-case",
              "fullTitle": "Test case for login Pass the valid email in upper-case",
              "timedOut": null,
              "duration": 2112,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let email = Cypress.env(\"email\").toUpperCase();\ncy.get(\"form\").within(() => {\n  cy.get(\"@email\").type(email);\n  cy.get(\"@password\").type(Cypress.env(\"password\"));\n  cy.root().submit();\n});\ncy.wait(\"@loginApi\").then(({\n  response\n}) => {\n  if (response.body.result === \"session_exists\") {\n    cy.get('[role=\"presentation\"] .MuiDialog-container .MuiPaper-root button').contains(\"Ok\").click();\n  }\n});\ncy.get('[aria-label=\"User Profile\"] > .MuiButtonBase-root').click();\ncy.get('.MuiPaper-root .MuiTypography-root').contains(\"Sign out\").click();",
              "err": {},
              "uuid": "86ea806e-4fe7-49c2-b2ee-29a4a7e7dd22",
              "parentUUID": "7334f577-a13b-4d1d-9b1d-763a6c5c6683",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c0cbb15-5349-4fe8-849c-54f810514aaf",
            "ac843e50-75b7-4969-99db-4176f4a96846",
            "3db4881e-55b8-46ca-9df6-3901bbdb3288",
            "0b6ebcd1-b8d1-4222-8deb-9422a1a2260c",
            "86ea806e-4fe7-49c2-b2ee-29a4a7e7dd22"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9145,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4dedd833-5476-433b-9012-dc0e3f7463f6",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\allSoftware.js",
      "file": "cypress\\e2e\\one\\allSoftware.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "250e2458-3560-485f-81d9-87cd920f16b3",
          "title": "Test case for allSoftware",
          "fullFile": "cypress\\e2e\\one\\allSoftware.js",
          "file": "cypress\\e2e\\one\\allSoftware.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Asset : Lead Management Software(lms)",
              "fullTitle": "Test case for allSoftware Asset : Lead Management Software(lms)",
              "timedOut": null,
              "duration": 5047,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let lmsDes = 'Efficiently manage and assign lead information.';\ncy.Modules(`#lms ${one.moduleNameID}`, _helper.modules.lms, `#lms ${one.moduleDescID}`, lmsDes, `#lms ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.lms);",
              "err": {},
              "uuid": "3279d480-7db5-45f6-ab6e-277a3eaeb68f",
              "parentUUID": "250e2458-3560-485f-81d9-87cd920f16b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Customer relationship management Software(crm)",
              "fullTitle": "Test case for allSoftware Asset : Customer relationship management Software(crm)",
              "timedOut": null,
              "duration": 3025,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let crmDes = 'Drive sales success, build stronger client relationships, and grow revenue with our CRM.';\ncy.Modules(`#crm  ${one.moduleNameID}`, _helper.modules.crm, `#crm  ${one.moduleDescID}`, crmDes, `#crm  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.crm);",
              "err": {},
              "uuid": "3936c695-40e9-4e17-bae4-0369e473f0d6",
              "parentUUID": "250e2458-3560-485f-81d9-87cd920f16b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Approval Management Software(cnf)",
              "fullTitle": "Test case for allSoftware Asset : Approval Management Software(cnf)",
              "timedOut": null,
              "duration": 4083,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let aprDes = 'The approver can approve public and private data as required.';\ncy.Modules(`#cnf  ${one.moduleNameID}`, _helper.modules.apr, `#cnf  ${one.moduleDescID}`, aprDes, `#cnf ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.apr);",
              "err": {},
              "uuid": "e6f3d7bd-c12d-4c0c-9486-929f9e3a6062",
              "parentUUID": "250e2458-3560-485f-81d9-87cd920f16b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Buopso Form",
              "fullTitle": "Test case for allSoftware Asset : Buopso Form",
              "timedOut": null,
              "duration": 4546,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let formsDes = 'Build your form as required and gather the form data.';\ncy.Modules(`#forms  ${one.moduleNameID}`, _helper.modules.buForms, `#forms  ${one.moduleDescID}`, formsDes, `#forms  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.buForms);",
              "err": {},
              "uuid": "e886b174-a1d9-4289-8ba8-f98d0748c222",
              "parentUUID": "250e2458-3560-485f-81d9-87cd920f16b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Task Management",
              "fullTitle": "Test case for allSoftware Asset : Task Management",
              "timedOut": null,
              "duration": 3116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let taskDes = 'Task management system. Manage task records and assign tasks to the user.';\ncy.Modules(`#task  ${one.moduleNameID}`, _helper.modules.taskManagement, `#task  ${one.moduleDescID}`, taskDes, `#task  ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.taskManagement);",
              "err": {},
              "uuid": "1081e886-7991-4375-bb41-fa94dcfcb361",
              "parentUUID": "250e2458-3560-485f-81d9-87cd920f16b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Asset : Invoice",
              "fullTitle": "Test case for allSoftware Asset : Invoice",
              "timedOut": null,
              "duration": 4161,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let InvoiceDes = 'Invoice for customers and manage payment and ledger history.';\ncy.Modules(`#invoice ${one.moduleNameID}`, _helper.modules.invoice, `#invoice  ${one.moduleDescID}`, InvoiceDes, `#invoice ${one.modOpnbtnID}`, one.moduleHeader, _helper.modules.invoice);",
              "err": {},
              "uuid": "6b72bcb6-d00e-44c4-b5f2-c58073b461b9",
              "parentUUID": "250e2458-3560-485f-81d9-87cd920f16b3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3279d480-7db5-45f6-ab6e-277a3eaeb68f",
            "3936c695-40e9-4e17-bae4-0369e473f0d6",
            "e6f3d7bd-c12d-4c0c-9486-929f9e3a6062",
            "e886b174-a1d9-4289-8ba8-f98d0748c222",
            "1081e886-7991-4375-bb41-fa94dcfcb361",
            "6b72bcb6-d00e-44c4-b5f2-c58073b461b9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23978,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5f43f923-3f83-4c5d-b46f-ec7965409366",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\addUser.js",
      "file": "cypress\\e2e\\one\\myAccount\\addUser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "13669645-fc1e-4352-9b17-fe8d7f53d2c9",
          "title": "Add User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\addUser.js",
          "file": "cypress\\e2e\\one\\myAccount\\addUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test with a valid unique Valid email",
              "fullTitle": "Add User functionality test Test with a valid unique Valid email",
              "timedOut": null,
              "duration": 7513,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('[placeholder=\"Email id\"]').type(uniqueEmail);\ncy.contains(\"Select permission template\").click();\ncy.wait(\"@getTemplate\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let teplateName = response.body.result.values.map(ele => ele.label);\n  // cy.log(teplateName)\n  cy.wrap(teplateName).as(\"templates\");\n  if (response.body.result.values.length > 0) {\n    cy.assetDropdownSel(teplateName[0]).should(\"have.text\", teplateName[0]);\n  }\n  customElements;\n});\ncyGet(\"@templates\").then(response => {\n  templateLabel = response;\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\n// cy.pause()\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.requestSuccess);",
              "err": {},
              "uuid": "b37fbbab-7e87-4bc0-90b8-2dab8551c617",
              "parentUUID": "13669645-fc1e-4352-9b17-fe8d7f53d2c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with a invalid email",
              "fullTitle": "Add User functionality test Test with a invalid email",
              "timedOut": null,
              "duration": 4890,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let randomString_1 = Math.random().toString(36).substring(2, 11);\nlet uniqueEmail_1 = `testuser${randomString_1}example.com`;\ncy.get('[placeholder=\"Email id\"]').type(uniqueEmail_1);\ncy.contains(\"Select permission template\").click();\ncy.get('[data-testid=\"chipinput-chip-nkx7xamrs\"]').trigger('mouseover');\ncy.wait(500);\ncy.get('.MuiTooltip-tooltip').should('have.text', 'Email is not valid.');",
              "err": {},
              "uuid": "ef5cee8c-0545-43e3-ba5c-930d453745de",
              "parentUUID": "13669645-fc1e-4352-9b17-fe8d7f53d2c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test with a Exist email",
              "fullTitle": "Add User functionality test Test with a Exist email",
              "timedOut": null,
              "duration": 3483,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[placeholder=\"Email id\"]').type(uniqueEmail);\ncy.contains(\"Select permission template\").click();\ncy.get('[data-testid=\"chipinput-chip-nkx7xamrs\"]').trigger('mouseover');\ncy.get('.MuiTooltip-tooltip').should('have.text', 'User already exist.');\ncy.get(lead.typeBtn).contains(\"Save\").should(\"be.disabled\");",
              "err": {},
              "uuid": "41378d58-0115-4c77-b7dc-04b0ea8ea30f",
              "parentUUID": "13669645-fc1e-4352-9b17-fe8d7f53d2c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test For addTemplate from Add user page",
              "fullTitle": "Add User functionality test Test For addTemplate from Add user page",
              "timedOut": null,
              "duration": 3738,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//  cy.componentLabel(lead.formLabel, \"Select permission template\", \"button\").click()\ncy.get('[data-testid=\"button-typography-8x5inumxs\"]').first().click(); //select the template\n// cy.assetDropdownSel(templateLabel[0]).click()\ncy.get('[data-testid=\"dropdown-footer\"]').contains('Add template').click(); // add new template\n// cy.contains('Add template').click();\ncy.url().should('eq', `${Cypress.env(\"url\")}/template`);\ncy.contains('Create').should('be.visible').should('not.be.disabled').click();",
              "err": {},
              "uuid": "92b03351-1fad-4577-b6a8-92c42e142478",
              "parentUUID": "13669645-fc1e-4352-9b17-fe8d7f53d2c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b37fbbab-7e87-4bc0-90b8-2dab8551c617",
            "ef5cee8c-0545-43e3-ba5c-930d453745de",
            "41378d58-0115-4c77-b7dc-04b0ea8ea30f",
            "92b03351-1fad-4577-b6a8-92c42e142478"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19624,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0416dbd8-7250-43cd-a5b7-2d995e6c70de",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
      "file": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c359ed4f-bcd9-42ad-8b43-5751deaaafcd",
          "title": "Manage User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
          "file": "cypress\\e2e\\one\\myAccount\\manageTemplate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check system default required field should be already required and should not be changeable  ",
              "fullTitle": "Manage User functionality test Check system default required field should be already required and should not be changeable  ",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.get('[placeholder=\"search....\"]').type(uniqueTemplateName);\ncy.get('table> tbody').children(\"tr\").contains(uniqueTemplateName).next().click();\ncy.get(\"#edit\").click();\ncy.wait(1000);\ncy.get('input[placeholder=\"Enter template name\"]').clear().type(uniqueTemplateNameupdated);\ncy.get('[role=\"list\"] [type=\"button\"]').click();\ncy.wait('@getPipelines', {\n  timeout: 10000\n}).then(interception => {\n  const responseBody = interception.response.body;\n  const leadName = responseBody.result.values[0].label;\n  cy.get(`${lead.chooseOptions} > :nth-child(2)`).click();\n  cy.contains(leadName).click();\n  cy.get('[data-testid=\"recordaccesstable-tablebody-circtrpwp\"] > [data-testid=\"ownershiprow-tablerow-6gy8mx6fe\"] > :nth-child(4) > [data-testid=\"ownershiprow-checkbox-y6wgiibo8\"] > .PrivateSwitchBase-input');\n  cy.get('[data-testid=\"ownershiprow-tablecell-jgp2w36xa\"] button').eq(1).click();\n  cy.wait(\"@tempFieldsList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const fieldLabel = response.body.result.values.map(ele => ele.label);\n    const fieldId = response.body.result.values.map(ele => ele.id);\n    cy.log(fieldLabel[0]);\n    cy.get('input[placeholder=\"Search...\"]').type(fieldLabel[0]);\n    cy.get(`[data-rbd-draggable-id=\"${fieldId[0]}\"] > .MuiGrid-root > :nth-child(2) > :nth-child(1) button`).click();\n    cy.contains('Required').should('have.class', 'Mui-disabled');\n    cy.get('[data-testid=\"bupopper-dialogactions-0zh9xps0l\"]').find('[data-testid=\"Cancel\"]').click();\n    cy.get('#send').click();\n    cy.get(lead.typeBtn).contains(\"Save\").click();\n  });\n  // })\n});",
              "err": {},
              "uuid": "b2cb609d-1933-4db5-a68a-c08abf2780b0",
              "parentUUID": "c359ed4f-bcd9-42ad-8b43-5751deaaafcd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "b6682b14-d05a-467e-aa88-7e462f94a95e",
              "title": "Add Template",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify the selected software and available softwares on the Create Template page",
                  "fullTitle": "Manage User functionality test Add Template Verify the selected software and available softwares on the Create Template page",
                  "timedOut": null,
                  "duration": 7433,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncyGet(globalSel.createtestid).contains(\"Create\").click();\ncy.wait(\"@modulePermission\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const [firstModule, ...availableModules] = response.body.result.add;\n  cyGet(`[data-testid=\"permissionsoftwarelist-typography-ftrzexyr7\"]`).should(\"contain.text\", \"Selected software\");\n  cyGet(`[data-testid=\"permissionsoftwarelist-menulist-aafxej4yj\"]`).first().find('[data-testid=\"permissionsoftwarelist-typography-zackmqq0q\"]').should('contain.text', formatModuleName(firstModule)); // e.g. Lead Management\n  availableModules.forEach(module => {\n    cyGet('[data-testid=\"permissionsoftwarelist-menulist-2qkcm4j30\"]').find(`[data-testid=\"permissionsoftwarelist-typography-86cpoqkhp\"]`).should('contain.text', formatModuleName(module));\n  });\n});",
                  "err": {},
                  "uuid": "2c491f72-3e2e-4735-96c6-ba181e88a9e2",
                  "parentUUID": "b6682b14-d05a-467e-aa88-7e462f94a95e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Add user template",
                  "fullTitle": "Manage User functionality test Add Template Add user template",
                  "timedOut": null,
                  "duration": 12825,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncyGet(globalSel.createtestid).contains(\"Create\").click();\n// Fill template name\nbutextField(`[data-testid=\"index-textfield-fm1l89cxe\"]`, `label`).contains(\"Template name\");\nbutextField(`[data-testid=\"index-textfield-fm1l89cxe\"]`, `input[placeholder=\"Enter template name\"]`).type(uniqueTemplateName);\n// Open dropdown and select pipeline\nbudropdown(`[data-testid=\"managepermission-stack-m3in09ace\"] > :first`, `[data-testid=\"button-typography-8x5inumxs\"]`, `Select Pipeline`);\ncy.wait(\"@getPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pipelines = response.body.result.values.map(ele => ele.label);\n  const firstPipeline = pipelines[0];\n  // Search if more than 5 pipelines\n  if (pipelines.length > 5) {\n    buSearchbox(globalSel.search, firstPipeline);\n  }\n  budropdownOption(firstPipeline).first().click();\n  // Verify ownership permissions UI\n  cyGet('[data-testid=\"ownershiprow-iconbutton-ph6ah241c\"]').click();\n  cy.contains('thead', 'Permission');\n  cy.contains('thead', 'Owner only');\n  cy.contains('thead', 'Everything');\n  cy.contains('thead', 'Select fields');\n  cy.contains('tr', firstPipeline);\n  // View permission should be checked and disabled\n  cy.contains('tr', 'View').find('input[type=\"checkbox\"]').eq(0).should('be.checked').and('be.disabled');\n  // Save\n  buSaveButton().click();\n});",
                  "err": {},
                  "uuid": "2e63feb6-20e5-4700-84fc-0b7a3e2bbcb7",
                  "parentUUID": "b6682b14-d05a-467e-aa88-7e462f94a95e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2c491f72-3e2e-4735-96c6-ba181e88a9e2",
                "2e63feb6-20e5-4700-84fc-0b7a3e2bbcb7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 20258,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7501bb7e-513c-4be0-94e7-953baeb97c1f",
              "title": "Assign and Edit Template",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Assign Template to user",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Assign Template to user",
                  "timedOut": null,
                  "duration": 20680,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageUsers`);\ncy.wait(\"@userGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _user, _user2;\n  user = response.body.result.values.find(ele => ele.role === \"std\");\n  if (!user) {\n    this.skip();\n  }\n  cy.intercept('GET', `**/crew/users//${user.id}`).as('getUserById');\n  cyGet(`[data-testid=\"activitybar-textfield-8eiuz4v4a\"] input`).type((_user = user) === null || _user === void 0 ? void 0 : _user.label);\n  onesecondWait();\n  cy.contains('tr', (_user2 = user) === null || _user2 === void 0 ? void 0 : _user2.label).find(`[data-testid=\"Action\"]`).click();\n  cyGet(\"#edit\").click({\n    force: true\n  });\n  twosecondWait();\n  cy.wait(\"@getUserById\").then(({\n    response\n  }) => {\n    const assignedTemplate = response.body.result.profile.template.label;\n    cyGet(`[data-testid=\"chipinput-iconbutton-ycchky4nm\"]`).click();\n    cy.wait(\"@getTempalte\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalTemplates = response.body.result.pages.totalRecords;\n      const templates = response.body.result.values.map(ele => ele.label);\n      if (assignedTemplate === \"No template\") {\n        userTemplate = templates[0];\n        if (totalTemplates > 5) {\n          buSearchbox(globalSel.search, userTemplate);\n        }\n        budropdownOption(userTemplate, `[data-testid=\"buchip-chip-5r51zm55o\"]`).click();\n      } else {\n        userTemplate = templates.find(ele => ele !== assignedTemplate);\n        if (totalTemplates > 5) {\n          buSearchbox(globalSel.search, userTemplate);\n        }\n        budropdownOption(userTemplate, `[data-testid=\"buchip-chip-5r51zm55o\"]`).click();\n      }\n      twosecondWait();\n      buSaveButton().click();\n      cyGet('.MuiSnackbarContent-message').should(\"contain.text\", \"User Permissions Updated\");\n      logout();\n      // cy.clearCookies();\n    });\n  });\n});",
                  "err": {},
                  "uuid": "56b1c208-75a2-4f80-900e-ed6823cd79a2",
                  "parentUUID": "7501bb7e-513c-4be0-94e7-953baeb97c1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to create a record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to create a record.",
                  "timedOut": null,
                  "duration": 22644,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user3;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const create = recordPermission.create;\n  setPermissionOnRoleSwitch(create, false, \"Create\", 0);\n  // Login with standard user\n  cy.login((_user3 = user) === null || _user3 === void 0 ? void 0 : _user3.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Create Lead\"]`).should(\"not.be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "a747301b-ba5f-4396-bd37-d0cd030c2b77",
                  "parentUUID": "7501bb7e-513c-4be0-94e7-953baeb97c1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to import the record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to import the record.",
                  "timedOut": null,
                  "duration": 24689,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user4;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const imp = recordPermission.import;\n  setPermissionOnRoleSwitch(imp, false, \"Import\", 0);\n  // Login with standard user\n  cy.login((_user4 = user) === null || _user4 === void 0 ? void 0 : _user4.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Import\"]`).should(\"not.be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "eef097d4-c008-4ac2-bd8b-ede653ff9b7b",
                  "parentUUID": "7501bb7e-513c-4be0-94e7-953baeb97c1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to activity of record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to activity of record.",
                  "timedOut": null,
                  "duration": 24547,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user5;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const activity = recordPermission.activity;\n  setPermissionOnRoleSwitch(activity, false, \"Activity\", 0);\n  // Login with standard user\n  cy.login((_user5 = user) === null || _user5 === void 0 ? void 0 : _user5.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"buelementgroup-box-n1f8dc7ag\"] [aria-label=\"Split view\"]`).click();\n  cyGet(`[data-testid=\"communicationbar-box-951cbwqi4\"]`).find(`[aria-label=\"Activities\"]`);\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "dee93ba8-9c9a-4493-b673-49f5c5cd88e7",
                  "parentUUID": "7501bb7e-513c-4be0-94e7-953baeb97c1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has permission to Whatsapp.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has permission to Whatsapp.",
                  "timedOut": null,
                  "duration": 28137,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user6;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const wa = recordPermission.wa;\n  setPermissionOnRoleSwitch(wa, false, \"Whatsapp\", 0);\n  // Login with standard user\n  cy.login((_user6 = user) === null || _user6 === void 0 ? void 0 : _user6.email);\n  // twosecondWait()\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"buelementgroup-box-n1f8dc7ag\"] [aria-label=\"Split view\"]`).click();\n  cyGet('[data-testid=\"communicationbar-box-951cbwqi4\"]').find(`[aria-label=\"Whatsapp\"]`);\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "245e1f5f-4614-4631-abd5-cfa1b5f6c3c6",
                  "parentUUID": "7501bb7e-513c-4be0-94e7-953baeb97c1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has not permission to create a record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has not permission to create a record.",
                  "timedOut": null,
                  "duration": 20741,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user7;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const create = recordPermission.create;\n  setPermissionOnRoleSwitch(create, true, \"Create\", 0);\n  // Login with standard user\n  cy.login((_user7 = user) === null || _user7 === void 0 ? void 0 : _user7.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Create Lead\"]`).should(\"be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "fec1ae7e-1ff0-4024-9487-8fb04f95e628",
                  "parentUUID": "7501bb7e-513c-4be0-94e7-953baeb97c1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify if the standard user has not permission to import the record.",
                  "fullTitle": "Manage User functionality test Assign and Edit Template Verify if the standard user has not permission to import the record.",
                  "timedOut": null,
                  "duration": 26071,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\npermission(userTemplate).then(permissionResult => {\n  var _user8;\n  const assignedPipeline = Object.keys(permissionResult.auth.lms.lead.manageRecords);\n  const recordPermission = permissionResult.auth.lms.lead.manageRecords[assignedPipeline[0]];\n  const imp = recordPermission.import;\n  setPermissionOnRoleSwitch(imp, true, \"Import\", 0);\n  // Login with standard user\n  cy.login((_user8 = user) === null || _user8 === void 0 ? void 0 : _user8.email);\n  cy.visit(`${Cypress.env(\"lmsUrl\")}/leads`);\n  cyGet(`[data-testid=\"Import\"]`).should(\"be.disabled\");\n  logout();\n  cy.clearCookies();\n});",
                  "err": {},
                  "uuid": "f9d07f0c-5fd4-4616-a55c-3caba15315dd",
                  "parentUUID": "7501bb7e-513c-4be0-94e7-953baeb97c1f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "56b1c208-75a2-4f80-900e-ed6823cd79a2",
                "a747301b-ba5f-4396-bd37-d0cd030c2b77",
                "eef097d4-c008-4ac2-bd8b-ede653ff9b7b",
                "dee93ba8-9c9a-4493-b673-49f5c5cd88e7",
                "245e1f5f-4614-4631-abd5-cfa1b5f6c3c6",
                "fec1ae7e-1ff0-4024-9487-8fb04f95e628",
                "f9d07f0c-5fd4-4616-a55c-3caba15315dd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 167509,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d624f20a-efa7-4f18-9fb3-da45c14c16e7",
              "title": "Delete TemPlate functionality",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete Template",
                  "fullTitle": "Manage User functionality test Delete TemPlate functionality Delete Template",
                  "timedOut": null,
                  "duration": 8063,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let msg1 = \"Delete template\";\nlet msg2 = \"Are you sure you want to delete this Template ?\";\ncy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncy.wait(\"@templateGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const unAssignedTemplate = response.body.result.values.filter(ele => ele.assignedTo.length === 0);\n  if (unAssignedTemplate.length > 0) {\n    cyGet(`[data-testid=\"templatelist-textfield-e9dj43sha\"] input`).type(unAssignedTemplate[0].label);\n    cy.contains('tr', unAssignedTemplate[0].label).find(`[data-testid=\"Action\"]`).click();\n    cyGet(\"#delete\").click();\n    buCaption(`[role=\"dialog\"]`, `#customized-dialog-title p`, msg1, `[role=\"dialog\"] [data-testid=\"deletetemplate-typography-5sxlboqg8\"]`, msg2);\n    cyGet(`[data-testid=\"Delete\"]`).click();\n  } else {\n    cy.log(`Teplate not available for delete`);\n  }\n});",
                  "err": {},
                  "uuid": "06dc0323-9cdc-4f82-8506-ab93560798a7",
                  "parentUUID": "d624f20a-efa7-4f18-9fb3-da45c14c16e7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Assigned Tempale should not be delete",
                  "fullTitle": "Manage User functionality test Delete TemPlate functionality Assigned Tempale should not be delete",
                  "timedOut": null,
                  "duration": 7944,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.visit(`${Cypress.env(\"url\")}/profile?tab=manageTemplate`);\ncy.wait(\"@templateGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const assignedTemplate = response.body.result.values.filter(ele => ele.assignedTo.length > 0);\n  if (assignedTemplate.length > 0) {\n    cyGet(`[data-testid=\"templatelist-textfield-e9dj43sha\"] input`).type(assignedTemplate[0].label);\n    cy.contains('tr', assignedTemplate[0].label).find(`[data-testid=\"Action\"]`).click();\n    cy.get(\"#delete\").should(\"have.attr\", \"aria-disabled\", \"true\");\n  } else {\n    cy.log(`Teplate not available for delete`);\n  }\n});",
                  "err": {},
                  "uuid": "887e9613-4ce1-49cf-bf52-3ec549abca19",
                  "parentUUID": "d624f20a-efa7-4f18-9fb3-da45c14c16e7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "06dc0323-9cdc-4f82-8506-ab93560798a7",
                "887e9613-4ce1-49cf-bf52-3ec549abca19"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16007,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [
            "b2cb609d-1933-4db5-a68a-c08abf2780b0"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e321cd6a-6cd1-4f28-85c5-5b67ef4f9c13",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\manageUser.js",
      "file": "cypress\\e2e\\one\\myAccount\\manageUser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "05a6dccb-1f94-449e-a1ff-41516946360f",
          "title": "search User functionality test",
          "fullFile": "cypress\\e2e\\one\\myAccount\\manageUser.js",
          "file": "cypress\\e2e\\one\\myAccount\\manageUser.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Search user by search user functionality on second page",
              "fullTitle": "search User functionality test Search user by search user functionality on second page",
              "timedOut": null,
              "duration": 7550,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@userList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const userName = response.body.result.values.filter(ele => ele.status > 0);\n  const user = userName.slice(-1)[0];\n  cy.get('[placeholder=\"search....\"]').type(user.label);\n  cy.wait(\"@userList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    expect(response.body.result.values[0]).has.property(\"label\", user.label);\n  });\n});",
              "err": {},
              "uuid": "7d317c40-8d96-4f80-bf02-6289ad8444a4",
              "parentUUID": "05a6dccb-1f94-449e-a1ff-41516946360f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d317c40-8d96-4f80-bf02-6289ad8444a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7550,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "79eae2b7-6725-44e1-904f-d5dff3e22479",
      "title": "",
      "fullFile": "cypress\\e2e\\one\\myAccount\\profile.js",
      "file": "cypress\\e2e\\one\\myAccount\\profile.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "595f497e-f537-4185-a436-e673fe0306fc",
          "title": "Verify My Profile Page",
          "fullFile": "cypress\\e2e\\one\\myAccount\\profile.js",
          "file": "cypress\\e2e\\one\\myAccount\\profile.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update user name and verify with profile",
              "fullTitle": "Verify My Profile Page Update user name and verify with profile",
              "timedOut": null,
              "duration": 10348,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const UpdatedUsername = faker.person.fullName();\ncyGet(\"#name-label\").should(\"have.text\", \"Name *\");\ncyGet('input#name').should(\"have.attr\", \"required\");\ncyGet('input#name').clear().type(UpdatedUsername);\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\ncy.reload();\ncy.wait(500);\ncy.contains(`${UpdatedUsername}'s Profile`).should('be.visible');",
              "err": {},
              "uuid": "a98d9950-ca8a-4898-b9a7-0845a760021c",
              "parentUUID": "595f497e-f537-4185-a436-e673fe0306fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User name should be required",
              "fullTitle": "Verify My Profile Page User name should be required",
              "timedOut": null,
              "duration": 1918,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('input[placeholder=\"Name\"]').clear();\ncy.get('#name-helper-text').should('have.text', \"Field is required!\");",
              "err": {},
              "uuid": "16c6ff1c-f4f6-41fc-902c-1b19cb75ec68",
              "parentUUID": "595f497e-f537-4185-a436-e673fe0306fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify email Address",
              "fullTitle": "Verify My Profile Page Verify email Address",
              "timedOut": null,
              "duration": 1952,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.componentLabel('#email-label', \"Email address\", \"input\").should(\"have.value\", Cypress.env(\"email\"));",
              "err": {},
              "uuid": "31401cb5-7ebe-4fa2-910d-e1f947fb76eb",
              "parentUUID": "595f497e-f537-4185-a436-e673fe0306fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Mobile number",
              "fullTitle": "Verify My Profile Page Update Mobile number",
              "timedOut": null,
              "duration": 3421,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#mobile-label').should(\"have.text\", \"Mobile number *\");\n// cy.get('#mobile').should(\"have.attr\", \"required\");\ncy.get('#mobile').clear().type(faker.string.numeric(10));\ncy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");",
              "err": {},
              "uuid": "2796efe7-0723-4ac5-bf82-c6500e376ae0",
              "parentUUID": "595f497e-f537-4185-a436-e673fe0306fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Mobile number should be in mobile number format",
              "fullTitle": "Verify My Profile Page Mobile number should be in mobile number format",
              "timedOut": null,
              "duration": 3330,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#mobile').clear();\ncy.get('#mobile').type('wesfd');\ncy.get('#mobile-helper-text').should('have.text', \"Mobile number is not valid\");\ncy.get('.MuiSnackbarContent-message').should('have.text', \"Invalid mobile\");",
              "err": {},
              "uuid": "46a2d8b8-4a77-4e51-865b-771a90c89b76",
              "parentUUID": "595f497e-f537-4185-a436-e673fe0306fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify that total listed user is equal to Total users",
              "fullTitle": "Verify My Profile Page Verify that total listed user is equal to Total users",
              "timedOut": null,
              "duration": 2116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@usersList\").then(({\n  response\n}) => {\n  let totalCount = response.body.result.pages.totalRecords;\n  cy.get('[role=\"tabpanel\"] > :nth-child(1) > :nth-child(2) > :nth-child(1) > :nth-child(1) > :nth-child(2) ').contains(totalCount);\n});",
              "err": {},
              "uuid": "13e53eed-ca12-42a6-a424-74239177a9e3",
              "parentUUID": "595f497e-f537-4185-a436-e673fe0306fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a98d9950-ca8a-4898-b9a7-0845a760021c",
            "16c6ff1c-f4f6-41fc-902c-1b19cb75ec68",
            "31401cb5-7ebe-4fa2-910d-e1f947fb76eb",
            "2796efe7-0723-4ac5-bf82-c6500e376ae0",
            "46a2d8b8-4a77-4e51-865b-771a90c89b76",
            "13e53eed-ca12-42a6-a424-74239177a9e3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23085,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8f7d4db6-9cf6-450e-b689-168fb770a6cc",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f387958d-fce5-4fe8-9330-bc50bf373f51",
          "title": "Nevigate the setting page and create pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\1_create.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Pipeline name can't be blank",
              "fullTitle": "Nevigate the setting page and create pipeline Pipeline name can't be blank",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\nbutextField(pipelineSel.piptextfield, \"input\").click();\ncy.get('.MuiFormHelperText-root').should(\"contain\", `${messages.blankPip}.`);\nbuButton(globalSel.savetestid).should(\"be.disabled\").click({\n  force: true\n});\ncy.get('.MuiTooltip-tooltip').should(\"contain\", `${messages.blankPip}.`);",
              "err": {},
              "uuid": "2979953e-54a1-4a93-92be-495433fcd600",
              "parentUUID": "f387958d-fce5-4fe8-9330-bc50bf373f51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline already exist ",
              "fullTitle": "Nevigate the setting page and create pipeline Pipeline already exist ",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let piplabel = response.body.result.values[0].label;\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\n  butextField(pipelineSel.piptextfield, \"input\").type(piplabel);\n});\ncy.get('.MuiFormHelperText-root').should(\"have.text\", messages.existsPip);\nbuButton(globalSel.savetestid).should(\"be.disabled\").click({\n  force: true\n});\ncy.get('.MuiTooltip-tooltip').should(\"contain\", messages.existsPip);",
              "err": {},
              "uuid": "f211d7ab-974c-419d-8c50-d59026ad3255",
              "parentUUID": "f387958d-fce5-4fe8-9330-bc50bf373f51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add new pipeline",
              "fullTitle": "Nevigate the setting page and create pipeline Add new pipeline",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.create, messages.newPip);\nbutextField(pipelineSel.piptextfield, \"input\").type(`${faker.commerce.product()}-${new Date().valueOf()}`);\nbuButton(globalSel.savetestid).should(\"not.be.disabled\").click();",
              "err": {},
              "uuid": "94190b80-22da-4c90-8454-b64f1c2b3b72",
              "parentUUID": "f387958d-fce5-4fe8-9330-bc50bf373f51",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should pipeline selectable",
              "fullTitle": "Nevigate the setting page and create pipeline Should pipeline selectable",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let pipelines = response.body.result.values;\n  let lastPip = pipelines[pipelines.length - 1].label;\n  // cy.log(`Total Pipelines: ${pipelines.length}`);\n  // cy.log(`Last Item: ${lastPip}`);\n  if (pipelines.length > 5) {\n    cy.get('[data-testid=\"pipeline-box-hlum28yao\"] > [data-testid=\"budropdown-box-ty1opau5a\"] > [data-testid=\"button-box-72cmtvy8r\"] > .MuiButtonBase-root > .MuiButton-icon > [data-testid=\"button-stack-alorzfaoj\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"]').click();\n    cy.get('[data-testid=\"searchbox-textfield-8k19ikenc\"]').type(lastPip);\n  } else {\n    cy.get('[data-testid=\"pipeline-box-hlum28yao\"] > [data-testid=\"budropdown-box-ty1opau5a\"] > [data-testid=\"button-box-72cmtvy8r\"] > .MuiButtonBase-root > .MuiButton-icon > [data-testid=\"button-stack-alorzfaoj\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"]').click();\n    cy.contains(lastPip).click();\n  }\n});",
              "err": {},
              "uuid": "643cd2c2-6b54-47ba-8850-e503c44837cb",
              "parentUUID": "f387958d-fce5-4fe8-9330-bc50bf373f51",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "2979953e-54a1-4a93-92be-495433fcd600",
            "f211d7ab-974c-419d-8c50-d59026ad3255",
            "94190b80-22da-4c90-8454-b64f1c2b3b72",
            "643cd2c2-6b54-47ba-8850-e503c44837cb"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "82c07b55-4914-4e1d-a89e-ec4d219c0657",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ee740043-7c78-4ddb-af49-bd72071216c6",
          "title": "Nevigate the setting page and rename pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\2_rename.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Rename pipeline",
              "fullTitle": "Nevigate the setting page and rename pipeline Rename pipeline",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "let editedPIpLabel = `${faker.commerce.product()}-${new Date().valueOf()}`;\ncy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  cy.get(\"#customized-dialog-title p\").should(\"have.text\", messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"label\").should(\"have.text\", messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").should(\"have.value\", pipLabel[0]);\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.existsPip1);\n  buButton(globalSel.renametestid).should(\"be.disabled\");\n  // Rename the pipeline name\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear().type(editedPIpLabel);\n  buButton(globalSel.renametestid).click();\n  cy.get('.MuiSnackbarContent-message').should(\"have.text\", messages.updated);\n});",
              "err": {},
              "uuid": "7989353e-a2ef-40a1-8319-53a9eb582718",
              "parentUUID": "ee740043-7c78-4ddb-af49-bd72071216c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline already exist",
              "fullTitle": "Nevigate the setting page and rename pipeline Pipeline already exist",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear().type(pipLabel[1]);\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.existsPip1);\n  buButton(globalSel.renametestid).should(\"be.disabled\").and(\"have.text\", \"Rename\");\n});",
              "err": {},
              "uuid": "b9d46487-e712-4c39-a0b0-718fd2d85176",
              "parentUUID": "ee740043-7c78-4ddb-af49-bd72071216c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline name cant't be blank",
              "fullTitle": "Nevigate the setting page and rename pipeline Pipeline name cant't be blank",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipLabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipLabel[0]);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.rename, messages.renamePip);\n  butextField(pipelineSel.renamepiptextfield, \"input\").clear();\n  cy.get(globalSel.helpertext).should(\"have.text\", messages.blankPip);\n  buButton(globalSel.renametestid).should(\"be.disabled\").and(\"have.text\", \"Rename\");\n});",
              "err": {},
              "uuid": "72457e2d-3ac4-4987-a816-9c5f6901d993",
              "parentUUID": "ee740043-7c78-4ddb-af49-bd72071216c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "7989353e-a2ef-40a1-8319-53a9eb582718",
            "b9d46487-e712-4c39-a0b0-718fd2d85176",
            "72457e2d-3ac4-4987-a816-9c5f6901d993"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bbf489d7-e0fd-4384-9a13-ce2a7d0af7a5",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "23fefd70-a0d1-4643-8ad8-b04cd02fdb84",
          "title": "Navigate the setting page and reorder pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\3_reorder.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reorder pipeline",
              "fullTitle": "Navigate the setting page and reorder pipeline Reorder pipeline",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const movements = 1;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\n// cy.get(\"#app-routes p\").contains(\"leads\")\n// cy.get('.MuiTypography-caption').contains(\"You can Create/ Rename/ Delete Pipeline for lead only.\")\ncy.wait(1000);\nbusimpledropdown(pipelineSel.options, messages.pipAction, globalSel.reorder, messages.reorderPip);\n// cy.get('.MuiPaper-root > :nth-child(2) > div > .MuiButtonBase-root').should(\"have.text\", \"Options\").click()\n// cy.get(\"#reorder\").click()\n// get the pipeline-id using intercept and wait method\ncy.wait(\"@getPipeline\").then(({\n  response\n}) => {\n  let pipId = response.body.result.values.map(ele => ele.id);\n  cy.get(`[data-rbd-draggable-id=${pipId[0]}]`).as('item');\n  cy.get('@item').invoke('attr', 'data-rbd-drag-handle-draggable-id').as('item-id');\n  cy.get('@item').invoke('attr', 'tabindex').as('item-index').should('equal', '0');\n  // lift the element\n  cy.get('@item').focus().trigger('keydown', {\n    keyCode: 32\n  }).get('@item'); // need to re-query for a clone\n  cy.wrap(Array.from({\n    length: movements\n  })).each(() => {\n    cy.get('@item').trigger('keydown', {\n      keyCode: 40,\n      force: true\n    }).wait(1000);\n  });\n  // drop an element\n  cy.get('@item').trigger('keydown', {\n    keyCode: 32,\n    force: true\n  });\n  cy.get('@item-id').then(() => {\n    cy.get(`[data-rbd-draggable-id=${pipId[0]}]`).invoke('attr', 'tabindex');\n  });\n  // cy.get('#cancel').should(\"have.text\", \"Cancel\")\n  // cy.get(\"#save\").click()\n  buButton(globalSel.canceltestid).should(\"have.text\", \"Cancel\");\n  buButton(globalSel.savetestid).should(\"have.text\", \"Save\").click({\n    force: true\n  });\n});",
              "err": {},
              "uuid": "7686c25d-4b78-4d7a-b66b-b5025b59605a",
              "parentUUID": "23fefd70-a0d1-4643-8ad8-b04cd02fdb84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "7686c25d-4b78-4d7a-b66b-b5025b59605a"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "156f03b7-f984-41d2-b0c4-e6f97723e72e",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3635f3aa-e904-401d-af6b-41010ce6148e",
          "title": "Stage functionality test for pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\4_stage.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add new stage",
              "fullTitle": "Stage functionality test for pipeline Add new stage",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\nonesecondWait();\nbuButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\ncyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).type(stageName);\nonesecondWait();\nbuSaveButton().should(\"have.text\", \"Save\").click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);",
              "err": {},
              "uuid": "9bf9ad50-9aa8-44b0-b496-f2d668fe8702",
              "parentUUID": "3635f3aa-e904-401d-af6b-41010ce6148e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage can't be empty.",
              "fullTitle": "Stage functionality test for pipeline Stage can't be empty.",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "buButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\nbuSaveButton().should(\"be.disabled\").trigger(\"mouseover\", {\n  force: true\n});\ncyGet(globalSel.tooltip).invoke('text').should('include', \"Stage can't be empty.\");",
              "err": {},
              "uuid": "a5da808e-7ce0-4729-8b9a-849f6002531b",
              "parentUUID": "3635f3aa-e904-401d-af6b-41010ce6148e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage can't be duplicate.",
              "fullTitle": "Stage functionality test for pipeline Stage can't be duplicate.",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "buButton(`[data-testid=\"Add a ${asset} Stage\"]`).should(\"have.text\", `Add a ${asset} Stage`).click();\ncy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stageName = response.body.result.values.map(ele => ele.label);\n  cyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).click().type(stageName[0]);\n});\nbuSaveButton().should(\"be.disabled\").trigger(\"mouseover\", {\n  force: true\n});\ncyGet(globalSel.tooltip).invoke('text').should('include', \"Duplicate stage name.\");",
              "err": {},
              "uuid": "7a91b58b-3a70-4c36-881a-cc2a06d3d3f7",
              "parentUUID": "3635f3aa-e904-401d-af6b-41010ce6148e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "edit stage",
              "fullTitle": "Stage functionality test for pipeline edit stage",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\ncyGet(`${globalSel.inputItemtextfield} input`).last().clear();\ncyGet(`${globalSel.inputItemtextfield} input`).last().type(stageName);\nbuSaveButton().should(\"have.text\", \"Save\").click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);",
              "err": {},
              "uuid": "868e80f9-4b53-4530-9edc-56299cb9885a",
              "parentUUID": "3635f3aa-e904-401d-af6b-41010ce6148e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete stage",
              "fullTitle": "Stage functionality test for pipeline delete stage",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "let stageName = `${faker.commerce.productName()}-${new Date().valueOf()}`;\nconst msg2 = \"Are you sure! Want to delete this Stage?\";\nbuButton(`[data-testid=\"Add a ${asset} Stage\"]`).click();\ncyGet(`${globalSel.inputItemtextfield}`).find(`input[value='']`).click().type(stageName);\nbuSaveButton().should(\"have.text\", \"Save\").click();\nonesecondWait();\ncyGet(`${pipelineSel.stageDelIconBtn}`).last().click();\nbuCaption(globalSel.dialogTitle, globalSel.dialogTitleText, \"Delete Stage\", pipelineSel.deletestagecaption, msg2);\nbuButton(`[data-testid=\"Delete Stage\"]`).click();",
              "err": {},
              "uuid": "978c881e-c058-4469-b6f7-6d16226bcfe3",
              "parentUUID": "3635f3aa-e904-401d-af6b-41010ce6148e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Stage should not be deleted which contains record",
              "fullTitle": "Stage functionality test for pipeline Stage should not be deleted which contains record",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stageWithCount = response.body.result.values.find(ele => ele.count > 0 && ele.winChance != \"Won\");\n  if (!stageWithCount) {\n    this.skip();\n  }\n  const msg2 = `You need to move ${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.count} ${asset} to delete this stage.`;\n  cyGet(`[data-rbd-draggable-id=\"${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.id}\"] ${pipelineSel.stageDelIconBtn}`).click({\n    force: true\n  });\n  buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, delNmvStg, pipelineSel.deletestageConfirmatiion, msg2);\n  budropdown(globalSel.dialogContent, globalSel.fieldlabelBox, fieldLabel);\n  budropdownInput(`[data-testid=\"input-muiinput-t8mkcx347\"] input`, stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label);\n  buButton(`[data-testid=\"Move ${asset} and delete Stage\"]`).should(\"be.disabled\");\n});",
              "err": {},
              "uuid": "ef5a333b-0851-4d89-a03a-5896c741d196",
              "parentUUID": "3635f3aa-e904-401d-af6b-41010ce6148e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "move record and delete stage",
              "fullTitle": "Stage functionality test for pipeline move record and delete stage",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@getStage\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const values = response.body.result.values;\n  const length = values.length;\n  const stageWithCount = values.find(ele => ele.count > 0 && ele.winChance != \"Won\");\n  const msg2 = `You need to move ${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.count} ${asset} to delete this stage.`;\n  const moveRecordStage = values.find(ele => ele.label != (stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label) && ele.winChance != \"Won\");\n  const searchSelecor = `${globalSel.searchbox} ${globalSel.searchplaceholder}`;\n  if (!stageWithCount) {\n    this.skip();\n  }\n  cyGet(`[data-rbd-draggable-id=\"${stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.id}\"] ${pipelineSel.stageDelIconBtn}`).click({\n    force: true\n  });\n  buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, delNmvStg, pipelineSel.deletestageConfirmatiion, msg2);\n  budropdownInput(`[data-testid=\"input-muiinput-t8mkcx347\"] input`, stageWithCount === null || stageWithCount === void 0 ? void 0 : stageWithCount.label, length, searchSelecor, moveRecordStage === null || moveRecordStage === void 0 ? void 0 : moveRecordStage.label, globalSel.dialogTitleText);\n  buButton(`[data-testid=\"Move ${asset} and delete Stage\"]`).click();\n});",
              "err": {},
              "uuid": "c4fa7a4b-d5c4-4ac9-9022-96aca3e2f3a3",
              "parentUUID": "3635f3aa-e904-401d-af6b-41010ce6148e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "9bf9ad50-9aa8-44b0-b496-f2d668fe8702",
            "a5da808e-7ce0-4729-8b9a-849f6002531b",
            "7a91b58b-3a70-4c36-881a-cc2a06d3d3f7",
            "868e80f9-4b53-4530-9edc-56299cb9885a",
            "978c881e-c058-4469-b6f7-6d16226bcfe3",
            "ef5a333b-0851-4d89-a03a-5896c741d196",
            "c4fa7a4b-d5c4-4ac9-9022-96aca3e2f3a3"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ebe771c4-5a8c-499b-ad38-493af68533f6",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "83b2ed2d-3e0c-43db-8573-2d1b8c0364d9",
          "title": "Navigate the setting page and reorder stage",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\5_stageReoder.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reorder stage",
              "fullTitle": "Navigate the setting page and reorder stage Reorder stage",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const movements = 1;\nconst subHeadingText = `You can Create/ Rename/ Delete Pipeline for ${asset} only.`;\nbuCaption(pipelineSel.captionbox, pipelineSel.captionHeading, `${asset}s`, pipelineSel.captionSubHeading, subHeadingText);\ncy.wait(\"@getStage\").then(({\n  response\n}) => {\n  const stageId = response.body.result.values.map(ele => ele.id);\n  expect(response.body.result.values).to.be.length.greaterThan(1);\n  if (stageId.length > 1) {\n    cyGet(`[data-rbd-draggable-id=${stageId[0]}]`).as('item');\n    cy.get('@item').invoke('attr', 'data-rbd-drag-handle-draggable-id').as('item-id');\n    cy.get('@item').invoke('attr', 'tabindex').as('item-index').should('equal', '0');\n    // lift the element\n    cy.get('@item').focus().trigger('keydown', {\n      keyCode: 32,\n      position: \"left\"\n    }).get('@item'); // need to re-query for a clone\n    cy.wrap(Array.from({\n      length: movements\n    })).each(() => {\n      cy.get('@item').trigger('keydown', {\n        keyCode: 40,\n        force: true\n      }).wait(1000);\n    });\n    // drop an element\n    cy.get('@item').trigger('keydown', {\n      keyCode: 32,\n      force: true\n    });\n    cy.get('@item-id').then(() => {\n      cyGet(`[data-rbd-draggable-id=${stageId[0]}]`).invoke('attr', 'tabindex');\n    });\n    buSaveButton().should(\"have.text\", \"Save\").click();\n    cyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.requestSuccess);\n  } else {\n    cy.log(`Stage must be more than 1 but stage found: ${stageId.length}`);\n  }\n});",
              "err": {},
              "uuid": "700ec29a-bb12-48be-b92d-294b04ccd112",
              "parentUUID": "83b2ed2d-3e0c-43db-8573-2d1b8c0364d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "700ec29a-bb12-48be-b92d-294b04ccd112"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1fb53c99-6c01-437b-b5d7-08084bb8c1cd",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
      "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c0a07c35-ed05-4977-830e-81d879d1c2c6",
          "title": "Nevigate the setting page and delete pipeline",
          "fullFile": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
          "file": "cypress\\e2e\\lms\\setting\\1_pipeline\\9_delete.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete pipeline",
              "fullTitle": "Nevigate the setting page and delete pipeline Delete pipeline",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.pipelineData(module, asset).then(pipData => {\n  pipelineData = pipData;\n  const piplabel = pipelineData.map(ele => ele.label);\n  let msg1 = \"Delete Pipeline Confirmation\";\n  if (pipelineData.length == 1) {\n    busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    buButton(globalSel.deltestid).click();\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Last pipeline can't be deleted\");\n  } else {\n    const piplength = pipelineData.length;\n    const countZeroPip = pipelineData.find(ele => ele.count === 0);\n    if (!countZeroPip) {\n      cy.log(\"Pipeline not found for delete\");\n    }\n    let msg2 = `You are about to delete the project titled ${countZeroPip === null || countZeroPip === void 0 ? void 0 : countZeroPip.label}.`;\n    budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, piplabel[0], piplength, globalSel.search, countZeroPip === null || countZeroPip === void 0 ? void 0 : countZeroPip.label, globalSel.dialogTitleText);\n    busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    buButton(globalSel.deltestid).click();\n  }\n  ;\n});",
              "err": {},
              "uuid": "04082a39-c672-4f23-96b9-d2ceb1a538b0",
              "parentUUID": "c0a07c35-ed05-4977-830e-81d879d1c2c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pipeline should not delete which contains record",
              "fullTitle": "Nevigate the setting page and delete pipeline Pipeline should not delete which contains record",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "const pipcontainRecord = pipelineData.find(ele => ele.count > 0);\nif (pipelineData.length === 1) {\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n  buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n  buButton(globalSel.deltestid).click();\n  cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Last pipeline can't be deleted\");\n} else {\n  budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, pipcontainRecord === null || pipcontainRecord === void 0 ? void 0 : pipcontainRecord.label, pipelineData.length, globalSel.search, pipcontainRecord === null || pipcontainRecord === void 0 ? void 0 : pipcontainRecord.label, globalSel.dialogTitleText);\n  busimpledropdown(pipelineSel.options, messages.pipAction, globalSel.del, messages.deletePip);\n  buButton(globalSel.del).should(\"have.attr\", \"aria-disabled\", \"true\").trigger(\"mouseover\", {\n    force: true\n  });\n  cy.get('.MuiTooltip-tooltip').should(\"have.text\", \"Pipeline contains lead\");\n}\n;",
              "err": {},
              "uuid": "f92831fa-4146-406f-b9c8-b9db0b31b5ec",
              "parentUUID": "c0a07c35-ed05-4977-830e-81d879d1c2c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "04082a39-c672-4f23-96b9-d2ceb1a538b0",
            "f92831fa-4146-406f-b9c8-b9db0b31b5ec"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "163a93ca-da95-424d-b5ca-ec558aa55431",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0445f35a-f6f9-4d17-ac07-78591d2bb0d3",
          "title": "Nevigate the setting page and create and update association fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\ascFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create association field",
              "fullTitle": "Nevigate the setting page and create and update association fields Create association field",
              "timedOut": null,
              "duration": 15684,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(_fieldSel.default.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Association\", _globalSel.default.dialogTitleText);\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Group\");\ncyGet(`${_globalSel.default.muiInput} input[name=\"Select Group\"]`).should('be.disabled').and('have.value', \"System Fields\");\ncy.wait(\"@assetsPipeline\");\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  const apiLength = response.body.result.values.length;\n  const assetsPip = response.body.result.values.find(ele => ele.disable != true);\n  cyGet(`${_globalSel.default.withtitleinputlabel}`).contains(\"Select Asset\");\n  budropdown(_globalSel.default.dialogContent, `button ${_globalSel.default.buttonTypography}`, assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label, apiLength, _globalSel.default.search, assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label, _globalSel.default.dialogTitleText);\n  ascInput(`${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n  (0, _field.headingNsubheading)();\n  buradio(\"Single-selection\");\n  cyGet(`[data-testid=\"avatarinput-textfield-ojwxr8kdk\"] label`).contains(`${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n  cyGet(`[data-testid=\"avatarinput-textfield-ojwxr8kdk\"] input`).should(\"have.attr\", \"placeholder\", `Select ${assetsPip === null || assetsPip === void 0 ? void 0 : assetsPip.label} Association`);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "336fb372-f52d-49fb-aead-8a3a0d73a226",
              "parentUUID": "0445f35a-f6f9-4d17-ac07-78591d2bb0d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify dissabled aaset",
              "fullTitle": "Nevigate the setting page and create and update association fields Verify dissabled aaset",
              "timedOut": null,
              "duration": 4268,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "buButton(_fieldSel.default.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${_fieldSel.default.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Association\", _globalSel.default.dialogTitleText);\ncy.wait(\"@assetsPipeline\");\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  const apiLength = response.body.result.values.length;\n  const assetspipLabels = response.body.result.values.map(ele => ele.label);\n  const disableassetsPip = response.body.result.values.find(ele => ele.disable === true);\n  const availablePip = response.body.result.values.find(ele => ele.disable !== true);\n  if (disableassetsPip) {\n    var _availablePip$label;\n    const assetDropdownContain = (_availablePip$label = availablePip.label) !== null && _availablePip$label !== void 0 ? _availablePip$label : `Select`;\n    budropdown(_globalSel.default.dialogContent, `button ${_globalSel.default.buttonTypography}`, assetDropdownContain);\n    if (apiLength > 5) buSearchbox(_globalSel.default.search, disableassetsPip === null || disableassetsPip === void 0 ? void 0 : disableassetsPip.label);\n    budropdownOption(disableassetsPip === null || disableassetsPip === void 0 ? void 0 : disableassetsPip.label, `[data-testid=\"virtuallist-listitembutton-w6znzg16f\"]`)\n    // .find(`[data-testid=\"virtuallist-listitembutton-w6znzg16f\"]`)\n    .should('have.attr', 'aria-disabled', 'true');\n  } else {\n    cy.log(\"Association field not available in bin\");\n  }\n});",
              "err": {},
              "uuid": "6891079c-cb39-4cb2-970d-19deb0443ec7",
              "parentUUID": "0445f35a-f6f9-4d17-ac07-78591d2bb0d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit association field",
              "fullTitle": "Nevigate the setting page and create and update association fields Edit association field",
              "timedOut": null,
              "duration": 5855,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const totalPages = response.body.result.pages.totalNoOfPages;\n  const handleAscField = fieldData => {\n    const ascField = fieldData.values.find(ele => ele.prop === \"asc\");\n    cy.intercept(method.get, `**/fms/fields/${ascField.id}?*`).as(\"fieldDetail\");\n    (0, _field.searchNactionField)(ascField.label, _globalSel.default.edit, \"Edit\");\n    ascInput(ascField.label);\n    cy.wait(\"@fieldDetail\").then(({\n      response\n    }) => {\n      if (response.body.result.selection === \"multi\") {\n        (0, _utility.editMultiSelectionField)();\n      } else {\n        (0, _utility.editSingleSelectionField)();\n      }\n    });\n  };\n  if (totalPages === 1) {\n    handleAscField(response.body.result);\n  } else {\n    cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click();\n    cy.wait(\"@fieldGrid\").then(({\n      response\n    }) => {\n      handleAscField(response.body.result);\n    });\n  }\n});\nbuSaveButton().click();\ncyGet(_globalSel.default.SnackbarMessage).invoke('text').should('include', _messages.default.updated);",
              "err": {},
              "uuid": "6a966c49-b544-419a-b52f-bbac6893a047",
              "parentUUID": "0445f35a-f6f9-4d17-ac07-78591d2bb0d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "336fb372-f52d-49fb-aead-8a3a0d73a226",
            "6891079c-cb39-4cb2-970d-19deb0443ec7",
            "6a966c49-b544-419a-b52f-bbac6893a047"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25807,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a5f4544e-505c-4903-869d-6b4b88e60227",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ec401269-adf0-4f80-bae7-696c9af4bcfb",
          "title": "Nevigate the setting page and create and update association fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\attachField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach Field",
              "fullTitle": "Nevigate the setting page and create and update association fields Attach Field",
              "timedOut": null,
              "duration": 9427,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"Attach field\"]').click();\ncy.wait(\"@availableFiels\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cy.log(JSON.stringify(response));\n  const availablefieldLabel = response.body.result.values.map(ele => ele.label);\n  buSearchbox(`${fieldSel.attachfieldstextfield} ${globalSel.searchplaceholder}`, availablefieldLabel[0]);\n  cyGet(`[data-testid=\"propertylist-formcontrollabel-z6t5ag0ev\"] input[type=\"checkbox\"]`).first().click();\n  cyGet(`[data-testid=\"propertylist-formcontrollabel-z6t5ag0ev\"] [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`).contains(availablefieldLabel[0]);\n  buButton('[data-testid=\"Attach\"]').click();\n  onesecondWait();\n  buSearchbox(`${fieldSel.searchBoxfieldGrid} ${globalSel.searchplaceholder}`, availablefieldLabel[0]);\n  cyGet(`table tbody tr [aria-label=\"${availablefieldLabel[0]}\"]`).contains(availablefieldLabel[0]);\n});",
              "err": {},
              "uuid": "ee0d2b0e-e9c9-461e-ba16-228b7adc5492",
              "parentUUID": "ec401269-adf0-4f80-bae7-696c9af4bcfb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ee0d2b0e-e9c9-461e-ba16-228b7adc5492"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9427,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "418239b0-118a-46ac-b924-1e9d497127f1",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0b88306d-7ffb-4e78-9746-8990dc07e6fb",
          "title": "Nevigate the setting page and verify the field components",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\components.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify and select Asset Pipeline",
              "fullTitle": "Nevigate the setting page and verify the field components Verify and select Asset Pipeline",
              "timedOut": null,
              "duration": 6823,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const moduleName = module.toUpperCase();\nconst subHeadingText = `Fields store information about ${moduleName}`;\nbuCaption(globalSel.settinglayoutbox, fieldSel.captionHeading, \"Fields\", fieldSel.captionSubHeading, subHeadingText);\ncyGet('[data-testid=\"properties-typography-ug3bego54\"]').contains(\"Select Asset\");\ncy.wait(\"@assetPipeline\").then(({\n  response\n}) => {\n  let piplabel = response.body.result.values.map(ele => ele.label);\n  budropdown(globalSel.settinglayoutbox, `${globalSel.buttonBox} button`, piplabel[0]);\n  budropdownOption(piplabel[1]).contains(piplabel[1]).click();\n  budropdown(globalSel.settinglayoutbox, `${globalSel.buttonBox} button`, piplabel[1]);\n});\ncyGet('#simple-tab-0 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"All fields\");\ncyGet('#simple-tab-1 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"Groups\");\ncyGet('#simple-tab-2 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"Deleted fields\");",
              "err": {},
              "uuid": "d74b9094-6faf-491d-b65e-b109adfbeac4",
              "parentUUID": "0b88306d-7ffb-4e78-9746-8990dc07e6fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the group filter is working as expected",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the group filter is working as expected",
              "timedOut": null,
              "duration": 10046,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "recordCountOnPage(\"5\");\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All groups\");\ncy.wait(1000);\ncy.wait(\"@groupList\").then(({\n  response\n}) => {\n  let groupLabel = response.body.result.values.map(ele => ele.label);\n  budropdownOption(groupLabel[0]).should('be.visible').contains(groupLabel[0]).click();\n  cy.wait(1000);\n  cyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(3)\").each($row => {\n    cy.wrap($row).contains(groupLabel[0]);\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 4000ms: `cy.contains()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.contains()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom",
                "estack": "CypressError: Timed out retrying after 4000ms: `cy.contains()` failed because the page updated as a result of this command, but you tried to continue the command chain. The subject is no longer attached to the DOM, and Cypress cannot requery the page after commands such as `cy.contains()`.\n\nCommon situations why this happens:\n  - Your JS framework re-rendered asynchronously\n  - Your app code reacted to an event firing and removed the element\n\nYou can typically solve this by breaking up a chain. For example, rewrite:\n\n> `cy.get('button').click().should('have.class', 'active')`\n\nto\n\n> `cy.get('button').as('btn').click()`\n> `cy.get('@btn').should('have.class', 'active')`\n\nhttps://on.cypress.io/element-has-detached-from-dom\n    at isAttached (https://api.butest.tech/__cypress/runner/cypress_runner.js:145335:58)\n    at validateType (https://api.butest.tech/__cypress/runner/cypress_runner.js:145205:9)\n    at Object.isType (https://api.butest.tech/__cypress/runner/cypress_runner.js:145240:7)\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:132450:22)\n    at Object.subjectFn (https://api.butest.tech/__cypress/runner/cypress_runner.js:144224:16)\n    at $Cy.verifyUpcomingAssertions (https://api.butest.tech/__cypress/runner/cypress_runner.js:143563:31)\n    at onRetry (https://api.butest.tech/__cypress/runner/cypress_runner.js:144215:15)\n    at tryCatcher (https://api.butest.tech/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (https://api.butest.tech/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (https://api.butest.tech/__cypress/runner/cypress_runner.js:144102:68)\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:144043:14)\n    at tryCatcher (https://api.butest.tech/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://api.butest.tech/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://api.butest.tech/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://api.butest.tech/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://api.butest.tech/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (https://api.butest.tech/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/2_manageField/components.js:56:30)",
                "diff": null
              },
              "uuid": "aad39df5-b0c3-417b-af80-4f9f55af971c",
              "parentUUID": "0b88306d-7ffb-4e78-9746-8990dc07e6fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the field type filter should contains all field type",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the field type filter should contains all field type",
              "timedOut": null,
              "duration": 34942,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "budropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\nfieldTypeFilterSel(\"Single line text\");\nfieldTypeFilterSel(\"Number\");\nfieldTypeFilterSel(\"Email\");\nfieldTypeFilterSel(\"URL\");\nfieldTypeFilterSel(\"Owner\");\nfieldTypeFilterSel(\"Created By\");\nfieldTypeFilterSel(\"Basic Dropdown\");\nfieldTypeFilterSel(\"Colored dropdown\");\nfieldTypeFilterSel(\"Date field\");\nfieldTypeFilterSel(\"Time field\");\nfieldTypeFilterSel(\"Date and time field\");\nfieldTypeFilterSel(\"Stage\");\nfieldTypeFilterSel(\"Attachment\");\nfieldTypeFilterSel(\"Address\");\nfieldTypeFilterSel(\"Image\");\nfieldTypeFilterSel(\"Multi line text\");\nfieldTypeFilterSel(\"Checkbox\");\nfieldTypeFilterSel(\"Radio\");\nfieldTypeFilterSel(\"Rating\");\nfieldTypeFilterSel(\"Formula\");\nfieldTypeFilterSel(\"Unique Id\");\nfieldTypeFilterSel(\"Custom form\");\nfieldTypeFilterSel(\"Data source\");",
              "err": {},
              "uuid": "cb57430d-dcfd-4155-803d-3e6e818fc53d",
              "parentUUID": "0b88306d-7ffb-4e78-9746-8990dc07e6fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the field type filter is working as expected",
              "fullTitle": "Nevigate the setting page and verify the field components Verify the field type filter is working as expected",
              "timedOut": null,
              "duration": 7420,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "recordCountOnPage(\"5\");\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\ncy.wait(1000);\nbudropdownOption(\"Single line text\").contains(\"Single line text\").click();\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"Single line text\");\ncy.wait(1000);\ncyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(2)\").each($row => {\n  cy.wrap($row).contains(\"Single line text\");\n});\ncy.wait(1000);",
              "err": {},
              "uuid": "3de2abd4-227b-46d3-99b8-551b357a5ad6",
              "parentUUID": "0b88306d-7ffb-4e78-9746-8990dc07e6fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate used count with API",
              "fullTitle": "Nevigate the setting page and verify the field components Validate used count with API",
              "timedOut": null,
              "duration": 4617,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-0 > [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').contains(\"All fields\").click();\nrecordCountOnPage(\"10\");\ncy.wait(\"@fieldGrid\");\ncy.wait(\"@fieldGrid\").then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.recordCount);\n  cyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(5)\").each(($row, index) => {\n    cy.wrap($row).contains(abc[index]);\n  });\n});",
              "err": {},
              "uuid": "cf56801a-88b1-4a25-a944-fea1352602f1",
              "parentUUID": "0b88306d-7ffb-4e78-9746-8990dc07e6fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate attached count with API",
              "fullTitle": "Nevigate the setting page and verify the field components Validate attached count with API",
              "timedOut": null,
              "duration": 3949,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#simple-tab-0 > .MuiTypography-root').contains(\"All fields\").click();\nrecordCountOnPage(\"10\");\ncy.wait(\"@fieldGrid\");\ncy.wait(\"@fieldGrid\").then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.attachedCount);\n  let counts = abc.map(fields => {\n    let count = fields.count;\n    return count;\n  });\n  cyGet('table > tbody >').children(\".MuiTableRow-root > :nth-child(6)\").each(($row, index) => {\n    cy.wrap($row).contains(counts[index]);\n  });\n});",
              "err": {},
              "uuid": "880b1356-e7d0-4d2b-bf9b-f2f1b7ec1243",
              "parentUUID": "0b88306d-7ffb-4e78-9746-8990dc07e6fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d74b9094-6faf-491d-b65e-b109adfbeac4",
            "cb57430d-dcfd-4155-803d-3e6e818fc53d",
            "3de2abd4-227b-46d3-99b8-551b357a5ad6",
            "cf56801a-88b1-4a25-a944-fea1352602f1",
            "880b1356-e7d0-4d2b-bf9b-f2f1b7ec1243"
          ],
          "failures": [
            "aad39df5-b0c3-417b-af80-4f9f55af971c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 67797,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bc29a357-74d1-4224-9f23-c1d6b17179a0",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dd12011a-8c98-4b6b-84b1-98f75478a02a",
          "title": "Navigate to setting page and create and update fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\createField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create URL field",
              "fullTitle": "Navigate to setting page and create and update fields Create URL field",
              "timedOut": null,
              "duration": 8096,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `URL-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"URL\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "bcc07439-d11b-47ae-97bf-38c3d962cd5d",
              "parentUUID": "dd12011a-8c98-4b6b-84b1-98f75478a02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit URL field",
              "fullTitle": "Navigate to setting page and create and update fields Edit URL field",
              "timedOut": null,
              "duration": 6077,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `URL-${new Date().valueOf()}`;\nsearchField(\"url\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);",
              "err": {},
              "uuid": "22a7a314-49f7-4b6f-b84f-409db914abcc",
              "parentUUID": "dd12011a-8c98-4b6b-84b1-98f75478a02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Mobile number field",
              "fullTitle": "Navigate to setting page and create and update fields Create Mobile number field",
              "timedOut": null,
              "duration": 14622,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Mobile-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Mobile number\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"none\", null, null, \"4-3-3\", globalSel.dialogTitleText);\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "19e4b1b7-567f-4b0c-97fe-def34c1b8416",
              "parentUUID": "dd12011a-8c98-4b6b-84b1-98f75478a02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get phn field details through interception for edit phn field",
              "fullTitle": "Navigate to setting page and create and update fields Get phn field details through interception for edit phn field",
              "timedOut": null,
              "duration": 4794,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "searchField(\"phn\", null, 'Edit').then(fieldData => {\n  cy.wrap(fieldData).as(\"fieldData\");\n});\ncy.get(\"@fieldData\").then(res => {\n  field = res;\n});",
              "err": {},
              "uuid": "bc3050c6-87ae-41bd-a7e6-a3e440ac6ba3",
              "parentUUID": "dd12011a-8c98-4b6b-84b1-98f75478a02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Mobile number field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Mobile number field",
              "timedOut": null,
              "duration": 5616,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Mobile-${new Date().valueOf()}`;\ncy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\nsearchField(\"phn\", field.label, 'Edit');\ncy.wait(\"@getFieldById\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const format = response.body.result.format;\n  labelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\n  budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, format, null, null, \"4-4-2\", globalSel.dialogTitleText);\n  preview(fieldLabel, `Enter ${fieldLabel}`);\n  buSaveButton().click();\n  cyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);\n});",
              "err": {},
              "uuid": "43dc2f7c-a363-40b1-8cd6-1561c99a53f1",
              "parentUUID": "dd12011a-8c98-4b6b-84b1-98f75478a02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Number field",
              "fullTitle": "Navigate to setting page and create and update fields Create Number field",
              "timedOut": null,
              "duration": 6404,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Number-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Number\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\n// budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"none\", null, null, \"4-3-3\", globalSel.dialogTitleText);\nbutextField(globalSel.butextfield, \"#min\").type(2);\nbutextField(globalSel.butextfield, \"#max\").type(1000);\nbutextField(globalSel.butextfield, \"#decimal\").type(3);\n// cy.componentLabel(lead.formLabel, \"Min Number\", \"input\").type(2)\n// cy.componentLabel(lead.formLabel, \"Max Number\", \"input\").type(10)\n// cy.componentLabel(lead.formLabel, \"Decimal Points\", \"input\").type(2)\ncyGet('[data-testid=\"withtitle-inputlabel-9rg7j5v06\"]').contains(\"Max-3\");\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "4db792d8-a422-42dc-a566-acbe30817389",
              "parentUUID": "dd12011a-8c98-4b6b-84b1-98f75478a02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Number field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Number field",
              "timedOut": null,
              "duration": 6563,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Number-${new Date().valueOf()}`;\nsearchField(\"num\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(globalSel.butextfield, \"#min\").clear().type(3);\nbutextField(globalSel.butextfield, \"#max\").clear().type(50000);\nbutextField(globalSel.butextfield, \"#decimal\").clear().type(2);\ncyGet('[data-testid=\"withtitle-inputlabel-9rg7j5v06\"]').contains(\"Max-3\");\npreview(fieldLabel, `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet(globalSel.SnackbarMessage).invoke('text').should('include', messages.updated);",
              "err": {},
              "uuid": "ce985b8e-0cbd-4672-adc7-a7608874ab69",
              "parentUUID": "dd12011a-8c98-4b6b-84b1-98f75478a02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create Rating field",
              "fullTitle": "Navigate to setting page and create and update fields Create Rating field",
              "timedOut": null,
              "duration": 4578,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Rating-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Rating\", globalSel.dialogTitleText);\n// labelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\ncy.get('[data-testid=\"ratingfield-typography-34xvi9zqr\"]').contains(\"Type\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"Star\");\ncy.get('[data-testid=\"ratingfield-typography-lms2xp00s\"]').contains(\"Max\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"5\");\ncy.get('[data-testid=\"burating-formlabel-pfw5vth6c\"]').contains(fieldLabel);\ncy.get('[data-testid=\"burating-styledrating-i1n90l9jw\"] > label').click({\n  multiple: true,\n  force: true\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "33f2ebea-de6d-4450-a81d-866ea600dfea",
              "parentUUID": "dd12011a-8c98-4b6b-84b1-98f75478a02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Rating field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Rating field",
              "timedOut": null,
              "duration": 5410,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Rating-${new Date().valueOf()}`;\nsearchField(\"rtg\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\ncy.get('[data-testid=\"ratingfield-typography-34xvi9zqr\"]').contains(\"Type\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"Star\");\ncy.get('[data-testid=\"ratingfield-typography-lms2xp00s\"]').contains(\"Max\").next().find('button').should(\"be.disabled\").find('[data-testid=\"button-typography-8x5inumxs\"]').should(\"have.text\", \"5\");\ncy.get('[data-testid=\"burating-formlabel-pfw5vth6c\"]').contains(fieldLabel);\ncy.get('[data-testid=\"burating-styledrating-i1n90l9jw\"] > label').click({\n  multiple: true,\n  force: true\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "b8cbabf9-b725-4c25-83c0-417c6a92a5e1",
              "parentUUID": "dd12011a-8c98-4b6b-84b1-98f75478a02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create checkbox field",
              "fullTitle": "Navigate to setting page and create and update fields Create checkbox field",
              "timedOut": null,
              "duration": 5284,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fieldLabel = `Checkbox-${Date.now()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(fieldSel.fieldlabelbox).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Checkbox\", globalSel.dialogTitleText);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\n[\"Option 2\", \"Option 3\"].forEach((optionText, index) => {\n  buButton(globalSel.typBtn).contains(\"Add option\").click();\n  butextField(fieldSel.fieldOptionTextfield, `input[value = \"${optionText}\"]`).should(\"have.value\", optionText);\n});\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(`[data-testid^=\"bucheckboxgroup-formlabel\"]`).contains(fieldLabel);\n[\"Option 1\", \"Option 2\", \"Option 3\"].forEach(optionText => {\n  cyGet(checkboxWrapper).contains(optionText).should(\"have.attr\", \"aria-label\", optionText);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "5a1e2efb-af41-4a53-944c-6a5d7f8c133d",
              "parentUUID": "dd12011a-8c98-4b6b-84b1-98f75478a02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit checkbox field",
              "fullTitle": "Navigate to setting page and create and update fields Edit checkbox field",
              "timedOut": null,
              "duration": 6968,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newLabel = `Checkbox-${Date.now()}`;\nconst newOption = `Option-${Date.now()}`;\nsearchField(\"chk\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(newLabel);\nbutextField(`${fieldSel.fieldOptionTextfield} :nth-child(1)`, `input`).first().clear().type(\"Edited Option 1\");\nbuButton(globalSel.typBtn).contains(\"Add option\").click();\ncy.get(fieldSel.fieldOptionTextfield).last().find(\"input\").clear().type(newOption);\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(checkboxWrapper).contains(\"Edited Option 1\").should(\"have.attr\", \"aria-label\", \"Edited Option 1\");\ncyGet(checkboxWrapper).contains(newOption).should(\"have.attr\", \"aria-label\", newOption);\nbuSaveButton().click();",
              "err": {},
              "uuid": "d1d860a5-1801-4012-b75d-c1e65c4d15fc",
              "parentUUID": "dd12011a-8c98-4b6b-84b1-98f75478a02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create radio field",
              "fullTitle": "Navigate to setting page and create and update fields Create radio field",
              "timedOut": null,
              "duration": 5315,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Radio-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Radio\", globalSel.dialogTitleText);\ncyGet(fieldSel.fieldlabelboxId).clear().type(fieldLabel);\n[\"Option 2\", \"Option 3\"].forEach((optionText, index) => {\n  buButton(globalSel.typBtn).contains(\"Add option\").click();\n  butextField(fieldSel.fieldOptionTextfield, `input[value = \"${optionText}\"]`).should(\"have.value\", optionText);\n});\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(`[data-testid^=\"bucheckboxgroup-formlabel\"]`).contains(fieldLabel);\n[\"Option 1\", \"Option 2\", \"Option 3\"].forEach(optionText => {\n  cyGet(checkboxWrapper).contains(optionText).should(\"have.attr\", \"aria-label\", optionText);\n});\nbuSaveButton().click();",
              "err": {},
              "uuid": "1107c80d-d9c7-4007-bd9d-22e1c0470ac1",
              "parentUUID": "dd12011a-8c98-4b6b-84b1-98f75478a02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit radio field",
              "fullTitle": "Navigate to setting page and create and update fields Edit radio field",
              "timedOut": null,
              "duration": 6235,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const newLabel = `Radio-${Date.now()}`;\nconst newOption = `Option-${Date.now()}`;\nsearchField(\"rad\", null, 'Edit');\ncyGet(fieldSel.fieldlabelboxId).clear().type(newLabel);\nbutextField(fieldSel.fieldOptionTextfield, `:nth-child(1) input`).first().clear().type(\"Edited Option 1\");\nbuButton(globalSel.typBtn).contains(\"Add option\").click();\ncy.get(fieldSel.fieldOptionTextfield).last().find(\"input\").clear().type(newOption);\nconst checkboxWrapper = `[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`;\ncyGet(checkboxWrapper).contains(\"Edited Option 1\").should(\"have.attr\", \"aria-label\", \"Edited Option 1\");\ncyGet(checkboxWrapper).contains(newOption).should(\"have.attr\", \"aria-label\", newOption);\nbuSaveButton().click();",
              "err": {},
              "uuid": "ca55ce3d-3183-4640-a08e-4722bf8f2cfe",
              "parentUUID": "dd12011a-8c98-4b6b-84b1-98f75478a02a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bcc07439-d11b-47ae-97bf-38c3d962cd5d",
            "22a7a314-49f7-4b6f-b84f-409db914abcc",
            "19e4b1b7-567f-4b0c-97fe-def34c1b8416",
            "bc3050c6-87ae-41bd-a7e6-a3e440ac6ba3",
            "43dc2f7c-a363-40b1-8cd6-1561c99a53f1",
            "4db792d8-a422-42dc-a566-acbe30817389",
            "ce985b8e-0cbd-4672-adc7-a7608874ab69",
            "33f2ebea-de6d-4450-a81d-866ea600dfea",
            "b8cbabf9-b725-4c25-83c0-417c6a92a5e1",
            "5a1e2efb-af41-4a53-944c-6a5d7f8c133d",
            "d1d860a5-1801-4012-b75d-c1e65c4d15fc",
            "1107c80d-d9c7-4007-bd9d-22e1c0470ac1",
            "ca55ce3d-3183-4640-a08e-4722bf8f2cfe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 85962,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "49558973-88e9-42cf-a7fb-52987bc20c7b",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "49336855-93cf-412e-92da-f3b3d1d0b848",
          "title": "Nevigate the setting page and test the data source fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dsrcField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create Single selction data source field",
              "fullTitle": "Nevigate the setting page and test the data source fields Create Single selction data source field",
              "timedOut": null,
              "duration": 16122,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let dsrcField = `Data source-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Dropdown\", globalSel.dialogTitleText);\nlabelNplaceholder(dsrcField, `Please select the values`);\ncy.get('[data-testid=\"datasourcefield-typography-zui6gbl8o\"]').should(\"have.text\", \"Link Asset\");\ncy.get(`${globalSel.dialogContent} [data-testid=\"buswitch-button-79w8xnphk\"]`).click();\ncy.wait(\"@assetsPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const getAssets = response.body.result.values.map(ele => ele.label);\n  const totalAsset = response.body.result.pages.totalRecords;\n  const getLeadAssets = response.body.result.values.find(ele => ele.group !== asset);\n  budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, getAssets[0], totalAsset, globalSel.search, getLeadAssets.label, globalSel.dialogTitleText);\n});\nheadingNsubheading();\nfiledSelection(\"Single-selection\", \"single\").should(\"be.checked\");\nbudropdown(globalSel.dialogContent, `label`, dsrcField);\ncyGet(`${globalSel.dialogContent} [data-testid=\"datasourcefield-box-6mghg71wb\"] [data-testid=\"budropdown-box-ty1opau5a\"] input`).should(\"have.attr\", \"placeholder\", `Please select the values`);\n// preview(dsrcField, `Please select the values`)\nbuSaveButton().click();",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Single line-1733230585603' within the element: <span.MuiTypography-root.MuiTypography-body1.MuiTypography-noWrap.css-wv3nvc> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Single line-1733230585603' within the element: <span.MuiTypography-root.MuiTypography-body1.MuiTypography-noWrap.css-wv3nvc> but never did.\n    at Context.eval (webpack://bu-testing/./cypress/helpers/global.js:43:13)",
                "diff": null
              },
              "uuid": "2a22302a-3ea9-4241-8763-53de1e57171b",
              "parentUUID": "49336855-93cf-412e-92da-f3b3d1d0b848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit label and placehoder ofdata source field",
              "fullTitle": "Nevigate the setting page and test the data source fields Edit label and placehoder ofdata source field",
              "timedOut": null,
              "duration": 2071,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const dsrcField = `Data source-${Date.now()}`;\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const totalPages = response.body.result.pages.totalNoOfPages;\n  const editDataSource = fieldData => {\n    cy.intercept(method.get, `**/fms/fields/${fieldData === null || fieldData === void 0 ? void 0 : fieldData.id}?*`).as(\"fieldDetail\");\n    searchNactionField(fieldData.label, '#edit', \"Edit\");\n    labelNplaceholder(dsrcField, `Please select the values`);\n    cy.wait(\"@fieldDetail\").then(({\n      response\n    }) => {\n      const destPip = response.body.result.catId.label;\n      cy.get(`[aria-label=${destPip}]`).parent().should(\"be.disabled\");\n      // headingNsubheading();\n      if (fieldData.selection === \"multi\") {\n        editMultiSelectionField();\n      } else {\n        editSingleSelectionField();\n      }\n    });\n  };\n  if (totalPages === 1) {\n    const dsrcFieldData = response.body.result.values.find(ele => ele.prop === \"dsrc\");\n    editDataSource(dsrcFieldData);\n  } else {\n    cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click(); // Move to last page\n    cy.wait(\"@fieldGrid\").then(({\n      response\n    }) => {\n      const dsrcFieldData = response.body.result.values.find(ele => ele.prop === \"dsrc\");\n      editDataSource(dsrcFieldData);\n    });\n  }\n});\nbudropdown(globalSel.dialogContent, `label`, dsrcField);\ncyGet(`${globalSel.dialogContent} [data-testid=\"datasourcefield-box-6mghg71wb\"] [data-testid=\"budropdown-box-ty1opau5a\"] input`).should(\"have.attr\", \"placeholder\", `Please select the values`);\n// preview(dsrcField, `Please select the values`)\nbuSaveButton().click();",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'label')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'label')\n    at editDataSource (webpack://bu-testing/./cypress/e2e/lms/setting/2_manageField/dsrcField.js:52:45)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/2_manageField/dsrcField.js:72:20)",
                "diff": null
              },
              "uuid": "b85f1fab-fd2b-4fff-9dcc-de3590e619fd",
              "parentUUID": "49336855-93cf-412e-92da-f3b3d1d0b848",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2a22302a-3ea9-4241-8763-53de1e57171b",
            "b85f1fab-fd2b-4fff-9dcc-de3590e619fd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 18193,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "51d06e4c-3086-4789-b388-9fb23372c6eb",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c6aa08cc-dd8e-4435-be80-1b1951ccd152",
          "title": "Nevigate the setting page and test the date and time fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\dtmField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create date and time field with Calendar Type",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date and time field with Calendar Type",
              "timedOut": null,
              "duration": 10651,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dtmField = `dateNtime-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date and Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dtmField, `Please select Date & Time`);\ncy.get('[role=\"dialog\"] [data-testid=\"buswitch-button-79w8xnphk\"]').should(\"have.attr\", \"aria-checked\", \"false\");\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Calendar Type\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"None\", null, null, \"Past Dates\", globalSel.dialogTitleText);\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\ncyGet(`[data-testid=\"buradiogroup-formlabel-ofdcw41bb\"]`).contains(\"Time Format\");\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).first().find(`input`).should(\"have.value\", \"24\");\n// cy.componentLabel(lead.formLabel, \"Time Format\", \"input[value='12']\").should(\"be.checked\").and(\"have.attr\", \"type\", \"radio\")\n// cy.get('.MuiFormGroup-root > :nth-child(2) > .MuiTypography-root').should(\"have.text\", \"12hrs\")\n// cy.componentLabel(lead.formLabel, \"Time Format\", \"input[value='24']\").should(\"have.attr\", \"type\", \"radio\").click()\n// cy.get('.MuiFormGroup-root > :nth-child(1) > .MuiTypography-root').should(\"have.text\", \"24hrs\")\npreviewDateField(dtmField, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "c6a3804a-ccd7-4c92-a377-043ac3221278",
              "parentUUID": "c6aa08cc-dd8e-4435-be80-1b1951ccd152",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date and time field with Date Range Selection",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date and time field with Date Range Selection",
              "timedOut": null,
              "duration": 10526,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const today = new Date();\nconst currentYear = today.getFullYear();\nconst currentDay = String(today.getDate());\nconst previousDate = new Date();\npreviousDate.setFullYear(previousDate.getFullYear() - 1);\nconst prevYear = previousDate.getFullYear();\nlet dtmField = `dateNtime-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date and Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dtmField, `Please select Date & Time`);\ncy.get('[role=\"dialog\"] button[role=\"switch\"]').click();\n// Choose Min Date\ncy.get('[placeholder= \"Min\"]').prev().find('button').click();\ndateDailogComponent(prevYear, \"1\");\ncy.get('.MuiPickersLayout-root > .MuiDialogActions-root > .MuiButtonBase-root').contains(\"OK\").click();\ncy.wait(250);\n// Choose Max Date\ncy.get('[placeholder= \"Max\"]').prev().find('button').click();\ndateDailogComponent(currentYear, currentDay);\ncy.get('.MuiPickersLayout-root > .MuiDialogActions-root > .MuiButtonBase-root').contains(\"OK\").click();\n// Calendar Type should be disabled when choose Date Range Selection\ncyGet(`[data-testid=\"withtitle-box-mp6w6v7ka\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).should(\"be.disabled\");\n// Restricte days\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\n// Choose date format\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(dtmField, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "db8357a5-ffa2-471f-9059-1519b7948066",
              "parentUUID": "c6aa08cc-dd8e-4435-be80-1b1951ccd152",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit date and time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit date and time field",
              "timedOut": null,
              "duration": 6496,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dtmFieldLabel = `dateNtime-${new Date().valueOf()}`;\nsearchField(\"dtm\", null, 'Edit');\nlabelNplaceholder(dtmFieldLabel, `Please select Date & Time`);\npreviewDateField(dtmFieldLabel, `Please select Date & Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "7246e9bf-4548-409c-8626-9df9a4aead2d",
              "parentUUID": "c6aa08cc-dd8e-4435-be80-1b1951ccd152",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date field with Calendar Type",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date field with Calendar Type",
              "timedOut": null,
              "duration": 7433,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dateField = `Date-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dateField, `Please select Date`);\ncy.get('[role=\"dialog\"] [data-testid=\"buswitch-button-79w8xnphk\"]').should(\"have.attr\", \"aria-checked\", \"false\");\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Calendar Type\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"None\", null, null, \"Past Dates\", globalSel.dialogTitleText);\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\npreviewDateField(dateField, `Please select Date`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "fe96a2aa-0369-43e1-b559-f41b74f2bb50",
              "parentUUID": "c6aa08cc-dd8e-4435-be80-1b1951ccd152",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create date field with Date Range Selection",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create date field with Date Range Selection",
              "timedOut": null,
              "duration": 9806,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const today = new Date();\nconst currentYear = today.getFullYear();\nconst currentDay = String(today.getDate());\nconst previousDate = new Date();\npreviousDate.setFullYear(previousDate.getFullYear() - 1);\nconst prevYear = previousDate.getFullYear();\nlet dateField = `date-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Date Field\", globalSel.dialogTitleText);\nlabelNplaceholder(dateField, `Please select Date`);\ncy.get('[role=\"dialog\"] button[role=\"switch\"]').click();\n// Choose Min Date\ncy.get('[placeholder= \"Min\"]').prev().find('button').click();\ndateDailogComponent(prevYear, \"1\");\ncy.wait(250);\n// Choose Max Date\ncy.get('[placeholder= \"Max\"]').prev().find('button').click();\ndateDailogComponent(currentYear, currentDay);\n// Calendar Type should be disabled when choose Date Range Selection\ncyGet(`[data-testid=\"withtitle-box-mp6w6v7ka\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).should(\"be.disabled\");\n// Restricte days\ncyGet(`[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]`).contains(\"Days of week Restricted\");\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Select\", 7, globalSel.search, \"Saturday\", globalSel.dialogTitleText);\nbudropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Saturday\");\npreviewDateField(dateField, `Please select Date`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "823bcebe-4c38-427d-a15a-91b80224d6d7",
              "parentUUID": "c6aa08cc-dd8e-4435-be80-1b1951ccd152",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit date field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit date field",
              "timedOut": null,
              "duration": 6341,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Date-${new Date().valueOf()}`;\nsearchField(\"dat\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Please select Date`);\npreviewDateField(fieldLabel, `Please select Date`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "2b8b50eb-7509-45fa-a42d-b1071ddb1da7",
              "parentUUID": "c6aa08cc-dd8e-4435-be80-1b1951ccd152",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Create time field",
              "timedOut": null,
              "duration": 5100,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let timeField = `Time-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Time Field\", globalSel.dialogTitleText);\nlabelNplaceholder(timeField, `Please select Time`);\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(timeField, `Please select Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "d5e9e2d7-27c6-4cd6-8a1b-7e7afd8ea16b",
              "parentUUID": "c6aa08cc-dd8e-4435-be80-1b1951ccd152",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit time field",
              "fullTitle": "Nevigate the setting page and test the date and time fields Edit time field",
              "timedOut": null,
              "duration": 5240,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Time-${new Date().valueOf()}`;\nsearchField(\"tim\", null, 'Edit');\nlabelNplaceholder(fieldLabel, `Please select Time`);\ncyGet(`[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"]`).find(`[data-testid=\"buradiogroup-formcontrollabel-si19q88zv\"]`).last().find(`input`).should(\"have.value\", \"12\");\npreviewDateField(fieldLabel, `Please select Time`);\nbuSaveButton().click();",
              "err": {},
              "uuid": "9d6ca83f-3e4e-427e-95e8-3aef83c8fb1a",
              "parentUUID": "c6aa08cc-dd8e-4435-be80-1b1951ccd152",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c6a3804a-ccd7-4c92-a377-043ac3221278",
            "db8357a5-ffa2-471f-9059-1519b7948066",
            "7246e9bf-4548-409c-8626-9df9a4aead2d",
            "fe96a2aa-0369-43e1-b559-f41b74f2bb50",
            "823bcebe-4c38-427d-a15a-91b80224d6d7",
            "2b8b50eb-7509-45fa-a42d-b1071ddb1da7",
            "d5e9e2d7-27c6-4cd6-8a1b-7e7afd8ea16b",
            "9d6ca83f-3e4e-427e-95e8-3aef83c8fb1a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 61593,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2e0955f6-f44e-4cec-94a7-3980d38ebf3a",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "851143c0-a9e9-4a9a-8161-6a14ce53fe29",
          "title": "Nevigate the setting page and test the email fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\emailField.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Field name should be unique",
              "fullTitle": "Nevigate the setting page and test the email fields Field name should be unique",
              "timedOut": null,
              "duration": 6836,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const roleOfUser = response.body.result.user.role;\n  const manageProperties = response.body.result.settings.permission[asset].manageProperties;\n  if (roleOfUser === \"std\" && manageProperties === false) {\n    buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n  } else {\n    cy.wait(\"@fieldGrid\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const existingField = response.body.result.values.find(fld => {\n        var _fld$group;\n        return ((_fld$group = fld.group) === null || _fld$group === void 0 ? void 0 : _fld$group.scope) === \"public\";\n      });\n      buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n      labelNplaceholder(existingField === null || existingField === void 0 ? void 0 : existingField.label, `Please Enter ${existingField === null || existingField === void 0 ? void 0 : existingField.label}`);\n      cyGet(`#string_label-helper-text`).should(\"contain.text\", \"Field label already exists\");\n      buSaveButton().should(\"be.disabled\");\n    });\n  }\n  ;\n});",
              "err": {},
              "uuid": "8b9e5635-b10f-49e4-8eb1-5a12be884618",
              "parentUUID": "851143c0-a9e9-4a9a-8161-6a14ce53fe29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Allow All",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Allow All",
              "timedOut": null,
              "duration": 4146,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fieldLabel = `Email-${new Date().valueOf()}`;\ncy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cy.wrap(response.body.result).as(\"appAuthResponse\");\n  const roleOfUser = response.body.result.user.role;\n  const manageProperties = response.body.result.settings.permission[asset].manageProperties;\n  if (roleOfUser === \"std\" && manageProperties === false) {\n    buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n  } else {\n    buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n    cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n    budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n    labelNplaceholder(fieldLabel, `Please Enter Email`);\n    cyGet('[data-testid=\"withtitle-inputlabel-9gzd3akk8\"]').should(\"have.text\", \"Mode of Email\");\n    budropdown(globalSel.dialogContent, `button ${globalSel.buttonTypography}`, \"Allow All\");\n    preview(fieldLabel, `Please Enter Email`);\n    buSaveButton().click();\n  }\n  ;\n});\ncy.get(\"@appAuthResponse\").then(res => {\n  appAuthRes = res;\n});",
              "err": {},
              "uuid": "b8d2485c-43d0-464d-99db-9796ff3fb75e",
              "parentUUID": "851143c0-a9e9-4a9a-8161-6a14ce53fe29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Allow some",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Allow some",
              "timedOut": null,
              "duration": 6169,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nconst roleOfUser = appAuthRes.user.role;\nconst manageProperties = appAuthRes.settings.permission[asset].manageProperties;\nif (roleOfUser === \"std\" && manageProperties === false) {\n  buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n} else {\n  buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n  cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n  budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n  emlComponentSel(label, \"Allow All\", \"Allow Some\", \"Select Domains\", \"gmail.com\");\n}\n;",
              "err": {},
              "uuid": "126e5add-0414-4662-8311-bef905a9eb51",
              "parentUUID": "851143c0-a9e9-4a9a-8161-6a14ce53fe29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit email field for Allow some Email domains",
              "fullTitle": "Nevigate the setting page and test the email fields Edit email field for Allow some Email domains",
              "timedOut": null,
              "duration": 12023,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\ncy.wait(\"@assetsPipeline\").then(({\n  response\n}) => {\n  let assetPipId = response.body.result.values.map(ele => ele.id);\n  cy.wrap(assetPipId[0]).as(\"assetPipId\");\n});\ncy.get(\"@assetPipId\").then(response => {\n  assetPipelineId = response;\n});\nsearchField(\"eml\", null, 'Edit').then(field => {\n  cy.get('[data-testid=\"close-dialog\"]').click();\n  fieldId = field === null || field === void 0 ? void 0 : field.id;\n  cy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\n  searchField(\"phn\", field.label, 'Edit');\n  cy.wait(\"@getFieldById\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let modetype;\n    const mode = response.body.result.mode;\n    const exclude = response.body.result.excludes;\n    const updatedDomains = allowedMailDomain.filter(domain => !exclude.includes(domain));\n    if (mode === 1) {\n      modetype = \"Allow Some\";\n    } else if (mode === 0) {\n      modetype = \"Restrict Some\";\n    } else {\n      modetype = \"Allow All\";\n    }\n    emlComponentSel(label, modetype, \"Allow Some\", exclude[0], updatedDomains[0]);\n  });\n});",
              "err": {},
              "uuid": "2676be25-5155-4346-80cf-0b3bf68b5f0a",
              "parentUUID": "851143c0-a9e9-4a9a-8161-6a14ce53fe29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create email field when Mode of Email is Restrict some",
              "fullTitle": "Nevigate the setting page and test the email fields Create email field when Mode of Email is Restrict some",
              "timedOut": null,
              "duration": 7005,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nconst roleOfUser = appAuthRes.user.role;\nconst manageProperties = appAuthRes.settings.permission[asset].manageProperties;\nif (roleOfUser === \"std\" && manageProperties === false) {\n  buButton(fieldSel.createFieldBtn).should(\"be.dissabled\");\n} else {\n  buButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\n  cyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\n  budropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Email\", globalSel.dialogTitleText);\n  emlComponentSel(label, \"Allow All\", \"Allow Some\", \"Select Domains\", \"yahoo.com\");\n}\n;",
              "err": {},
              "uuid": "700c965b-f674-4f2f-8e9d-f7b12068b664",
              "parentUUID": "851143c0-a9e9-4a9a-8161-6a14ce53fe29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit email field for Restricted Email domains",
              "fullTitle": "Nevigate the setting page and test the email fields Edit email field for Restricted Email domains",
              "timedOut": null,
              "duration": 10749,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let label = `Email-${new Date().valueOf()}`;\nsearchField(\"eml\", null, 'Edit').then(field => {\n  cy.get('[data-testid=\"close-dialog\"]').click();\n  fieldId = field === null || field === void 0 ? void 0 : field.id;\n  cy.intercept('GET', `**/fms/fields/${field.id}?*`).as(\"getFieldById\");\n  searchField(\"phn\", field.label, 'Edit');\n  cy.wait(\"@getFieldById\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let modetype;\n    const mode = response.body.result.mode;\n    const exclude = response.body.result.excludes;\n    const updatedDomains = allowedMailDomain.filter(domain => !exclude.includes(domain));\n    if (mode === 1) {\n      modetype = \"Allow Some\";\n    } else if (mode === 0) {\n      modetype = \"Restrict Some\";\n    } else {\n      modetype = \"Allow All\";\n    }\n    emlComponentSel(label, modetype, \"Restrict Some\", exclude[0], updatedDomains[0]);\n  });\n});",
              "err": {},
              "uuid": "44413b31-b049-4a27-8600-a3337b4edc79",
              "parentUUID": "851143c0-a9e9-4a9a-8161-6a14ce53fe29",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b9e5635-b10f-49e4-8eb1-5a12be884618",
            "b8d2485c-43d0-464d-99db-9796ff3fb75e",
            "126e5add-0414-4662-8311-bef905a9eb51",
            "2676be25-5155-4346-80cf-0b3bf68b5f0a",
            "700c965b-f674-4f2f-8e9d-f7b12068b664",
            "44413b31-b049-4a27-8600-a3337b4edc79"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 46928,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e88d726a-ca76-4d37-9fe8-ae528f275e1a",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6e4119ee-6839-4692-b90e-d726be97d674",
          "title": "Nevigate the setting page and test the field group",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\group.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add new group",
              "fullTitle": "Nevigate the setting page and test the field group Add new group",
              "timedOut": null,
              "duration": 8001,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let groupName = `Group-${new Date().valueOf()}`;\ncy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.get(lead.typeBtn).contains(\"Add Group\").click();\ncy.get(lead.dialogTitle).should(\"have.text\", \"Create group\");\ncy.componentLabel(lead.formLabel, \"Create group\", \"input\").type(groupName);\ncy.get(\"#cancel\").should(\"have.text\", \"Cancel\");\ncy.get(\"#add\").click();",
              "err": {},
              "uuid": "a2fb729e-6bd0-4877-a7be-d3687c313b44",
              "parentUUID": "6e4119ee-6839-4692-b90e-d726be97d674",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Private group can't be edited and deleted",
              "fullTitle": "Nevigate the setting page and test the field group Private group can't be edited and deleted",
              "timedOut": null,
              "duration": 5357,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(1000);\n// cy.get('table > tbody >').children(\".MuiTableRow-root > :nth-child(2)\")\ncy.wait(\"@groupGrid\").then(({\n  response\n}) => {\n  let privateGroup = response.body.result.values.filter(ele => ele.scope == \"private\");\n  cy.get('table > tbody > :nth-child(1) > :nth-child(1)').contains(privateGroup[0].label);\n});\ncy.get('table > tbody > :nth-child(1) > :nth-child(3) #actions').click();\ncy.get(\"#edit\").trigger(\"mouseover\", {\n  force: true\n});\ncy.get('.MuiTooltip-tooltip').contains(\"Private group can't be edited\");\ncy.get('#edit > .MuiButtonBase-root ').should(\"have.attr\", \"aria-disabled\", \"true\");\ncy.get(\"#delete\").trigger(\"mouseover\", {\n  force: true\n});\ncy.get('.MuiTooltip-tooltip').contains(\"Private group can't be deleted\");\ncy.get('#delete > .MuiButtonBase-root ').should(\"have.attr\", \"aria-disabled\", \"true\");",
              "err": {},
              "uuid": "e106eae1-82ed-4693-ac8b-51bd545f2757",
              "parentUUID": "6e4119ee-6839-4692-b90e-d726be97d674",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Validate assigned fields count with API",
              "fullTitle": "Nevigate the setting page and test the field group Validate assigned fields count with API",
              "timedOut": null,
              "duration": 6327,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(1000);\ncy.recordCountOnPage(\"5\");\ncy.wait(\"@groupGrid\").then(({\n  response\n}) => {\n  let abc = response.body.result.values.map(ele => ele.assignedFields);\n  let counts = abc.map(fields => {\n    let count = fields.count;\n    return count === 0 ? \"--\" : count;\n  });\n  cy.get('table > tbody >').children(\".MuiTableRow-root > :nth-child(2)\").each(($row, index) => {\n    cy.wrap($row).contains(counts[index]);\n  });\n});",
              "err": {},
              "uuid": "0c25c299-65ac-4e66-8c45-173f15fe0bbb",
              "parentUUID": "6e4119ee-6839-4692-b90e-d726be97d674",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit group",
              "fullTitle": "Nevigate the setting page and test the field group Edit group",
              "timedOut": null,
              "duration": 10714,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let groupName = `Group-${new Date().valueOf()}`;\ncy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(2000);\ncy.recordCountOnPage(\"5\");\ncy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click();\n// cy.get('table > tbody ').find(':nth-child(3) #actions').first().click()\ncy.get(':nth-child(3) > .TableCell-cell > :nth-child(1) > .MuiBox-root > #actions').click();\n// cy.get(lead.typeBtn).contains(\"Add Group\").click()\ncy.get(\"#edit\").click();\ncy.get(lead.dialogTitle).should(\"have.text\", \"Rename group\");\ncy.componentLabel(lead.formLabel, \"Rename group\", \"input\").clear().type(groupName);\ncy.get(\"#cancel\").should(\"have.text\", \"Cancel\");\ncy.get(\"#add\").click();",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#edit`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#edit`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/2_manageField/group.js:66:11)",
                "diff": null
              },
              "uuid": "b070b1c7-c662-463d-9ec9-2bb4ef8a6f53",
              "parentUUID": "6e4119ee-6839-4692-b90e-d726be97d674",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete group",
              "fullTitle": "Nevigate the setting page and test the field group Delete group",
              "timedOut": null,
              "duration": 6992,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let msg1 = \"Delete Group\";\nlet msg2 = \"Are you sure! want to delete this group?\";\ncy.get('#simple-tab-1 > .MuiTypography-root').contains(\"Groups\").click();\ncy.wait(1000);\ncy.recordCountOnPage(\"5\");\ncy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click();\ncy.wait(\"@groupGrid\").then(({\n  response\n}) => {\n  let groupName = response.body.result.values.slice(-1);\n  cy.log(JSON.stringify(groupName[0].assignedFields.count));\n  cy.get('table > tbody > :last > :nth-child(1)').contains(groupName[0].label);\n  cy.get('table > tbody > :last > :nth-child(3) #actions').click();\n  if (groupName[0].assignedFields.count == 0) {\n    cy.get(\"#delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n  } else {\n    cy.get(\"#delete\").trigger(\"mouseover\", {\n      force: true\n    });\n    cy.get('.MuiTooltip-tooltip').contains(\"Private group can't be deleted\");\n  }\n});",
              "err": {},
              "uuid": "1b950a47-be90-49dc-baa0-93efb5fca47a",
              "parentUUID": "6e4119ee-6839-4692-b90e-d726be97d674",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2fb729e-6bd0-4877-a7be-d3687c313b44",
            "e106eae1-82ed-4693-ac8b-51bd545f2757",
            "0c25c299-65ac-4e66-8c45-173f15fe0bbb",
            "1b950a47-be90-49dc-baa0-93efb5fca47a"
          ],
          "failures": [
            "b070b1c7-c662-463d-9ec9-2bb4ef8a6f53"
          ],
          "pending": [],
          "skipped": [],
          "duration": 37391,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "99e93892-7b1f-4be4-a9d2-a2b4d3fa1047",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
      "file": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "46b0dfc3-215f-4f3e-b6d6-281f3e416bf2",
          "title": "Navigate to setting page and create and update fields",
          "fullFile": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
          "file": "cypress\\e2e\\lms\\setting\\2_manageField\\multiline.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create Multi line text field",
              "fullTitle": "Navigate to setting page and create and update fields Create Multi line text field",
              "timedOut": null,
              "duration": 15913,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Multiline-${new Date().valueOf()}`;\nbuButton(fieldSel.createFieldBtn).contains(\"Create field\").click();\ncyGet(`${fieldSel.fieldlabelbox}`).contains(\"Select Field Type\");\nbudropdownInput(`${globalSel.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${globalSel.searchbox} input`, \"Multi line text\", globalSel.dialogTitleText);\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${globalSel.butextfield}`, \"input\").type(3); // set min\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${globalSel.butextfield}`, \"input\").type(100); // set max\n// butextField(globalSel.butextfield, \"#max\").type(100)\ntextCaseFormat();\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"] > label`).should(\"have.text\", fieldLabel);\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"]`).find(\"textarea\").should(\"have.attr\", \"placeholder\", `Enter ${fieldLabel}`);\n// preview(fieldLabel, `Enter ${fieldLabel}`)\nbuSaveButton().click();\ncyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.created);",
              "err": {},
              "uuid": "87caeea2-0dda-47cd-9ec8-28f1d52939f9",
              "parentUUID": "46b0dfc3-215f-4f3e-b6d6-281f3e416bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit Multi line text field",
              "fullTitle": "Navigate to setting page and create and update fields Edit Multi line text field",
              "timedOut": null,
              "duration": 19525,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let fieldLabel = `Multiline-${new Date().valueOf()}`;\ncy.visit(`${Cypress.env(\"lmsUrl\")}/setting/properties`);\n// cy.wait(2000)\ncy.wait(\"@assetsPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let assetPipId = response.body.result.values.map(ele => ele.id);\n  cy.wrap(assetPipId[0]).as(\"assetPipId\");\n});\ncy.get(\"@assetPipId\").then(response => {\n  assetPipelineId = response;\n});\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"All field types\");\nfieldTypeFilterOnSetting(\"Multi line text\");\nbudropdown(globalSel.settinglayoutbox, `button ${globalSel.buttonTypography}`, \"Multi line text\");\nsearchField(\"txa\", null, 'Edit');\n// cy.get(\"@mobileId\").then((response) => { mobFieldId = response?.id })\n// cy.get(\"@stageId\").then((response) => { stgFieldId = response?.id })\n// cy.get(\"@ownerId\").then((response) => { ownFieldId = response?.id })\n// cy.get('@fieldResp').then((response) => { fieldId = response?.id });\nlabelNplaceholder(fieldLabel, `Enter ${fieldLabel}`);\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${globalSel.butextfield}`, \"input\").clear().type(3); // edit min\nbutextField(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${globalSel.butextfield}`, \"input\").clear().type(150); // edit max\ntextCaseFormat();\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"] > label`).should(\"have.text\", fieldLabel);\ncyGet(`[data-testid=\"butextarea-textfield-nvtcklezl\"]`).find(\"textarea\").should(\"have.attr\", \"placeholder\", `Enter ${fieldLabel}`);\nbuSaveButton().click();\ncyGet('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", messages.updated);",
              "err": {},
              "uuid": "83ca5cc0-d482-47e8-80cb-19cbb731de9b",
              "parentUUID": "46b0dfc3-215f-4f3e-b6d6-281f3e416bf2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "87caeea2-0dda-47cd-9ec8-28f1d52939f9",
            "83ca5cc0-d482-47e8-80cb-19cbb731de9b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35438,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "68305adb-18a9-49a7-9f48-4d611e3d5e36",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
      "file": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a0f40e80-30cb-4a49-9f09-cc058d4803a9",
          "title": "Nevigate the lead page and Test Header componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
          "file": "cypress\\e2e\\lms\\lead\\1_headers\\leadHeader.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Header componet of lead management",
              "fullTitle": "Nevigate the lead page and Test Header componet Header componet of lead management",
              "timedOut": null,
              "duration": 14214,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/*\n    Company profile Icon and Name should be present\n    Action, Export, Import and Create lead button should be present\n    Pipeline-user Show and add icon should be present\n    List view, Kanban view and Chart view button should be present\n*/\n// Company profile Icon and Name\ncy.wait(\"@appAuth\").then(({\n  response\n}) => {\n  cy.get('#bu-layout h6').should(\"have.text\", response.body.result.company.label);\n});\n// Action button\ncyGet(`[data-testid=\"Action\"]`).should(\"contain.text\", \"Action\");\n// Export button\ncyGet(`[data-testid=\"Export\"]`).should(\"contain.text\", \"Export\");\n// Import Button\ncyGet(`[data-testid=\"Import\"]`).should(\"contain.text\", \"Import\");\n// Create record button\ncyGet(`[data-testid=\"Create ${assetName}\"]`).should(\"contain.text\", `Create ${assetName}`);\n// Pipeline-user Show and add icon\ncy.wait(\"@crewPipelines\").then(({\n  response\n}) => {\n  let userOnPip = response.body.result.values.length;\n  if (userOnPip > 4) {\n    let userInPlusIcon = response.body.result.pages.totalRecords - 3;\n    cy.get('#bu-layout [data-testid=\"activitybar-box-txgt1t82k\"] [data-testid=\"buavatargroup-avatargroup-dovjvw4cl\"] .MuiAvatarGroup-avatar').contains(userInPlusIcon);\n  } else {\n    cy.get('#bu-layout [data-testid=\"activitybar-box-txgt1t82k\"] [data-testid=\"buavatargroup-avatargroup-dovjvw4cl\"] .MuiAvatarGroup-avatar').then($el => {\n      expect($el.length).be.eq(userOnPip);\n    });\n  }\n});\n// List view button\ncy.get('#bu-layout [aria-label=\"Grid view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");\n// Kanban view button\ncy.get('#bu-layout [aria-label=\"Kanban view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");\n// Chart view button\ncy.get('#bu-layout [aria-label=\"Chart view\"]').children(\"button\").should(\"have.attr\", \"type\", \"button\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#bu-layout [aria-label=\"Kanban view\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `#bu-layout [aria-label=\"Kanban view\"]`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/1_headers/leadHeader.js:58:11)",
                "diff": null
              },
              "uuid": "07e059f0-0b8d-4dfa-bdc7-b7378a8dbff8",
              "parentUUID": "a0f40e80-30cb-4a49-9f09-cc058d4803a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "07e059f0-0b8d-4dfa-bdc7-b7378a8dbff8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 14214,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e54fc3ef-4c5e-4c32-b70e-6a7c1f42b86b",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
      "file": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "816969f5-68e2-41f9-b427-afc87f0a35a8",
          "title": "Nevigate the lead page and Test Header componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
          "file": "cypress\\e2e\\lms\\lead\\1_headers\\upperHeader.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Header componet of lead management",
              "fullTitle": "Nevigate the lead page and Test Header componet Header componet of lead management",
              "timedOut": null,
              "duration": 8209,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#app-routes > header > .MuiToolbar-root .MuiButtonBase-root > :first ');\n// .should(\"have.css\", \"color\", \"rgba(0, 0, 0, 0.6)\").and(\"have.css\", \"height\")\n// .and(\"have.css\", \"width\")\ncy.get('#app-routes > header a[href=\"/dashboard\"]').should(\"have.attr\", \"style\", \"display: flex;\");\ncy.get('#app-routes > header h6').should(\"have.text\", formatModuleName(module));\n// Check Light/Dark mode functionality\ncy.get('#app-routes > header [aria-label] :first .MuiTypography-root').then($item => {\n  let data = $item.text();\n  cy.log(data);\n  if (data === \"OFF\") {\n    cy.get('#app-routes > header [role=\"switch\"]').click({\n      force: true\n    });\n    cy.get('#app-routes > header [aria-label] :first .MuiTypography-root').should(\"have.text\", \"ON\");\n  } else if (data === \"ON\") {\n    cy.get('#app-routes > header [role=\"switch\"]').click({\n      force: true\n    });\n    cy.get('#app-routes > header [aria-label] :first .MuiTypography-root').should(\"have.text\", \"OFF\");\n  }\n});\n// Check Notifications button present on header or not\ncy.get('#app-routes > header [aria-label=\"Notifications\"]').click();\ncy.get('.MuiDrawer-paperAnchorRight h6').should(\"have.text\", \"Notifications\");\ncy.get('.MuiDrawer-paperAnchorRight .MuiBox-root > .MuiButtonBase-root .MuiSvgIcon-fontSizeSmall').click();\n// Check Settings button present on header or not\ncy.get('#app-routes > header [aria-label=\"Settings\"] button').should(\"have.attr\", \"type\", \"button\");\n// Check User Profile button present on header or not\ncy.get('#app-routes > header [aria-label=\"User Profile\"] button').should(\"have.attr\", \"aria-label\", \"account of current user\").click();\ncy.wait(\"@appAuth\").then(({\n  response\n}) => {\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.user.email);\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.company.label);\n  cy.get('.MuiPaper-root [role=\"menu\"] .MuiTypography-root').contains(response.body.result.company.name);\n});",
              "err": {},
              "uuid": "75d27145-bcb1-4780-b6e8-83d0cef1a1a5",
              "parentUUID": "816969f5-68e2-41f9-b427-afc87f0a35a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "75d27145-bcb1-4780-b6e8-83d0cef1a1a5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8209,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a8933b09-f097-4f78-89a3-6e422f74c43a",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "98ba884b-00e3-4016-8909-ef7b42c448e1",
          "title": "Navigate on field config page",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFieldOnFormConfig.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify the presence of the \"Attach Field\", \"Create field\", \"Cancel\" and \"Apply\" button",
              "fullTitle": "Navigate on field config page Verify the presence of the \"Attach Field\", \"Create field\", \"Cancel\" and \"Apply\" button",
              "timedOut": null,
              "duration": 9441,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"title-dialog\"]').should(\"have.text\", \"Edit fields\");\ncy.get('[data-testid=\"Attach field\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Attach field\");\ncy.get('[data-testid=\"Create field\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Create field\");\ncy.get('[data-testid=\"cancel\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"cancel\");\ncy.get('[data-testid=\"Apply\"]').should(\"have.attr\", \"type\", \"button\").and(\"have.text\", \"Apply\");",
              "err": {},
              "uuid": "4d753601-d9c0-4887-8a79-ed3cb43344f6",
              "parentUUID": "98ba884b-00e3-4016-8909-ef7b42c448e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the presence of the System required field on form config",
              "fullTitle": "Navigate on field config page Verify the presence of the System required field on form config",
              "timedOut": null,
              "duration": 8933,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait('@fieldConfig').then(interception => {\n  const responseBody = interception.response.body;\n  const values = responseBody.result.values;\n  const filteredFields = values.filter(field => field.system && field.required);\n  const labels = filteredFields.map(field => field.label);\n  cy.log(labels.join(', '));\n  cy.get('[data-testid=\"buformeditor-listitemtext-ofe56xosa\"]').contains(\"System Fields\");\n  labels.forEach(label => {\n    cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input[placeholder=\"Search...\"]').clear({\n      force: true\n    }).type(label, {\n      force: true\n    });\n    cy.get('[data-testid=\"propertylist-listitemtext-esgc2itka\"]').first().should('have.text', label);\n    cy.get('[data-testid=\"propertylist-checkbox-9qc6i0a6w\"] input').should('have.attr', 'disabled');\n    // .and('have.attr', 'checked');\n  });\n});",
              "err": {},
              "uuid": "2eb85eb7-fa0d-4e18-8d0e-9866b1a50a25",
              "parentUUID": "98ba884b-00e3-4016-8909-ef7b42c448e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the System field should be checkable or uncheckable on form config",
              "fullTitle": "Navigate on field config page Verify the System field should be checkable or uncheckable on form config",
              "timedOut": null,
              "duration": 10338,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait('@fieldConfig').then(interception => {\n  const responseBody = interception.response.body;\n  const values = responseBody.result.values;\n  const filteredFields = values.filter(field => field.system);\n  const labels = filteredFields.map(field => field.label);\n  cy.log(labels.join(', '));\n  cy.get('[data-testid=\"buformeditor-listitemtext-ofe56xosa\"]').contains(\"System Fields\");\n  labels.forEach(label => {\n    cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input[placeholder=\"Search...\"]').clear({\n      force: true\n    }).type(label, {\n      force: true\n    });\n    cy.get('[data-testid=\"propertylist-listitemtext-esgc2itka\"]').first().should('have.text', label);\n    cy.get('[data-testid=\"propertylist-checkbox-9qc6i0a6w\"] input').then($input => {\n      if ($input.is(':checked')) {\n        cy.wrap($input).uncheck({\n          force: true\n        });\n      } else {\n        cy.wrap($input).check({\n          force: true\n        });\n      }\n    });\n  });\n});",
              "err": {},
              "uuid": "dfc22c33-757e-4e3d-a2c3-87baaf2b057a",
              "parentUUID": "98ba884b-00e3-4016-8909-ef7b42c448e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Select property and Make required and remove required and de-select property ",
              "fullTitle": "Navigate on field config page Select property and Make required and remove required and de-select property ",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "//Check field from field config, make required and add on form config\ncy.wait(\"@fieldConfig\").then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(item => item.system === false).slice(-1);\n  let fieldId = fieldData[0].id.toString();\n  let fieldName = fieldData[0].label.toString();\n  cy.get('.MuiFormControl-root [placeholder=\"Search...\"]').type(fieldName);\n  cy.get(':nth-child(1) > .MuiListItem-root > .MuiFormControlLabel-root input').check();\n  cy.get(`[data-rbd-droppable-id=\"column\"]`).children(`[data-rbd-draggable-id=${fieldId}]`).contains(fieldName);\n});\n// cy.get(':nth-child(1) > .MuiListItem-root > .MuiFormControlLabel-root input').check()\n// cy.get('.MuiGrid-item > :last')\n// cy.get('.MuiFormControl-root [placeholder=\"Search...\"]')\n// .type(Cypress.env(\"fieldName\"))\n// cy.get('input[name=\"checkedB\"]').check(fieldName)\n// cy.get('[data-rbd-droppable-id=\"column\"]').find('[type=\"checkbox\"]').last().check()\n// cy.get(lead.typeBtn).contains(\"Apply\").click()\n// cy.get('#create-lead .MuiFormControl-root label').contains(Cypress.env(\"fieldName\"))\n// cy.get(`#create-lead .MuiFormControl-root [placeholder='Enter ${Cypress.env(\"fieldName\")}']`).\n//     should(\"have.attr\", \"required\")\n// //uncheck the field from field config\n// cy.get(lead.typeBtn).contains(\"Add fields\").click()\n// cy.get('[data-rbd-droppable-id=\"column\"]').find('[type=\"checkbox\"]').last().uncheck()\n// cy.get('.MuiFormControl-root [placeholder=\"Search...\"]').type(Cypress.env(\"fieldName\"))\n// cy.get('input[name=\"checkedB\"]').uncheck()\n// cy.get(lead.typeBtn).contains(\"Apply\").click()",
              "err": {},
              "uuid": "7bea7d6b-0a71-414b-9133-d7f093c43a43",
              "parentUUID": "98ba884b-00e3-4016-8909-ef7b42c448e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d753601-d9c0-4887-8a79-ed3cb43344f6",
            "2eb85eb7-fa0d-4e18-8d0e-9866b1a50a25",
            "dfc22c33-757e-4e3d-a2c3-87baaf2b057a"
          ],
          "failures": [],
          "pending": [
            "7bea7d6b-0a71-414b-9133-d7f093c43a43"
          ],
          "skipped": [],
          "duration": 28712,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3273c9a9-4ba3-45d0-8127-44e55022b814",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "da4f5b10-3cdc-412a-8e3b-7cf3aa61930d",
          "title": "Nevigate the lead page and create new fields",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\addFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create single line text field",
              "fullTitle": "Nevigate the lead page and create new fields Create single line text field",
              "timedOut": null,
              "duration": 19151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let stringField = `String-${new Date().valueOf()}`;\ncy.get(lead.inputField).should(\"have.value\", \"Single line text\");\ncy.wait(\"@groupList\").then(({\n  response\n}) => {\n  let privateGroup = response.body.result.values.filter(ele => ele.scope == \"private\");\n  cy.get(`input[name=\"Select Group\"]`).should(\"have.value\", privateGroup[0].label);\n});\n(0, _field.labelNplaceholder)(stringField, `Enter ${stringField}`);\n(0, _global.butextField)(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :first ${_globalSel.default.butextfield}`, \"input\").type(3); // set min\n(0, _global.butextField)(`[data-testid=\"commonstringsettings-box-mbdj984uh\"] > :last ${_globalSel.default.butextfield}`, \"input\").type(30); // set max\n(0, _field.textCaseFormat)();\n(0, _field.preview)(stringField, `Enter ${stringField}`);\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.created);",
              "err": {},
              "uuid": "1b608fe7-b278-49b2-92b0-0dd52b0b404c",
              "parentUUID": "da4f5b10-3cdc-412a-8e3b-7cf3aa61930d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create dropdown field",
              "fullTitle": "Nevigate the lead page and create new fields Create dropdown field",
              "timedOut": null,
              "duration": 17509,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let dropdownField = `Dropdown-${new Date().valueOf()}`;\n(0, _global.budropdownInput)(`${_globalSel.default.muiInput} input[name=\"Select Field Type\"]`, \"Single line text\", 6, `${_globalSel.default.searchbox} input`, \"Dropdown\", _globalSel.default.dialogTitleText);\ncy.wait(\"@groupList\").then(({\n  response\n}) => {\n  let publicGroup = response.body.result.values.filter(ele => ele.scope == \"public\");\n  cy.get(`input[name=\"Select Group\"]`).click();\n  cy.get(lead.chooseOptions).contains(publicGroup[0].label).click();\n});\n(0, _field.labelNplaceholder)(dropdownField, `Enter ${dropdownField}`);\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"] input`).should(\"have.value\", \"Option 1\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get('[data-testid=\"optionslist-textfield-ud6koj7f1\"] input').eq(1).should(\"have.value\", \"Option 2\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get('[data-testid=\"optionslist-textfield-ud6koj7f1\"] input').eq(2).should(\"have.value\", \"Option 3\");\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.created);",
              "err": {},
              "uuid": "9b2b791a-691e-423f-894e-4ab1a03373f2",
              "parentUUID": "da4f5b10-3cdc-412a-8e3b-7cf3aa61930d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b608fe7-b278-49b2-92b0-0dd52b0b404c",
            "9b2b791a-691e-423f-894e-4ab1a03373f2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 36660,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a42b923e-fbc6-4a2a-a853-2d386fdbb0c0",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "44c692f1-11b0-4dc5-afbf-ec66829c54a9",
          "title": "Test the functionality of attach field",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\attach.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach field",
              "fullTitle": "Test the functionality of attach field Attach field",
              "timedOut": null,
              "duration": 16047,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('[data-testid=\"Attach field\"]').should(\"have.text\", \"Attach field\").click();\ncy.wait(500);\ncy.get(`[data-testid=\"title-dialog\"] p`).contains(\"Attach field\");\n// cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').last().type(\"jddnn\")\ncy.wait(\"@availableField\").then(({\n  response\n}) => {\n  if (response.body.result.values.length == 0) {\n    cy.log(\"Fields are not available for attach\");\n    cy.get('#cancel').click();\n  } else {\n    let field = response.body.result.values.map(ele => ele.label);\n    cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').last().type(field[0]);\n    // cy.get('.MuiDialog-container .MuiDialogContent-root > :last [placeholder=\"Search...\"]')\n    cy.wait(200);\n    cy.get('[data-testid=\"attachfields-collapse-uvsmqfw9l\"] [data-testid=\"propertylist-listitemtext-esgc2itka\"]').contains(field[0]).click();\n    cy.get('#attach').click();\n    cy.wait(500);\n    cy.get('[role=\"dialog\"] [placeholder=\"Search...\"]').type(field[0]);\n    cy.get('[data-testid=\"propertylist-box-k4wxytcqz\"] [data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]').last().should(\"have.text\", field[0]);\n    cy.get('[data-testid=\"propertylist-box-k4wxytcqz\"] input').last().should(\"be.checked\");\n  }\n});\ncy.get('[data-testid=\"close-dialog\"]').click();\ncy.get('[data-testid=\"title-dialog\"] p').eq(1).contains(\"Warning\");\ncy.get('[data-testid=\"buformeditor-typography-3mxztjea3\"]');\ncy.get('[data-testid=\"Confirm\"]').click();",
              "err": {},
              "uuid": "c0a6322f-ca6f-42d9-896e-264f675b3b9f",
              "parentUUID": "44c692f1-11b0-4dc5-afbf-ec66829c54a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0a6322f-ca6f-42d9-896e-264f675b3b9f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16047,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d7e20306-bd35-43e9-bbc1-c14e0ef261b1",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
      "file": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f73e697-e994-4c30-9df9-3f8646fd244b",
          "title": "Nevigate the lead page and Update fields",
          "fullFile": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
          "file": "cypress\\e2e\\lms\\lead\\2_fields\\editFields.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Edit Single line text field",
              "fullTitle": "Nevigate the lead page and Update fields Edit Single line text field",
              "timedOut": null,
              "duration": 29227,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let singleField = `Single line-${new Date().valueOf()}`;\ncy.wait(\"@fieldList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(ele => ele.required == false && ele.system == false && ele.prop == \"str\").slice(-1);\n  cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input').type(fieldData[0].label);\n  cy.get('[data-testid=\"actions-iconbutton-4zbo8fvnl\"]').first().click();\n  cy.get('[data-testid=\"actions-box-qexr9sum4\"]').contains('Edit').click({\n    force: true\n  });\n  cy.get('[data-testid=\"input-muiinput-t8mkcx347\"] input[name=\"Select Field Type\"]').should(\"have.value\", \"Single line text\");\n  // Field label and Placeholder\n  (0, _field.labelNplaceholder)(singleField, `Enter ${singleField}`);\n  // Min and Max\n  cy.get('[data-testid=\"withtitle-box-mp6w6v7ka\"] label').contains(\"Min Length\").next().clear().type(faker.number.int({\n    min: 3,\n    max: 9\n  }));\n  cy.get('[data-testid=\"withtitle-box-mp6w6v7ka\"] label').contains(\"Max Length\").next().clear().type(faker.number.int({\n    min: 15,\n    max: 100\n  }));\n  // Text Case\n  (0, _field.textCaseFormat)();\n  // Preview\n  cy.get('#single_text_field-label').should(\"have.text\", singleField);\n  cy.get('#single_text_field').should(\"have.attr\", \"placeholder\", `Enter ${singleField}`);\n});\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.updated);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<label#single_text_field-label.MuiFormLabel-root.MuiInputLabel-root.MuiInputLabel-formControl.MuiInputLabel-animated.MuiInputLabel-shrink.MuiInputLabel-sizeMedium.MuiInputLabel-standard.MuiFormLabel-colorPrimary.MuiInputLabel-root.MuiInputLabel-formControl.MuiInputLabel-animated.MuiInputLabel-shrink.MuiInputLabel-sizeMedium.MuiInputLabel-standard.css-q92qzl>' to have text 'Single line-1753770898906', but the text was 'S'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<label#single_text_field-label.MuiFormLabel-root.MuiInputLabel-root.MuiInputLabel-formControl.MuiInputLabel-animated.MuiInputLabel-shrink.MuiInputLabel-sizeMedium.MuiInputLabel-standard.MuiFormLabel-colorPrimary.MuiInputLabel-root.MuiInputLabel-formControl.MuiInputLabel-animated.MuiInputLabel-shrink.MuiInputLabel-sizeMedium.MuiInputLabel-standard.css-q92qzl>' to have text 'Single line-1753770898906', but the text was 'S'\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/2_fields/editFields.js:39:47)",
                "diff": "- 'S'\n+ 'Single line-1753770898906'\n"
              },
              "uuid": "1d9a94e2-eb48-4812-89e9-4a9466d37005",
              "parentUUID": "9f73e697-e994-4c30-9df9-3f8646fd244b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit dropdown field",
              "fullTitle": "Nevigate the lead page and Update fields Edit dropdown field",
              "timedOut": null,
              "duration": 22644,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let basField = `Dropdown-${new Date().valueOf()}`;\ncy.wait(500);\ncy.wait(\"@fieldList\").then(({\n  response\n}) => {\n  let fieldData = response.body.result.values.filter(ele => ele.required == false && ele.system == false && ele.prop == \"bas\").slice(-1);\n  // cy.log(\"fieldData\", JSON.stringify(fieldData[0].label))\n  cy.get('[data-testid=\"buformeditor-textfield-ml5m9m9l0\"] input').type(fieldData[0].label);\n  cy.get('[data-testid=\"actions-iconbutton-4zbo8fvnl\"]').first().click();\n  cy.get('[data-testid=\"actions-box-qexr9sum4\"]').contains('Edit').click({\n    force: true\n  });\n  cy.get('[data-testid=\"input-muiinput-t8mkcx347\"] input[name=\"Select Field Type\"]').should(\"have.value\", \"Dropdown\").and(\"have.prop\", \"disabled\");\n  (0, _field.labelNplaceholder)(basField, `Enter ${basField}`);\n});\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"]`).first().clear().type(\"Edited Option 1\");\ncy.get(lead.typeBtn).contains(\"Add option\").click();\ncy.get(`[data-testid=\"optionslist-textfield-ud6koj7f1\"]`).last().clear().type(`Option-${new Date().valueOf()}`);\ncy.get('[data-testid=\"buradiogroup-radiogroup-tdw0bqbm7\"] input[value=\"multi\"]').then($ele => {\n  if ($ele.is(':disabled')) {\n    cy.log(\"Multi-selection option type can't be edit\");\n  } else {\n    cy.get('[value=\"single\"]').click();\n    cy.get('[value=\"multi\"]').click();\n  }\n});\n(0, _global.buSaveButton)().click();\ncy.get('.MuiSnackbarContent-message', {\n  timeout: 10000\n}).should(\"have.text\", _messages.default.updated);",
              "err": {},
              "uuid": "15f8f86a-888f-46b2-879c-b69f6f69e5ed",
              "parentUUID": "9f73e697-e994-4c30-9df9-3f8646fd244b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "15f8f86a-888f-46b2-879c-b69f6f69e5ed"
          ],
          "failures": [
            "1d9a94e2-eb48-4812-89e9-4a9466d37005"
          ],
          "pending": [],
          "skipped": [],
          "duration": 51871,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5168b26f-0ae9-4a43-9281-34daf41d16e5",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7e41e625-add2-42aa-8327-0b1262d482b3",
          "title": "Nevigate the lead page and Create Lead",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\createlead.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "57cba2dc-c048-4e12-8f94-c41c1820b1a9",
              "title": "Create record",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Create record with \"str\", \"phn\", \"num\", \"txa\", \"eml\", \"url\" fields",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"str\", \"phn\", \"num\", \"txa\", \"eml\", \"url\" fields",
                  "timedOut": null,
                  "duration": 7146,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  userRole = response.body.result.user.role;\n  cy.wait(\"@existsPipeline\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    createAccess = response.body.result.tools.create;\n    cyGet(`[data-testid=\"butoolbar-grid-2yad1y8r5\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).click({\n      force: true\n    });\n    cy.wait(\"@getPipeline\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      pipelineIds = response.body.result.values.map(ele => ele.id);\n      createRecordScript([\"str\", \"phn\", \"num\", \"txa\", \"eml\", \"url\"], userRole, createAccess, pipelineIds);\n    });\n  });\n});",
                  "err": {
                    "message": "CypressError: `cy.request()` failed on:\n\nhttps://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: https://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzc3MTU0N30.lJ19BnefSxJE1O6o0c3utuB0iDOlvhXMNZnnj6kA7FA\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.14.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"ssid=68886bc38e319af865b1c928; refToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJzZXNzaW9uSWQiOiI2ODg4NmJjMzhlMzE5YWY4NjViMWM5MjgiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzg1NzM0N30.ncikPWw6vCO97C3HO4eX7xsMmUxq-Ksx-QawgZGlxz4; _rnms=crm; mode=dark\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 152\n}\nBody: {\"fields\":[\"65166fe89a2d3227fe64e0c3\",\"64ec81c86ab5735fdd037fb4\",\"659562e10180ab7bdd370192\",\"65166fe89a2d3227fe64e0be\",\"66596500b656f7acdd16fc62\",null]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Tue, 29 Jul 2025 06:35:51 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"101\",\n  \"connection\": \"keep-alive\",\n  \"cf-ray\": \"966a993eb8bf599a-DEL\",\n  \"x-powered-by\": \"Express\",\n  \"vary\": \"Origin\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-trace-id\": \"219f61be-224f-41cb-bba4-ef98a09c9eb4\",\n  \"etag\": \"W/\\\"65-VP6EBmqAULXLbxfzJX461OVlSFw\\\"\",\n  \"strict-transport-security\": \"max-age=31536000; includeSubDomains\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=RuVFNlY%2F3YsjH9mQd%2FHcL0dRYFY8%2FIw6NijEpdZL%2BclcBcGBKYgA3tPh9KbOgKccT8bJVaR3VrQ5NcgM5jON7Pn4a4%2F7xpJlmAVsTa5L5%2FBCTkXQn5Y6dN4WSYQs852i2w%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\",\n  \"server-timing\": \"cfL4;desc=\\\"?proto=TCP&rtt=8952&min_rtt=7343&rtt_var=4119&sent=8&recv=7&lost=0&retrans=0&sent_bytes=2852&recv_bytes=2600&delivery_rate=429669&cwnd=251&unsent_bytes=0&cid=bd19255674506674&ts=341&x=0\\\"\"\n}\nBody: {\n  \"success\": false,\n  \"message\": \"Invalid input fields.5\",\n  \"traceId\": \"219f61be-224f-41cb-bba4-ef98a09c9eb4\"\n}\n\n\nhttps://on.cypress.io/request",
                    "estack": "CypressError: `cy.request()` failed on:\n\nhttps://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: https://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzc3MTU0N30.lJ19BnefSxJE1O6o0c3utuB0iDOlvhXMNZnnj6kA7FA\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.14.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"ssid=68886bc38e319af865b1c928; refToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJzZXNzaW9uSWQiOiI2ODg4NmJjMzhlMzE5YWY4NjViMWM5MjgiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzg1NzM0N30.ncikPWw6vCO97C3HO4eX7xsMmUxq-Ksx-QawgZGlxz4; _rnms=crm; mode=dark\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 152\n}\nBody: {\"fields\":[\"65166fe89a2d3227fe64e0c3\",\"64ec81c86ab5735fdd037fb4\",\"659562e10180ab7bdd370192\",\"65166fe89a2d3227fe64e0be\",\"66596500b656f7acdd16fc62\",null]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Tue, 29 Jul 2025 06:35:51 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"101\",\n  \"connection\": \"keep-alive\",\n  \"cf-ray\": \"966a993eb8bf599a-DEL\",\n  \"x-powered-by\": \"Express\",\n  \"vary\": \"Origin\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-trace-id\": \"219f61be-224f-41cb-bba4-ef98a09c9eb4\",\n  \"etag\": \"W/\\\"65-VP6EBmqAULXLbxfzJX461OVlSFw\\\"\",\n  \"strict-transport-security\": \"max-age=31536000; includeSubDomains\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=RuVFNlY%2F3YsjH9mQd%2FHcL0dRYFY8%2FIw6NijEpdZL%2BclcBcGBKYgA3tPh9KbOgKccT8bJVaR3VrQ5NcgM5jON7Pn4a4%2F7xpJlmAVsTa5L5%2FBCTkXQn5Y6dN4WSYQs852i2w%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\",\n  \"server-timing\": \"cfL4;desc=\\\"?proto=TCP&rtt=8952&min_rtt=7343&rtt_var=4119&sent=8&recv=7&lost=0&retrans=0&sent_bytes=2852&recv_bytes=2600&delivery_rate=429669&cwnd=251&unsent_bytes=0&cid=bd19255674506674&ts=341&x=0\\\"\"\n}\nBody: {\n  \"success\": false,\n  \"message\": \"Invalid input fields.5\",\n  \"traceId\": \"219f61be-224f-41cb-bba4-ef98a09c9eb4\"\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:133224:72)\n    at tryCatcher (https://api.butest.tech/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://api.butest.tech/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://api.butest.tech/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://api.butest.tech/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://api.butest.tech/__cypress/runner/cypress_runner.js:1701:18)\n    at _drainQueueStep (https://api.butest.tech/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://api.butest.tech/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://api.butest.tech/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://api.butest.tech/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at request (webpack://bu-testing/./cypress/selector/utility.js:33:14)\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:338:23)",
                    "diff": null
                  },
                  "uuid": "4f520129-3ff2-4685-8c21-3b699bbf8e6b",
                  "parentUUID": "57cba2dc-c048-4e12-8f94-c41c1820b1a9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"bas\", \"rtg\"",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"bas\", \"rtg\"",
                  "timedOut": null,
                  "duration": 2436,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"bas\", \"rtg\"], userRole, createAccess, pipelineIds);",
                  "err": {
                    "message": "CypressError: `cy.request()` failed on:\n\nhttps://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: https://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzc3MTU0N30.lJ19BnefSxJE1O6o0c3utuB0iDOlvhXMNZnnj6kA7FA\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.14.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"ssid=68886bc38e319af865b1c928; refToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJzZXNzaW9uSWQiOiI2ODg4NmJjMzhlMzE5YWY4NjViMWM5MjgiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzg1NzM0N30.ncikPWw6vCO97C3HO4eX7xsMmUxq-Ksx-QawgZGlxz4; _rnms=one,crm; mode=dark\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 98\n}\nBody: {\"fields\":[\"65166fe89a2d3227fe64e0c3\",\"64ec81c86ab5735fdd037fb4\",\"657836bea975c19a0c987baf\",null]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Tue, 29 Jul 2025 06:35:54 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"101\",\n  \"connection\": \"keep-alive\",\n  \"cf-ray\": \"966a994eba40b232-DEL\",\n  \"x-powered-by\": \"Express\",\n  \"vary\": \"Origin\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-trace-id\": \"fdc73150-9c67-4fce-9d6e-0c2b6363fed9\",\n  \"etag\": \"W/\\\"65-BAGtW8oQH2C6hVMPSyHfNZinS8g\\\"\",\n  \"strict-transport-security\": \"max-age=31536000; includeSubDomains\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=7xdQAtKOvifWp7dB4AmvbNqSEWlEHBFAeqBpY504wvtxDcgkoeNcJapwYnt7Pmp0M49OOHrnara5YXfdpek0eSLQTfsup1MDcMoZAIjjfGLxJSAB7jbrsoqkgfjCMOM3XQ%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\",\n  \"server-timing\": \"cfL4;desc=\\\"?proto=TCP&rtt=25499&min_rtt=15712&rtt_var=13630&sent=8&recv=7&lost=0&retrans=0&sent_bytes=2854&recv_bytes=2553&delivery_rate=301564&cwnd=254&unsent_bytes=0&cid=6c3fb4a0ed2bf5dd&ts=398&x=0\\\"\"\n}\nBody: {\n  \"success\": false,\n  \"message\": \"Invalid input fields.3\",\n  \"traceId\": \"fdc73150-9c67-4fce-9d6e-0c2b6363fed9\"\n}\n\n\nhttps://on.cypress.io/request",
                    "estack": "CypressError: `cy.request()` failed on:\n\nhttps://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: https://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzc3MTU0N30.lJ19BnefSxJE1O6o0c3utuB0iDOlvhXMNZnnj6kA7FA\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.14.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"ssid=68886bc38e319af865b1c928; refToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJzZXNzaW9uSWQiOiI2ODg4NmJjMzhlMzE5YWY4NjViMWM5MjgiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzg1NzM0N30.ncikPWw6vCO97C3HO4eX7xsMmUxq-Ksx-QawgZGlxz4; _rnms=one,crm; mode=dark\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 98\n}\nBody: {\"fields\":[\"65166fe89a2d3227fe64e0c3\",\"64ec81c86ab5735fdd037fb4\",\"657836bea975c19a0c987baf\",null]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Tue, 29 Jul 2025 06:35:54 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"101\",\n  \"connection\": \"keep-alive\",\n  \"cf-ray\": \"966a994eba40b232-DEL\",\n  \"x-powered-by\": \"Express\",\n  \"vary\": \"Origin\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-trace-id\": \"fdc73150-9c67-4fce-9d6e-0c2b6363fed9\",\n  \"etag\": \"W/\\\"65-BAGtW8oQH2C6hVMPSyHfNZinS8g\\\"\",\n  \"strict-transport-security\": \"max-age=31536000; includeSubDomains\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=7xdQAtKOvifWp7dB4AmvbNqSEWlEHBFAeqBpY504wvtxDcgkoeNcJapwYnt7Pmp0M49OOHrnara5YXfdpek0eSLQTfsup1MDcMoZAIjjfGLxJSAB7jbrsoqkgfjCMOM3XQ%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\",\n  \"server-timing\": \"cfL4;desc=\\\"?proto=TCP&rtt=25499&min_rtt=15712&rtt_var=13630&sent=8&recv=7&lost=0&retrans=0&sent_bytes=2854&recv_bytes=2553&delivery_rate=301564&cwnd=254&unsent_bytes=0&cid=6c3fb4a0ed2bf5dd&ts=398&x=0\\\"\"\n}\nBody: {\n  \"success\": false,\n  \"message\": \"Invalid input fields.3\",\n  \"traceId\": \"fdc73150-9c67-4fce-9d6e-0c2b6363fed9\"\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:133224:72)\n    at tryCatcher (https://api.butest.tech/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://api.butest.tech/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://api.butest.tech/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://api.butest.tech/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://api.butest.tech/__cypress/runner/cypress_runner.js:1701:18)\n    at _drainQueueStep (https://api.butest.tech/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://api.butest.tech/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://api.butest.tech/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://api.butest.tech/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at request (webpack://bu-testing/./cypress/selector/utility.js:33:14)\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:338:23)",
                    "diff": null
                  },
                  "uuid": "bf3c06db-c9b3-449b-b880-b97dc127a5ac",
                  "parentUUID": "57cba2dc-c048-4e12-8f94-c41c1820b1a9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"dsrc\", \"asc\" field",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"dsrc\", \"asc\" field",
                  "timedOut": null,
                  "duration": 3872,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"dsrc\", \"asc\"], userRole, createAccess, pipelineIds);",
                  "err": {
                    "message": "CypressError: `cy.request()` failed on:\n\nhttps://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: https://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzc3MTU0N30.lJ19BnefSxJE1O6o0c3utuB0iDOlvhXMNZnnj6kA7FA\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.14.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"ssid=68886bc38e319af865b1c928; refToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJzZXNzaW9uSWQiOiI2ODg4NmJjMzhlMzE5YWY4NjViMWM5MjgiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzg1NzM0N30.ncikPWw6vCO97C3HO4eX7xsMmUxq-Ksx-QawgZGlxz4; _rnms=one,crm; mode=dark\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 98\n}\nBody: {\"fields\":[\"65166fe89a2d3227fe64e0c3\",\"64ec81c86ab5735fdd037fb4\",null,\"669f4370fc1559d6c6cd16bc\"]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Tue, 29 Jul 2025 06:35:58 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"101\",\n  \"connection\": \"keep-alive\",\n  \"cf-ray\": \"966a99678fa3f04f-DEL\",\n  \"x-powered-by\": \"Express\",\n  \"vary\": \"Origin\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-trace-id\": \"990f544a-03be-43e1-9b78-e1ee22990382\",\n  \"etag\": \"W/\\\"65-mOp7UpVeKWpSaxsi3OMcozKmvP4\\\"\",\n  \"strict-transport-security\": \"max-age=31536000; includeSubDomains\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=wj5pWnakwGmEvXTnwBHVfHoEzo0MYZXQdyZxofQ5X%2B9Yck%2FGSbxjtFCwj3J%2BXJ41WBDOxPnuBsW3%2B7yckBEUSogSWabWbpqyvOqOBOvH%2B1eHllacm1a6B3%2BPSltw%2BvR11w%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\",\n  \"server-timing\": \"cfL4;desc=\\\"?proto=TCP&rtt=16970&min_rtt=12086&rtt_var=12871&sent=9&recv=8&lost=0&retrans=1&sent_bytes=2886&recv_bytes=2553&delivery_rate=113011&cwnd=254&unsent_bytes=0&cid=3f004afef4a162b3&ts=1406&x=0\\\"\"\n}\nBody: {\n  \"success\": false,\n  \"message\": \"Invalid input fields.2\",\n  \"traceId\": \"990f544a-03be-43e1-9b78-e1ee22990382\"\n}\n\n\nhttps://on.cypress.io/request",
                    "estack": "CypressError: `cy.request()` failed on:\n\nhttps://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: https://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzc3MTU0N30.lJ19BnefSxJE1O6o0c3utuB0iDOlvhXMNZnnj6kA7FA\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.14.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"ssid=68886bc38e319af865b1c928; refToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJzZXNzaW9uSWQiOiI2ODg4NmJjMzhlMzE5YWY4NjViMWM5MjgiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzg1NzM0N30.ncikPWw6vCO97C3HO4eX7xsMmUxq-Ksx-QawgZGlxz4; _rnms=one,crm; mode=dark\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 98\n}\nBody: {\"fields\":[\"65166fe89a2d3227fe64e0c3\",\"64ec81c86ab5735fdd037fb4\",null,\"669f4370fc1559d6c6cd16bc\"]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Tue, 29 Jul 2025 06:35:58 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"101\",\n  \"connection\": \"keep-alive\",\n  \"cf-ray\": \"966a99678fa3f04f-DEL\",\n  \"x-powered-by\": \"Express\",\n  \"vary\": \"Origin\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-trace-id\": \"990f544a-03be-43e1-9b78-e1ee22990382\",\n  \"etag\": \"W/\\\"65-mOp7UpVeKWpSaxsi3OMcozKmvP4\\\"\",\n  \"strict-transport-security\": \"max-age=31536000; includeSubDomains\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=wj5pWnakwGmEvXTnwBHVfHoEzo0MYZXQdyZxofQ5X%2B9Yck%2FGSbxjtFCwj3J%2BXJ41WBDOxPnuBsW3%2B7yckBEUSogSWabWbpqyvOqOBOvH%2B1eHllacm1a6B3%2BPSltw%2BvR11w%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\",\n  \"server-timing\": \"cfL4;desc=\\\"?proto=TCP&rtt=16970&min_rtt=12086&rtt_var=12871&sent=9&recv=8&lost=0&retrans=1&sent_bytes=2886&recv_bytes=2553&delivery_rate=113011&cwnd=254&unsent_bytes=0&cid=3f004afef4a162b3&ts=1406&x=0\\\"\"\n}\nBody: {\n  \"success\": false,\n  \"message\": \"Invalid input fields.2\",\n  \"traceId\": \"990f544a-03be-43e1-9b78-e1ee22990382\"\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:133224:72)\n    at tryCatcher (https://api.butest.tech/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://api.butest.tech/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://api.butest.tech/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://api.butest.tech/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://api.butest.tech/__cypress/runner/cypress_runner.js:1701:18)\n    at _drainQueueStep (https://api.butest.tech/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://api.butest.tech/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://api.butest.tech/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://api.butest.tech/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at request (webpack://bu-testing/./cypress/selector/utility.js:33:14)\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:338:23)",
                    "diff": null
                  },
                  "uuid": "ab7f1d73-1834-4116-bdb5-8159ed39ea76",
                  "parentUUID": "57cba2dc-c048-4e12-8f94-c41c1820b1a9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Create record with \"rad\", \"chk\" fields",
                  "fullTitle": "Nevigate the lead page and Create Lead Create record Create record with \"rad\", \"chk\" fields",
                  "timedOut": null,
                  "duration": 5379,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "createRecordScript([\"rad\", \"chk\"], userRole, createAccess, pipelineIds);",
                  "err": {
                    "message": "CypressError: `cy.request()` failed on:\n\nhttps://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: https://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzc3MTU0N30.lJ19BnefSxJE1O6o0c3utuB0iDOlvhXMNZnnj6kA7FA\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.14.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"ssid=68886bc38e319af865b1c928; refToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJzZXNzaW9uSWQiOiI2ODg4NmJjMzhlMzE5YWY4NjViMWM5MjgiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzg1NzM0N30.ncikPWw6vCO97C3HO4eX7xsMmUxq-Ksx-QawgZGlxz4; _rnms=one,crm; mode=dark\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 71\n}\nBody: {\"fields\":[\"65166fe89a2d3227fe64e0c3\",\"64ec81c86ab5735fdd037fb4\",null]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Tue, 29 Jul 2025 06:36:03 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"101\",\n  \"connection\": \"keep-alive\",\n  \"cf-ray\": \"966a9989cf925513-DEL\",\n  \"x-powered-by\": \"Express\",\n  \"vary\": \"Origin\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-trace-id\": \"6bf42dda-aa57-496a-a205-7a66468e9aac\",\n  \"etag\": \"W/\\\"65-LE+hFjeNRHuZEiy+u+yowTioglQ\\\"\",\n  \"strict-transport-security\": \"max-age=31536000; includeSubDomains\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=lWi2E10OqBF9O30wiObzV7W%2FypcFIm4IBHQCQKSijYWD94xaab6f0YJSCaN4x8dWUv6KgRo0OYARcMX5cmOm7ocT9SE8vm6GS1OpzMuAAO20INW8VEP1wwwkWDBpJwsuJw%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\",\n  \"server-timing\": \"cfL4;desc=\\\"?proto=TCP&rtt=10244&min_rtt=8373&rtt_var=5302&sent=8&recv=6&lost=0&retrans=0&sent_bytes=2850&recv_bytes=2526&delivery_rate=462723&cwnd=254&unsent_bytes=0&cid=8e6a3f86453dca1f&ts=2593&x=0\\\"\"\n}\nBody: {\n  \"success\": false,\n  \"message\": \"Invalid input fields.2\",\n  \"traceId\": \"6bf42dda-aa57-496a-a205-7a66468e9aac\"\n}\n\n\nhttps://on.cypress.io/request",
                    "estack": "CypressError: `cy.request()` failed on:\n\nhttps://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\n\nThe response we received from your web server was:\n\n  > 400: Bad Request\n\nThis was considered a failure because the status code was not `2xx` or `3xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: PATCH\nURL: https://api.butest.tech/fms/forms/config/create?module=crm&asset=contact&catId=6571b97887fceede597371f8\nHeaders: {\n  \"Connection\": \"keep-alive\",\n  \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzc3MTU0N30.lJ19BnefSxJE1O6o0c3utuB0iDOlvhXMNZnnj6kA7FA\",\n  \"user-agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Cypress/13.14.2 Chrome/118.0.5993.159 Electron/27.3.10 Safari/537.36\",\n  \"accept\": \"*/*\",\n  \"cookie\": \"ssid=68886bc38e319af865b1c928; refToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhc2hpc2guc2h1a2xhQGJ1b3Bzby5jb20iLCJ0eXBlIjoiZW1haWwiLCJzZXNzaW9uSWQiOiI2ODg4NmJjMzhlMzE5YWY4NjViMWM5MjgiLCJpYXQiOjE3NTM3NzA5NDcsImV4cCI6MTc1Mzg1NzM0N30.ncikPWw6vCO97C3HO4eX7xsMmUxq-Ksx-QawgZGlxz4; _rnms=one,crm; mode=dark\",\n  \"accept-encoding\": \"gzip, deflate\",\n  \"content-type\": \"application/json\",\n  \"content-length\": 71\n}\nBody: {\"fields\":[\"65166fe89a2d3227fe64e0c3\",\"64ec81c86ab5735fdd037fb4\",null]}\n\n-----------------------------------------------------------\n\nThe response we got was:\n\nStatus: 400 - Bad Request\nHeaders: {\n  \"date\": \"Tue, 29 Jul 2025 06:36:03 GMT\",\n  \"content-type\": \"application/json; charset=utf-8\",\n  \"content-length\": \"101\",\n  \"connection\": \"keep-alive\",\n  \"cf-ray\": \"966a9989cf925513-DEL\",\n  \"x-powered-by\": \"Express\",\n  \"vary\": \"Origin\",\n  \"access-control-allow-credentials\": \"true\",\n  \"x-trace-id\": \"6bf42dda-aa57-496a-a205-7a66468e9aac\",\n  \"etag\": \"W/\\\"65-LE+hFjeNRHuZEiy+u+yowTioglQ\\\"\",\n  \"strict-transport-security\": \"max-age=31536000; includeSubDomains\",\n  \"cf-cache-status\": \"DYNAMIC\",\n  \"report-to\": \"{\\\"endpoints\\\":[{\\\"url\\\":\\\"https:\\\\/\\\\/a.nel.cloudflare.com\\\\/report\\\\/v4?s=lWi2E10OqBF9O30wiObzV7W%2FypcFIm4IBHQCQKSijYWD94xaab6f0YJSCaN4x8dWUv6KgRo0OYARcMX5cmOm7ocT9SE8vm6GS1OpzMuAAO20INW8VEP1wwwkWDBpJwsuJw%3D%3D\\\"}],\\\"group\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"nel\": \"{\\\"success_fraction\\\":0,\\\"report_to\\\":\\\"cf-nel\\\",\\\"max_age\\\":604800}\",\n  \"server\": \"cloudflare\",\n  \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\",\n  \"server-timing\": \"cfL4;desc=\\\"?proto=TCP&rtt=10244&min_rtt=8373&rtt_var=5302&sent=8&recv=6&lost=0&retrans=0&sent_bytes=2850&recv_bytes=2526&delivery_rate=462723&cwnd=254&unsent_bytes=0&cid=8e6a3f86453dca1f&ts=2593&x=0\\\"\"\n}\nBody: {\n  \"success\": false,\n  \"message\": \"Invalid input fields.2\",\n  \"traceId\": \"6bf42dda-aa57-496a-a205-7a66468e9aac\"\n}\n\n\nhttps://on.cypress.io/request\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:133224:72)\n    at tryCatcher (https://api.butest.tech/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://api.butest.tech/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://api.butest.tech/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://api.butest.tech/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://api.butest.tech/__cypress/runner/cypress_runner.js:1701:18)\n    at _drainQueueStep (https://api.butest.tech/__cypress/runner/cypress_runner.js:2407:12)\n    at _drainQueue (https://api.butest.tech/__cypress/runner/cypress_runner.js:2400:9)\n    at Async._drainQueues (https://api.butest.tech/__cypress/runner/cypress_runner.js:2416:5)\n    at Async.drainQueues (https://api.butest.tech/__cypress/runner/cypress_runner.js:2286:14)\nFrom Your Spec Code:\n    at request (webpack://bu-testing/./cypress/selector/utility.js:33:14)\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:338:23)",
                    "diff": null
                  },
                  "uuid": "f2d26631-686e-4583-bfdf-b94d35c13235",
                  "parentUUID": "57cba2dc-c048-4e12-8f94-c41c1820b1a9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "4f520129-3ff2-4685-8c21-3b699bbf8e6b",
                "bf3c06db-c9b3-449b-b880-b97dc127a5ac",
                "ab7f1d73-1834-4116-bdb5-8159ed39ea76",
                "f2d26631-686e-4583-bfdf-b94d35c13235"
              ],
              "pending": [],
              "skipped": [],
              "duration": 18833,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "070a7c21-3582-4d38-ad2c-b175faf724c7",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "41dede03-35f2-4b5d-9b35-5e7cd89df81a",
          "title": "Nevigate on lead asset page and edit record",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\editRecord.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Edit record with single line text field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with single line text field",
              "timedOut": null,
              "duration": 18708,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  userRole = response.body.result.user.role;\n  cy.wait(\"@existsPipeline\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    editAccess = response.body.result.tools.edit;\n    cyGet(`[data-testid=\"butoolbar-grid-2yad1y8r5\"] [data-testid=\"budropdown-box-ty1opau5a\"] button`).click();\n    cy.wait(\"@getPipeline\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      pipelineIds = response.body.result.values.map(ele => ele.id);\n      updateRecordScript([\"str\"], userRole, editAccess, pipelineIds);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contact Id' within the element: <div.MuiFormControl-root.MuiFormControl-fullWidth.MuiTextField-root.field.jss90.css-5pibqg> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contact Id' within the element: <div.MuiFormControl-root.MuiFormControl-fullWidth.MuiTextField-root.field.jss90.css-5pibqg> but never did.\n    at fieldOnForm (webpack://bu-testing/./cypress/helpers/record.js:68:9)\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:389:20)",
                "diff": null
              },
              "uuid": "86add0af-b895-479f-a3c7-7bf9fe9e97d4",
              "parentUUID": "41dede03-35f2-4b5d-9b35-5e7cd89df81a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with multi line text field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with multi line text field",
              "timedOut": null,
              "duration": 1490,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"txa\"], userRole, editAccess, pipelineIds);",
              "err": {
                "message": "Error: Field not found for given prop",
                "estack": "Error: Field not found for given prop\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:377:40)",
                "diff": null
              },
              "uuid": "7b3b1ff8-393a-4563-b21e-6acfc57a7995",
              "parentUUID": "41dede03-35f2-4b5d-9b35-5e7cd89df81a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with email field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with email field",
              "timedOut": null,
              "duration": 13338,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"eml\"], userRole, editAccess, pipelineIds);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contact Id' within the element: <div.MuiFormControl-root.MuiFormControl-fullWidth.MuiTextField-root.field.jss90.css-5pibqg> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contact Id' within the element: <div.MuiFormControl-root.MuiFormControl-fullWidth.MuiTextField-root.field.jss90.css-5pibqg> but never did.\n    at fieldOnForm (webpack://bu-testing/./cypress/helpers/record.js:68:9)\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:389:20)",
                "diff": null
              },
              "uuid": "cadbdd4c-c4c3-44e9-8330-810b985ee20e",
              "parentUUID": "41dede03-35f2-4b5d-9b35-5e7cd89df81a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with number field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with number field",
              "timedOut": null,
              "duration": 13017,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"num\"], userRole, editAccess, pipelineIds);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contact Id' within the element: <div.MuiFormControl-root.MuiFormControl-fullWidth.MuiTextField-root.field.jss90.css-5pibqg> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contact Id' within the element: <div.MuiFormControl-root.MuiFormControl-fullWidth.MuiTextField-root.field.jss90.css-5pibqg> but never did.\n    at fieldOnForm (webpack://bu-testing/./cypress/helpers/record.js:68:9)\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:389:20)",
                "diff": null
              },
              "uuid": "9adb46b2-daa8-406c-ba61-7b2b4160c0e3",
              "parentUUID": "41dede03-35f2-4b5d-9b35-5e7cd89df81a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with url field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with url field",
              "timedOut": null,
              "duration": 2132,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"url\"], userRole, editAccess, pipelineIds);",
              "err": {
                "message": "Error: Field not found for given prop",
                "estack": "Error: Field not found for given prop\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:377:40)",
                "diff": null
              },
              "uuid": "4ec9cc4a-0b43-484d-897e-1d98b618fc7c",
              "parentUUID": "41dede03-35f2-4b5d-9b35-5e7cd89df81a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with simple dropdown field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with simple dropdown field",
              "timedOut": null,
              "duration": 14654,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"bas\"], userRole, editAccess, pipelineIds);",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contact Id' within the element: <div.MuiFormControl-root.MuiFormControl-fullWidth.MuiTextField-root.field.jss120.jss121.css-5pibqg> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contact Id' within the element: <div.MuiFormControl-root.MuiFormControl-fullWidth.MuiTextField-root.field.jss120.jss121.css-5pibqg> but never did.\n    at fieldOnForm (webpack://bu-testing/./cypress/helpers/record.js:68:9)\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:389:20)",
                "diff": null
              },
              "uuid": "b6dd90fa-fb9a-4a0e-a0d6-ee0d92b2f835",
              "parentUUID": "41dede03-35f2-4b5d-9b35-5e7cd89df81a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with checkbox field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with checkbox field",
              "timedOut": null,
              "duration": 1596,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"chk\"], userRole, editAccess, pipelineIds);",
              "err": {
                "message": "Error: Field not found for given prop",
                "estack": "Error: Field not found for given prop\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:377:40)",
                "diff": null
              },
              "uuid": "05fcfffa-d3e9-4c4f-b040-d6410efafdb9",
              "parentUUID": "41dede03-35f2-4b5d-9b35-5e7cd89df81a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with radio field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with radio field",
              "timedOut": null,
              "duration": 1177,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"rad\"], userRole, editAccess, pipelineIds);",
              "err": {
                "message": "Error: Field not found for given prop",
                "estack": "Error: Field not found for given prop\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:377:40)",
                "diff": null
              },
              "uuid": "ba0041bf-add1-42db-b747-d2590c7f93b3",
              "parentUUID": "41dede03-35f2-4b5d-9b35-5e7cd89df81a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit record with data source field",
              "fullTitle": "Nevigate on lead asset page and edit record Edit record with data source field",
              "timedOut": null,
              "duration": 1851,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "updateRecordScript([\"dsrc\"], userRole, editAccess, pipelineIds);",
              "err": {
                "message": "Error: Field not found for given prop",
                "estack": "Error: Field not found for given prop\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:377:40)",
                "diff": null
              },
              "uuid": "8d633846-f059-453e-86c5-010264d7c2af",
              "parentUUID": "41dede03-35f2-4b5d-9b35-5e7cd89df81a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "86add0af-b895-479f-a3c7-7bf9fe9e97d4",
            "7b3b1ff8-393a-4563-b21e-6acfc57a7995",
            "cadbdd4c-c4c3-44e9-8330-810b985ee20e",
            "9adb46b2-daa8-406c-ba61-7b2b4160c0e3",
            "4ec9cc4a-0b43-484d-897e-1d98b618fc7c",
            "b6dd90fa-fb9a-4a0e-a0d6-ee0d92b2f835",
            "05fcfffa-d3e9-4c4f-b040-d6410efafdb9",
            "ba0041bf-add1-42db-b747-d2590c7f93b3",
            "8d633846-f059-453e-86c5-010264d7c2af"
          ],
          "pending": [],
          "skipped": [],
          "duration": 67963,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4ea3ebc6-b44a-46c3-bf41-bed4de1351a9",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "47cc403a-aec1-46b5-9187-4c542a0fa98c",
          "title": "Test the functionality of follow up",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\followUp.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create follow-up for record",
              "fullTitle": "Test the functionality of follow up Create follow-up for record",
              "timedOut": null,
              "duration": 17785,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cyGet(`[data-testid=\"followup-typography-buacu26k2\"]`).should(\"contain.text\", \"Follow-up date\")\ncy.wait(\"@followupStatus\", {\n  timeout: 30000\n}).then(({\n  response\n}) => {\n  var _response$body$result;\n  twosecondWait();\n  const followStatus = (_response$body$result = response.body.result) === null || _response$body$result === void 0 ? void 0 : _response$body$result.status;\n  cyGet(`[data-testid=\"followup-iconbutton-4twf9rpig\"]`).click();\n  if (followStatus === \"pending\") {\n    inputRemark();\n    cy.reload();\n    createNewFollowUP();\n  } else {\n    createNewFollowUP();\n  }\n});",
              "err": {},
              "uuid": "bafa6c2b-becb-45c5-b226-276bc21fe5be",
              "parentUUID": "47cc403a-aec1-46b5-9187-4c542a0fa98c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify folow up created or not",
              "fullTitle": "Test the functionality of follow up Verify folow up created or not",
              "timedOut": null,
              "duration": 20539,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet(`[aria-label=\"Follow Up\"]`).click();\ncy.wait(\"@getFollowup\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const followupDetail = response.body.result.values[0];\n  const formattedScheduledOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.scheduledOn).format(\"DD MMM YYYY, h:mm A\");\n  const formattedCreatedOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.createdOn).format(\"DD MMM YYYY, h:mm A\");\n  cyGet(`#tool-container [data-testid=\"followuplist-box-ans7d4l18\"] h6`).should(\"contain.text\", \"Follow-up History\");\n  cyGet(`#tool-container [data-testid=\"followuplist-typography-rweu6rcqo\"]`).should(\"contain.text\", \"Scheduled on: \");\n  cyGet(`#tool-container [data-testid=\"followuplist-typography-rweu6rcqo\"]`).should(\"contain.text\", formattedScheduledOn);\n  cyGet(`#tool-container [data-testid=\"followuplist-typography-66kydwtv0\"]`).should(\"contain.text\", formattedCreatedOn);\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `#tool-container [data-testid=\"followuplist-typography-rweu6rcqo\"]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `#tool-container [data-testid=\"followuplist-typography-rweu6rcqo\"]`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/3_records/followUp.js:73:87)",
                "diff": null
              },
              "uuid": "f9699e51-0388-4eaf-9884-0c56121533d9",
              "parentUUID": "47cc403a-aec1-46b5-9187-4c542a0fa98c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remark follow Up",
              "fullTitle": "Test the functionality of follow up Remark follow Up",
              "timedOut": null,
              "duration": 21449,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet(`[data-testid=\"followup-iconbutton-4twf9rpig\"]`).click();\ninputRemark();",
              "err": {
                "message": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[role=\"tooltip\"] [data-testid=\"butextarea-textfield-nvtcklezl\"] label`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 15000ms: Expected to find element: `[role=\"tooltip\"] [data-testid=\"butextarea-textfield-nvtcklezl\"] label`, but never found it.\n    at cyGet (webpack://bu-testing/./cypress/helpers/global.js:10:47)\n    at inputRemark (webpack://bu-testing/./cypress/e2e/lms/lead/3_records/followUp.js:33:8)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/3_records/followUp.js:82:8)",
                "diff": null
              },
              "uuid": "54bf1fcb-7a7c-4f5f-9a70-947a35ddba71",
              "parentUUID": "47cc403a-aec1-46b5-9187-4c542a0fa98c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "verify follow up after remark",
              "fullTitle": "Test the functionality of follow up verify follow up after remark",
              "timedOut": null,
              "duration": 5087,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[aria-label=\"Follow Up\"]`).click();\ncy.wait(\"@getFollowup\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const followupDetail = response.body.result.values[0];\n  const formattedScheduledOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.scheduledOn).format(\"DD MMM YYYY, h:mm A\");\n  const formattedCreatedOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.createdOn).format(\"DD MMM YYYY, h:mm A\");\n  const formattedfollowedUpOn = moment(followupDetail === null || followupDetail === void 0 ? void 0 : followupDetail.followedUpOn).format(\"DD MMM YYYY, h:mm A\");\n  validateFollowup(`[data-testid=\"followuplist-typography-uvdjc7jp2\"]`, \"Scheduled on\");\n  validateFollowup(`[data-testid=\"followuplist-typography-2uwam0ib5\"]`, formattedScheduledOn);\n  validateFollowup(`[data-testid=\"followuplist-typography-mbqzjmh26\"]`, \"Followed up on\");\n  validateFollowup(`[data-testid=\"followuplist-typography-oaxl04km4\"]`, formattedfollowedUpOn);\n  validateFollowup(`[data-testid=\"followuplist-typography-9p4iy3xy5\"]`, \"Creation date\");\n  validateFollowup(`[data-testid=\"followuplist-typography-j73cs8h41\"]`, formattedCreatedOn);\n});",
              "err": {},
              "uuid": "dfdd86ed-c394-43f9-ace4-b31cdcb3130a",
              "parentUUID": "47cc403a-aec1-46b5-9187-4c542a0fa98c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bafa6c2b-becb-45c5-b226-276bc21fe5be",
            "dfdd86ed-c394-43f9-ace4-b31cdcb3130a"
          ],
          "failures": [
            "f9699e51-0388-4eaf-9884-0c56121533d9",
            "54bf1fcb-7a7c-4f5f-9a70-947a35ddba71"
          ],
          "pending": [],
          "skipped": [],
          "duration": 64860,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "cec56218-7e66-4b4f-a32b-423bfdc547c8",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
      "file": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bd6e176b-8eb6-4c7d-97a5-c9b424b7de6c",
          "title": "Visit the import page and import record",
          "fullFile": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
          "file": "cypress\\e2e\\lms\\lead\\3_records\\import.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Ensure the asset box is available for import on the Import page.",
              "fullTitle": "Visit the import page and import record Ensure the asset box is available for import on the Import page.",
              "timedOut": null,
              "duration": 5296,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@getAsset\", {\n  timeout: 15000\n}).then(({\n  response\n}) => {\n  var _response$body, _assetData, _assetData2;\n  assetData = response === null || response === void 0 || (_response$body = response.body) === null || _response$body === void 0 || (_response$body = _response$body.result) === null || _response$body === void 0 ? void 0 : _response$body.find(ast => ast.id === asset);\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData = assetData) === null || _assetData === void 0 ? void 0 : _assetData.label).next().should(\"contain.text\", assetDescription(asset));\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData2 = assetData) === null || _assetData2 === void 0 ? void 0 : _assetData2.label).parent().find(`button [aria-label=\"Select pipeline\"]`);\n});",
              "err": {},
              "uuid": "32ec2f16-bbe4-4909-b1ce-7f2c1b0751c1",
              "parentUUID": "bd6e176b-8eb6-4c7d-97a5-c9b424b7de6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ensure the Import button is disabled until a pipeline is selected.",
              "fullTitle": "Visit the import page and import record Ensure the Import button is disabled until a pipeline is selected.",
              "timedOut": null,
              "duration": 886,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _assetData3;\n// cy.wait(\"@getAsset\", { timeout: 15000 }).then(({ response }) => {\n//     const assetData = response?.body?.result?.find(ast => ast.id === asset)\ncyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData3 = assetData) === null || _assetData3 === void 0 ? void 0 : _assetData3.label).parent().find(`button [aria-label=\"Select pipeline\"]`).should(\"contain.text\", \"Select pipeline\");\ncyGet(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).should(\"be.disabled\");\n// })",
              "err": {},
              "uuid": "cf1ece1a-f9bf-45dc-a954-7e2c48dd4ced",
              "parentUUID": "bd6e176b-8eb6-4c7d-97a5-c9b424b7de6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Download sample spreadsheet",
              "fullTitle": "Visit the import page and import record Download sample spreadsheet",
              "timedOut": null,
              "duration": 5566,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var _assetData4;\n// cy.wait(\"@getAsset\", { timeout: 10000 }).then(({ response }) => {\n//     const assetData = response?.body?.result?.find(ast => ast.id === asset)\ncyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData4 = assetData) === null || _assetData4 === void 0 ? void 0 : _assetData4.label).parent().find(`button [aria-label=\"Select pipeline\"]`).click();\ncy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _assetData5;\n  const totalPipelines = response.body.result.pages.totalRecords;\n  const pipelineLabel = response.body.result.values.slice(0, 1).map(pip => pip.label);\n  cy.log(JSON.stringify(pipelineLabel));\n  if (totalPipelines > 5) {\n    buSearchbox(globalSel.search, pipelineLabel[0]);\n  }\n  budropdownOption(pipelineLabel[0]).first().click();\n  cyGet(`[data-testid=\"download\"]`).contains(\"Download sample spreadsheet\").click();\n  cyGet(`[data-testid=\"withtruncate-wrapped-jhk5rb2jw\"]`).contains(\"Download sample spreadsheet\");\n  cyGet(`[data-testid=\"downloaddrawer-typography-9qmfph90r\"]`).contains(\"Sample import files\");\n  cyGet(`[data-testid=\"downloaddrawer-typography-j1aqze5i1\"]`).contains(\"This sample file shows the required column headers you need for your import file\");\n  cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`).first().find(`[data-testid=\"downloaddrawer-box-yv4v1mdli\"] [data-testid=\"downloaddrawer-typography-lysrpjimb\"]`).contains((_assetData5 = assetData) === null || _assetData5 === void 0 ? void 0 : _assetData5.label);\n  cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`).first().find(`[data-testid=\"downloaddrawer-b-ft7iumddc\"]`).contains(pipelineLabel[0]);\n  cyGet(`[data-testid=\"downloaddrawer-box-59hmn381s\"] ul`).first().find(`[data-testid=\"downloaddrawer-typography-xj4o496p9\"]`).contains(\"CSV\");\n});\n// cyGet(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).should(\"be.disabled\")\n// })",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contact' within the element: <span.MuiTypography-root.MuiTypography-caption.css-5llrei> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Contact' within the element: <span.MuiTypography-root.MuiTypography-caption.css-5llrei> but never did.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/3_records/import.js:100:17)",
                "diff": null
              },
              "uuid": "7972bd22-e946-4063-bab9-a98b2045e826",
              "parentUUID": "bd6e176b-8eb6-4c7d-97a5-c9b424b7de6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Import file and generate record",
              "fullTitle": "Visit the import page and import record Import file and generate record",
              "timedOut": null,
              "duration": 11242,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var _assetData6;\n// cy.wait(\"@getAsset\", { timeout: 10000 }).then(({ response }) => {\n//     const assetData = response?.body?.result?.find(ast => ast.id === asset)\ncyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData6 = assetData) === null || _assetData6 === void 0 ? void 0 : _assetData6.label).parent().find(`button [aria-label=\"Select pipeline\"]`).click();\ncy.wait(\"@getPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _assetData7;\n  const totalPipelines = response.body.result.pages.totalRecords;\n  const pipelineLabel = response.body.result.values.slice(0, 1).map(pip => pip.label);\n  const fileName = getFileForAsset(asset, pipelineLabel[0]);\n  cy.log(JSON.stringify(pipelineLabel));\n  if (totalPipelines > 5) {\n    buSearchbox(globalSel.search, pipelineLabel[0]);\n  }\n  budropdownOption(pipelineLabel[0]).first().click({\n    force: true\n  });\n  cyGet(`[data-testid=\"importactorcard-typography-pacnp8jj6\"`).contains((_assetData7 = assetData) === null || _assetData7 === void 0 ? void 0 : _assetData7.label).parent().find(`[data-testid=\"importactorcard-box-n9imbz6v3\"] button`).click();\n  cyGet(`[data-testid=\"uploadfile-input-r5bkv246o\"]`).selectFile(fileName, {\n    force: true\n  });\n  twosecondWait();\n  cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n  twosecondWait();\n  cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n  cyGet(`#fileName-label`).should(\"contain.text\", \"Import file name\");\n  // cyGet(`input[placeholder=\"Enter file name\"]`).should(\"have.value\", fileName)\n  cy.wait(\"@requiredProps\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const requiredFields = response.body.result.values.filter(ele => ele.required === true);\n    if (requiredFields.length > 0) {\n      propwiseFields(requiredFields);\n    }\n  });\n  cyGet(`[data-testid=\"process-box-s7mkqf9qx\"] > button`).contains(\"Next\").click();\n  cyGet(`[data-testid=\"importcommit-box-8kavef2af\"] > button`).contains(\"Confirm import\").click();\n});\n// });",
              "err": {
                "message": "CypressError: Timed out retrying after 4050ms: `cy.click()` failed because this element is `disabled`:\n\n`<button class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorPrimary Mui-disabled MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorPrimary css-p67abc\" tabindex=\"-1\" type=\"button\" style=\"text-wrap: nowrap;\" disabled=\"\">...</button>`\n\nFix this problem, or use `{force: true}` to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with",
                "estack": "CypressError: Timed out retrying after 4050ms: `cy.click()` failed because this element is `disabled`:\n\n`<button class=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorPrimary Mui-disabled MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButton-colorPrimary css-p67abc\" tabindex=\"-1\" type=\"button\" style=\"text-wrap: nowrap;\" disabled=\"\">...</button>`\n\nFix this problem, or use `{force: true}` to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n    at Object.isNotDisabled (https://api.butest.tech/__cypress/runner/cypress_runner.js:145278:58)\n    at runAllChecks (https://api.butest.tech/__cypress/runner/cypress_runner.js:113196:26)\n    at retryActionability (https://api.butest.tech/__cypress/runner/cypress_runner.js:113285:16)\n    at tryCatcher (https://api.butest.tech/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (https://api.butest.tech/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (https://api.butest.tech/__cypress/runner/cypress_runner.js:144102:68)\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:144043:14)\n    at tryCatcher (https://api.butest.tech/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://api.butest.tech/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://api.butest.tech/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://api.butest.tech/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://api.butest.tech/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (https://api.butest.tech/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/3_records/import.js:141:85)",
                "diff": null
              },
              "uuid": "cd3735e7-45d8-414d-8cfc-7c18f86a0c58",
              "parentUUID": "bd6e176b-8eb6-4c7d-97a5-c9b424b7de6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32ec2f16-bbe4-4909-b1ce-7f2c1b0751c1",
            "cf1ece1a-f9bf-45dc-a954-7e2c48dd4ced"
          ],
          "failures": [
            "7972bd22-e946-4063-bab9-a98b2045e826",
            "cd3735e7-45d8-414d-8cfc-7c18f86a0c58"
          ],
          "pending": [],
          "skipped": [],
          "duration": 22990,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "72578a1e-4ded-4601-b012-3674830e8312",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "55bf83d9-a7e6-43d4-9bd3-bbb39b346e80",
          "title": "Test the functionality of Activity log",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\activities.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Activity log of update record",
              "fullTitle": "Test the functionality of Activity log Activity log of update record",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "// cy.get('table > tbody > :nth-child(1)').click()\ncy.wait(1000);\ncy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").clear();\ncy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").type(faker.string.numeric(10));\ncy.get(lead.typeBtn).contains(\"Save\").click();\ncy.wait(1000);\ncy.get('[aria-label=\"Activities\"] > .MuiButtonBase-root').click();\ncy.get('.MuiTooltip-tooltip').should(\"have.text\", \"Activities\");\ncy.wait(\"@activity\").then(({\n  response\n}) => {\n  // let preValue = response.body.result.values[0].prev\n  let curValue = response.body.result.values[0].currentValue;\n  // let previousValue = preValue.toString()\n  let currentValue = `${curValue} `.toString();\n  // let userIdKey = Object.keys(response.body.result.users)\n  // cy.get(`${lead.chooseOptions} > :first`).find(\"aria-label\",previousValue).should(\"have.text\", previousValue)\n  // cy.get(`.ReactVirtualized__Grid__innerScrollContainer [aria-label=${previousValue}]`).should(\"have.text\", previousValue)\n  cy.get(`.ReactVirtualized__Grid__innerScrollContainer [aria-label=${currentValue}]`).should(\"have.text\", currentValue);\n});",
              "err": {},
              "uuid": "d825f908-2a77-485c-846c-e824b6b6332b",
              "parentUUID": "55bf83d9-a7e6-43d4-9bd3-bbb39b346e80",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "d825f908-2a77-485c-846c-e824b6b6332b"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "be65efa0-6ef0-4145-a5df-b955cefe413f",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "42f4724f-b228-4c61-a066-e239ba8da9ce",
          "title": "Navigate on lead and test Export functoinality",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\export.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check the behavior of the Export button based on the total number of records in a pipeline",
              "fullTitle": "Navigate on lead and test Export functoinality Check the behavior of the Export button based on the total number of records in a pipeline",
              "timedOut": null,
              "duration": 6497,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click()\n// cyGet(`[data-testid=\"title-dialog\"] p`).should(\"contain.text\", \"Export\");\ncy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  email = response.body.result.user.email;\n  role = response.body.result.user.role;\n  // const userRole = response.body.result.user.email;\n  cy.wait(\"@existsPipelines\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const accessToExport = response.body.result.tools.export;\n    if (role === \"std\" && !accessToExport) {\n      cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n    } else {\n      cy.wait(\"@recordGrid\", {\n        timeout: 10000\n      }).then(({\n        response\n      }) => {\n        const totalRecord = response.body.result.pages.totalRecords;\n        cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n        cyGet(`[data-testid=\"title-dialog\"] p`).should(\"contain.text\", \"Export\");\n        cyGet(`[data-testid=\"exportactor-typography-7vhpyacm5\"]`).contains(`Once exported, the file will be sent to ${email} and you will be notified.`);\n        cyGet(`[data-testid=\"exportactor-typography-awnrepr3p\"]`).contains(`Total number of records after all filters are applied:${totalRecord}`);\n        const total = Number(totalRecord);\n        cyGet('[role=\"dialog\"] [data-testid=\"Export\"]').should(total === 0 || total > 10000 ? 'be.disabled' : 'not.be.disabled');\n      });\n    }\n    ;\n  });\n});",
              "err": {},
              "uuid": "5db96de0-88d5-4363-bf52-7f5344b46cca",
              "parentUUID": "42f4724f-b228-4c61-a066-e239ba8da9ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Export records based on the creation date range filter selected on the export page",
              "fullTitle": "Navigate on lead and test Export functoinality Export records based on the creation date range filter selected on the export page",
              "timedOut": null,
              "duration": 8903,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (role === \"std\" && !accessToExport) {\n  cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n} else {\n  cy.wait(\"@recordGrid\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const totalRecord = response.body.result.pages.totalRecords;\n    cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n    cyGet(`[data-testid=\"exportactor-typography-awnrepr3p\"]`).contains(`Total number of records after all filters are applied:${totalRecord}`);\n    cy.get('[data-testid=\"exportactor-grid-zywx8bilv\"] [data-testid=\"budate-iconbutton-v63dt06ut\"]').click();\n    cy.get('[aria-label=\"Previous month\"]').click();\n    cy.get('[role=\"row\"]').contains(pastDay).click();\n    cyGet(`[name=\"File format\"]`).click();\n    budropdownOption(\"csv\").first().click();\n    cy.get('[data-testid=\"exportactor-grid-ti62k6zn2\"] [data-testid=\"budate-iconbutton-v63dt06ut\"]').click();\n    cy.get('[role=\"dialog\"] [role=\"row\"]').filter(':visible').contains((0, _moment.default)().date()).click();\n    cy.wait(\"@recordCount\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const recordToExport = response.body.result;\n      if (recordToExport > 0 && recordToExport < 10000) {\n        cyGet(`[role=\"dialog\"] [data-testid=\"Export\"]`).click();\n      } else {\n        throw new Error(`Record for Export:${recordToExport}`);\n      }\n    });\n    cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Export request submitted successfully. Please check your email address after sometime.\");\n  });\n}\n;",
              "err": {
                "message": "Error: Record for Export:0",
                "estack": "Error: Record for Export:0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/export.js:80:30)",
                "diff": null
              },
              "uuid": "2920b282-b48b-4109-b5d2-273ae6acfa94",
              "parentUUID": "42f4724f-b228-4c61-a066-e239ba8da9ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter record and Export records",
              "fullTitle": "Navigate on lead and test Export functoinality Filter record and Export records",
              "timedOut": null,
              "duration": 10691,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (role === \"std\" && !accessToExport) {\n  cyGet(`[data-testid=\"Export\"]`).should(\"be.disabled\");\n} else {\n  cy.wait(\"@existsPipelines\", {\n    timeout: 10000\n  });\n  cyGet(`#filter`).click();\n  cy.wait(\"@filters\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const uidField = response.body.result.find(ele => ele.prop === \"uid\");\n    cyGet(`[placeholder=\"Search...\"]`).type(uidField.label);\n    onesecondWait();\n    cyGet(`[data-testid=\"filterheader-box-jox1agcx8\"] > [aria-label=\"${uidField.label}\"]`).click();\n    cyGet(`[data-testid=\"comparestringfilter-box-f914y6cfe\"] [placeholder=\"Add value...\"]`).type(1);\n    onesecondWait();\n    cyGet(`[data-testid=\"Export\"]`).contains(\"Export\").click();\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const totalRecord = response.body.result.pages.totalRecords;\n      if (totalRecord > 0 && totalRecord < 10000) {\n        cyGet(`[role=\"dialog\"] [data-testid=\"Export\"]`).click();\n      } else {\n        throw new Error(`Record for Export:${totalRecord}`);\n      }\n      cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Export request submitted successfully. Please check your email address after sometime.\");\n    });\n  });\n}\n;",
              "err": {},
              "uuid": "1ecfe9b7-b794-46dc-96f6-d8f5eddb7c01",
              "parentUUID": "42f4724f-b228-4c61-a066-e239ba8da9ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5db96de0-88d5-4363-bf52-7f5344b46cca",
            "1ecfe9b7-b794-46dc-96f6-d8f5eddb7c01"
          ],
          "failures": [
            "2920b282-b48b-4109-b5d2-273ae6acfa94"
          ],
          "pending": [],
          "skipped": [],
          "duration": 26091,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d85fcb3d-9a1a-4a81-8c76-473d4b6b38c9",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "199c9c12-21ad-4ff7-866d-923e0cf04130",
          "title": "Navigate on filter and test filter functoinality",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\filter.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b882c6f1-d603-437f-ae79-854babe8237a",
              "title": "Apply filter on string-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Apply “contains” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “contains” filter",
                  "timedOut": null,
                  "duration": 9483,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues[0].substring(0, 3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Contains\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const filterdValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n    expect(filterdValues[0]).contains(firstThreeChars);\n    response.body.result.values.forEach(valueArray => {\n      expect(valueArray[stringBasedProp.id]).to.contain(firstThreeChars);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading 'substring')",
                    "estack": "TypeError: Cannot read properties of undefined (reading 'substring')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/filter.js:37:59)",
                    "diff": null
                  },
                  "uuid": "0f50bee8-ffd1-4b23-b5ca-a113af91dc30",
                  "parentUUID": "b882c6f1-d603-437f-ae79-854babe8237a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Does not contains” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Does not contains” filter",
                  "timedOut": null,
                  "duration": 6597,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues[0].substring(0, 3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Does not contains\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      expect(valueArray[stringBasedProp.id]).not.contain(firstThreeChars);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading 'substring')",
                    "estack": "TypeError: Cannot read properties of undefined (reading 'substring')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/filter.js:54:59)",
                    "diff": null
                  },
                  "uuid": "aed59bd9-12ca-4336-ac87-f2df9e991344",
                  "parentUUID": "b882c6f1-d603-437f-ae79-854babe8237a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Starts with” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Starts with” filter",
                  "timedOut": null,
                  "duration": 8026,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n  const firstThreeChars = findFieldValues[0].substring(0, 3);\n  filterElements(stringBasedProp.label, firstThreeChars, \"Starts with\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(value => {\n      const startingDigit = value[stringBasedProp.id].substring(0, 3);\n      expect(startingDigit).to.equal(firstThreeChars);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading 'substring')",
                    "estack": "TypeError: Cannot read properties of undefined (reading 'substring')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/filter.js:70:59)",
                    "diff": null
                  },
                  "uuid": "a66ef5c4-39ed-4c33-b12e-8b33c7b1abcf",
                  "parentUUID": "b882c6f1-d603-437f-ae79-854babe8237a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply \"Ends with\" filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply \"Ends with\" filter",
                  "timedOut": null,
                  "duration": 6155,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n  const lastThreeChars = findFieldValues[0].slice(-3);\n  filterElements(stringBasedProp.label, lastThreeChars, \"Ends with\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(value => {\n      const lastDigits = value[stringBasedProp.id].slice(-3);\n      expect(lastDigits).to.equal(lastThreeChars);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {
                    "message": "TypeError: Cannot read properties of undefined (reading 'slice')",
                    "estack": "TypeError: Cannot read properties of undefined (reading 'slice')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/filter.js:87:58)",
                    "diff": null
                  },
                  "uuid": "4e73354c-f5ce-4bf1-afc3-b0c853d1e2ba",
                  "parentUUID": "b882c6f1-d603-437f-ae79-854babe8237a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Equals” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Equals” filter",
                  "timedOut": null,
                  "duration": 10492,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n  filterElements(stringBasedProp.label, findFieldValues[0], \"Equals\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      expect(valueArray[stringBasedProp.id]).eq(findFieldValues[0]);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {
                    "message": "CypressError: `cy.type()` can only accept a string or number. You passed in: `undefined`\n\nhttps://on.cypress.io/type",
                    "estack": "CypressError: `cy.type()` can only accept a string or number. You passed in: `undefined`\n\nhttps://on.cypress.io/type\n    at Context.type (https://api.butest.tech/__cypress/runner/cypress_runner.js:115326:68)\n    at wrapped (https://api.butest.tech/__cypress/runner/cypress_runner.js:138450:19)\nFrom Your Spec Code:\n    at filterElements (webpack://bu-testing/./cypress/helpers/filter.js:15:92)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/filter.js:104:16)",
                    "diff": null
                  },
                  "uuid": "c40dabd6-4b8c-4cd5-884e-bd3d808989d7",
                  "parentUUID": "b882c6f1-d603-437f-ae79-854babe8237a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply “Does not equals” filter",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on string-based field to filter the records Apply “Does not equals” filter",
                  "timedOut": null,
                  "duration": 12113,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@gridRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const stringBasedProp = response.body.result.view.columns.find(fld => [\"phn\", \"str\", \"txa\"].includes(fld.prop));\n  const findFieldValues = response.body.result.values.map(ele => ele[stringBasedProp.id]);\n  filterElements(stringBasedProp.label, findFieldValues[0], \"Does not equals\");\n  cy.wait(\"@gridRecord\");\n  cy.wait(\"@gridRecord\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    response.body.result.values.forEach(valueArray => {\n      expect(valueArray[stringBasedProp.id]).not.eq(findFieldValues[0]);\n    });\n  });\n  cyGet('[data-testid=\"filtercomponentheader-box-im1u1ii6n\"] > [data-testid=\"buchip-chip-5r51zm55o\"]').click();\n});",
                  "err": {
                    "message": "CypressError: `cy.type()` can only accept a string or number. You passed in: `undefined`\n\nhttps://on.cypress.io/type",
                    "estack": "CypressError: `cy.type()` can only accept a string or number. You passed in: `undefined`\n\nhttps://on.cypress.io/type\n    at Context.type (https://api.butest.tech/__cypress/runner/cypress_runner.js:115326:68)\n    at wrapped (https://api.butest.tech/__cypress/runner/cypress_runner.js:138450:19)\nFrom Your Spec Code:\n    at filterElements (webpack://bu-testing/./cypress/helpers/filter.js:15:92)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/filter.js:119:16)",
                    "diff": null
                  },
                  "uuid": "d8ac62aa-5dbb-4761-8a56-400e68f4b9a4",
                  "parentUUID": "b882c6f1-d603-437f-ae79-854babe8237a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "0f50bee8-ffd1-4b23-b5ca-a113af91dc30",
                "aed59bd9-12ca-4336-ac87-f2df9e991344",
                "a66ef5c4-39ed-4c33-b12e-8b33c7b1abcf",
                "4e73354c-f5ce-4bf1-afc3-b0c853d1e2ba",
                "c40dabd6-4b8c-4cd5-884e-bd3d808989d7",
                "d8ac62aa-5dbb-4761-8a56-400e68f4b9a4"
              ],
              "pending": [],
              "skipped": [],
              "duration": 52866,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0db1fa95-ae07-4778-93d0-d5dcfca77fd5",
              "title": "Apply filter on dropdown-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Apply  filter on stage",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on dropdown-based field to filter the records Apply  filter on stage",
                  "timedOut": null,
                  "duration": 6608,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "dropdownFilter(\"stg\", this);",
                  "err": {},
                  "uuid": "8b1dd0a4-4637-4b1b-a704-b5c8b5555377",
                  "parentUUID": "0db1fa95-ae07-4778-93d0-d5dcfca77fd5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Apply  filter on owner",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on dropdown-based field to filter the records Apply  filter on owner",
                  "timedOut": null,
                  "duration": 10254,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "dropdownFilter(\"own\", this);",
                  "err": {},
                  "uuid": "9c65f922-f0a3-40e9-be77-090700640c27",
                  "parentUUID": "0db1fa95-ae07-4778-93d0-d5dcfca77fd5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9c65f922-f0a3-40e9-be77-090700640c27"
              ],
              "failures": [],
              "pending": [
                "8b1dd0a4-4637-4b1b-a704-b5c8b5555377"
              ],
              "skipped": [],
              "duration": 16862,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "ee6e38e3-b0de-42db-a3c9-3bc0f5049e77",
              "title": "Apply filter on date&time-based field to filter the records",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Filter records based on the date & time field",
                  "fullTitle": "Navigate on filter and test filter functoinality Apply filter on date&time-based field to filter the records Filter records based on the date & time field",
                  "timedOut": null,
                  "duration": 15602,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.get('#filter').click();\ncy.wait(\"@filters\").then(({\n  response\n}) => {\n  let propDtm = response.body.result.filter(ele => ele.prop == \"dtm\");\n  cy.get(lead.searchInfilter).type(propDtm[0].label);\n  cy.wait(500);\n  cy.get(`span[aria-label=\"${propDtm[0].label}\"]`).click();\n});\ncy.get(lead.filerCaption).contains(\"Today till midnight\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 7 days\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 30 days\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Last 3 months\").click();\ncy.wait(500);\ncy.get(lead.filerCaption).contains(\"Custom Date\").click();\ncy.get('.rdrMonthPicker > select').select(previousMonth); // Select previous month\ncy.get('.rdrDayStartOfMonth > .rdrDayNumber').click(); // Choose date of previous month\ncy.get('.rdrNextButton').click(); // Click on next button to move on current month\ncy.get('.rdrDayToday > .rdrDayNumber').click(); // Choose date of current month",
                  "err": {},
                  "uuid": "84357b31-f33e-4f19-a277-8a90a31a5414",
                  "parentUUID": "ee6e38e3-b0de-42db-a3c9-3bc0f5049e77",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "84357b31-f33e-4f19-a277-8a90a31a5414"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15602,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8ea89aea-1c4f-436d-a622-9e289b521be3",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "afe2f064-bd0c-4055-87ec-f270aba9b93b",
          "title": "Test the functionality of notes",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\notes.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "save button should be disable without input notes",
              "fullTitle": "Test the functionality of notes save button should be disable without input notes",
              "timedOut": null,
              "duration": 13296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[data-testid=\"notes-box-q3iecxru9\"] button`).contains(\"Create\").wait(2000).click({\n  force: true\n});\n// twosecondWait()\ncyGet(`#tool-container [data-testid=\"Save\"]`).contains(\"Save\").trigger('mouseover', {\n  force: true\n}).should(\"be.disabled\");\ncyGet('.MuiTooltip-tooltip').should(\"have.text\", \"There is some error in form.\");",
              "err": {},
              "uuid": "5a68a183-e8b3-4c2a-b251-53d1c6f9d34e",
              "parentUUID": "afe2f064-bd0c-4055-87ec-f270aba9b93b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a notes",
              "fullTitle": "Test the functionality of notes Add a notes",
              "timedOut": null,
              "duration": 8334,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`[data-testid=\"notes-box-q3iecxru9\"] button`).contains(\"Create\").wait(2000).click({\n  force: true\n});\ncyGet(\"[data-testid='bunotepad-box-8lxcermoa']\").type(faker.lorem.sentence());\ncyGet(`#tool-container [data-testid=\"Save\"]`).click();",
              "err": {},
              "uuid": "750e90d7-6ade-43ae-bd82-401342d304f9",
              "parentUUID": "afe2f064-bd0c-4055-87ec-f270aba9b93b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update notes",
              "fullTitle": "Test the functionality of notes Update notes",
              "timedOut": null,
              "duration": 9439,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const updateNote = faker.lorem.sentence();\ncyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(\"[data-testid='bunotepad-box-8lxcermoa']\").first().clear().type(updateNote);\ncy.wait(500);\ncyGet('[data-testid=\"buwrapper-iconbutton-s8exp1h26\"]').click();\ncyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n  force: true\n});\ncyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(updateNote);\ncyGet(`[data-testid=\"card-typography-8vfwf8lhh\"]`).should(\"contain.text\", updateNote);",
              "err": {},
              "uuid": "067edd4e-d4a2-403a-9939-ebe41634b9a6",
              "parentUUID": "afe2f064-bd0c-4055-87ec-f270aba9b93b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Pin the notes",
              "fullTitle": "Test the functionality of notes Pin the notes",
              "timedOut": null,
              "duration": 7053,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const unpinnedNotes = response.body.result.values.find(note => note.pinned === false);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(unpinnedNotes.body);\n  cyGet(`#tool-container [role=\"rowgroup\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\n  cyGet('#pin').click();\n});",
              "err": {},
              "uuid": "7910e70d-d3a1-4363-b1a9-ab982c97e66b",
              "parentUUID": "afe2f064-bd0c-4055-87ec-f270aba9b93b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unpin the notes",
              "fullTitle": "Test the functionality of notes Unpin the notes",
              "timedOut": null,
              "duration": 6674,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pinnedNotes = response.body.result.values.find(note => note.pinned === true);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(pinnedNotes.body);\n  cyGet(`#tool-container [role=\"rowgroup\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\n  cyGet('#unpin').click();\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'body')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'body')\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/4_tools/notes.js:60:113)",
                "diff": null
              },
              "uuid": "55ad7d1a-760c-48c9-954c-9609b4ce075c",
              "parentUUID": "afe2f064-bd0c-4055-87ec-f270aba9b93b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Like notes",
              "fullTitle": "Test the functionality of notes Like notes",
              "timedOut": null,
              "duration": 7282,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pinnedNotes = response.body.result.values.find(note => note.liked === false);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(pinnedNotes.body);\n  cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\n  cyGet('#tool-container [type=\"button\"]').contains(\"Likes\").click(); // like button\n});",
              "err": {},
              "uuid": "2299895a-ff7a-4209-b558-cde05d8332af",
              "parentUUID": "afe2f064-bd0c-4055-87ec-f270aba9b93b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add a comment on note",
              "fullTitle": "Test the functionality of notes Add a comment on note",
              "timedOut": null,
              "duration": 7862,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const comment = faker.lorem.sentence();\ncyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(`[data-testid=\"addcomment-typography-34tc065nz\"]`).click();\ncyGet('#note-comment').type(comment);\ncyGet(`[data-testid=\"toolbar-button-b9qu80nyb\"]`).contains(\"Save\").click();\ncyGet(`[data-testid=\"bunotepad-box-8lxcermoa\"]`).contains(comment);",
              "err": {},
              "uuid": "5a2f57b3-85c5-419a-bb44-05750d9c699b",
              "parentUUID": "afe2f064-bd0c-4055-87ec-f270aba9b93b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Comment on a notes",
              "fullTitle": "Test the functionality of notes Update Comment on a notes",
              "timedOut": null,
              "duration": 10074,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(`[data-testid=\"commentlist-box-0u6rpj17w\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\ncyGet('#edit').click();\ncyGet(\"[data-testid='bunotepad-box-8lxcermoa']\").last().clear().type(faker.lorem.sentence());\ncyGet(`[data-testid=\"toolbar-button-b9qu80nyb\"]`).contains(\"Save\").click();",
              "err": {},
              "uuid": "dc4faaad-edd0-45e2-b6f2-96f60eda051d",
              "parentUUID": "afe2f064-bd0c-4055-87ec-f270aba9b93b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete Comment on a notes",
              "fullTitle": "Test the functionality of notes Delete Comment on a notes",
              "timedOut": null,
              "duration": 8245,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\ncyGet(`[data-testid=\"commentlist-box-0u6rpj17w\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).first().click();\ncyGet('#delete').click();\ncyGet(`[role=\"dialog\"] #customized-dialog-title p`).should(\"contain.text\", \"Delete Comment\");\ncyGet(`[data-testid=\"buconfirmation-typography-9lgofl82d\"]`).should(\"contain.text\", \"Are you sure you want to delete comment?\");\ncyGet(`[data-testid=\"Delete\"]`).contains(\"Delete\").click();",
              "err": {},
              "uuid": "ce50cd9d-8373-4b01-a91c-18054e9e041c",
              "parentUUID": "afe2f064-bd0c-4055-87ec-f270aba9b93b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Unlike notes",
              "fullTitle": "Test the functionality of notes Unlike notes",
              "timedOut": null,
              "duration": 6522,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n});\ncy.wait(\"@getNotes\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const pinnedNotes = response.body.result.values.find(note => note.liked === true);\n  cyGet('[data-testid=\"header-iconbutton-kigmjsnx1\"] > [data-testid=\"busvgicon-svgicon-5xuxnhkcv\"] > [data-testid=\"search-path-mbnqghet1\"]').click({\n    force: true\n  });\n  cyGet('[data-testid=\"header-textfield-269ovwuta\"] input[placeholder=\"search....\"]').type(pinnedNotes.body);\n  cyGet('#tool-container [data-testid=\"buvirtuallist-div-fv0syu6gz\"]').first().click();\n  cyGet('#tool-container [type=\"button\"]').contains(\"Likes\").click(); // like button\n});",
              "err": {},
              "uuid": "11ff5b42-f0cc-47b7-a348-2d52363d450d",
              "parentUUID": "afe2f064-bd0c-4055-87ec-f270aba9b93b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete notes",
              "fullTitle": "Test the functionality of notes Delete notes",
              "timedOut": null,
              "duration": 5637,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet(`#tool-container [role=\"rowgroup\"] [data-testid=\"busimpledropdown-iconbutton-81obeefh3\"]`).as(\"ellipsis\").first().click();\ncyGet('#delete').click();\ncyGet(`[role=\"dialog\"] #customized-dialog-title p`).should(\"contain.text\", \"Delete Note\");\ncyGet(`[data-testid=\"buconfirmation-typography-9lgofl82d\"]`).should(\"contain.text\", \"Are you sure you want to delete this note?\");\ncyGet(`[data-testid=\"Delete\"]`).contains(\"Delete\").click();",
              "err": {},
              "uuid": "d0ffbe2b-3975-4bc0-84d9-e1d7f2b98ab7",
              "parentUUID": "afe2f064-bd0c-4055-87ec-f270aba9b93b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a68a183-e8b3-4c2a-b251-53d1c6f9d34e",
            "750e90d7-6ade-43ae-bd82-401342d304f9",
            "067edd4e-d4a2-403a-9939-ebe41634b9a6",
            "7910e70d-d3a1-4363-b1a9-ab982c97e66b",
            "2299895a-ff7a-4209-b558-cde05d8332af",
            "5a2f57b3-85c5-419a-bb44-05750d9c699b",
            "dc4faaad-edd0-45e2-b6f2-96f60eda051d",
            "ce50cd9d-8373-4b01-a91c-18054e9e041c",
            "11ff5b42-f0cc-47b7-a348-2d52363d450d",
            "d0ffbe2b-3975-4bc0-84d9-e1d7f2b98ab7"
          ],
          "failures": [
            "55ad7d1a-760c-48c9-954c-9609b4ce075c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 90418,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d8d7f6c9-a342-472e-9944-4826f550d195",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
      "file": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "52ce992d-1704-4f3b-933a-5fed20bc3b0f",
          "title": "Test the functionality of notes",
          "fullFile": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
          "file": "cypress\\e2e\\lms\\lead\\4_tools\\task.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify auto assignment to login user",
              "fullTitle": "Test the functionality of notes Verify auto assignment to login user",
              "timedOut": null,
              "duration": 13460,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@appAuth\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const loginUser = response.body.result.user;\n  cy.wait(\"@existsPipelines\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    cyGet(`[aria-label=\"Tasks\"]`).click();\n    twosecondWait();\n    cyGet(`button[type=\"button\"]`).contains(\"Create task\").click({\n      force: true\n    });\n    cy.wait(\"@owners\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const findLoginUser = response.body.result.values.find(ele => ele.subLabel === loginUser.email);\n      cyGet(`#buForm [data-testid=\"avatarinput-textfield-ojwxr8kdk\"]`).contains(\"Assigned to\").next().find(`[data-testid=\"buchip-chip-5r51zm55o\"] span`).should(\"contain.text\", findLoginUser === null || findLoginUser === void 0 ? void 0 : findLoginUser.label);\n    });\n  });\n});",
              "err": {},
              "uuid": "1c45f951-ee15-4132-b199-71f6edceec4a",
              "parentUUID": "52ce992d-1704-4f3b-933a-5fed20bc3b0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create task in contact",
              "fullTitle": "Test the functionality of notes Create task in contact",
              "timedOut": null,
              "duration": 11858,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cyGet(`[aria-label=\"Tasks\"]`).click();\n  twosecondWait();\n  cyGet(`button[type=\"button\"]`).contains(\"Create task\").click({\n    force: true\n  });\n  cy.wait(\"@getformDetails\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    propwiseFields(response.body.result.values);\n    cyGet(`[data-testid=\"buttongroup-dialogactions-fb25djtod\"] [data-testid=\"Save\"]`).click();\n  });\n});",
              "err": {},
              "uuid": "b9c89ed7-32f6-4346-b3a2-ab2ed881fdc6",
              "parentUUID": "52ce992d-1704-4f3b-933a-5fed20bc3b0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit task in contact",
              "fullTitle": "Test the functionality of notes Edit task in contact",
              "timedOut": null,
              "duration": 17404,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cyGet(`[aria-label=\"Tasks\"]`).click();\n  twosecondWait();\n  searchAndChooseTask(\"Edit\").then(() => {\n    cy.wait(\"@getTaskById\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      const profile = response.body.result.profile;\n      propwiseFields(profile);\n    });\n    cyGet(`[data-testid=\"buttongroup-dialogactions-fb25djtod\"] [data-testid=\"Save\"]`).click();\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Option 1' within the element: <div.MuiFormGroup-root.css-1h7anqn> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Option 1' within the element: <div.MuiFormGroup-root.css-1h7anqn> but never did.\n    at Context.eval (webpack://bu-testing/./cypress/helpers/record.js:133:13)",
                "diff": null
              },
              "uuid": "5e04fa2f-7f02-43a8-8bbd-3a71ec7e919e",
              "parentUUID": "52ce992d-1704-4f3b-933a-5fed20bc3b0f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete task",
              "fullTitle": "Test the functionality of notes Delete task",
              "timedOut": null,
              "duration": 7053,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const msg1 = \"Delete task\";\nconst msg2 = \"Are you sure you want to delete this task?\";\ncy.wait(\"@existsPipelines\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  cyGet(`[aria-label=\"Tasks\"]`).click();\n  twosecondWait();\n  searchAndChooseTask(\"Delete\").then(() => {\n    buCaption(globalSel.dialogTitle, globalSel.dialogTitleText, msg1, globalSel.dialogconfirmationbox, msg2);\n    cyGet(globalSel.deltestid).click();\n  });\n});",
              "err": {},
              "uuid": "dbf4b926-0540-4c9c-a025-1e2c28a3dedd",
              "parentUUID": "52ce992d-1704-4f3b-933a-5fed20bc3b0f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c45f951-ee15-4132-b199-71f6edceec4a",
            "b9c89ed7-32f6-4346-b3a2-ab2ed881fdc6",
            "dbf4b926-0540-4c9c-a025-1e2c28a3dedd"
          ],
          "failures": [
            "5e04fa2f-7f02-43a8-8bbd-3a71ec7e919e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 49775,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0add3e03-0cf3-456b-a07c-3d2961f6735e",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5d7c6415-9dee-4704-86aa-562f44f32da4",
          "title": "Test the functionality of Addresses",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\address.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "eb809255-afdc-494b-b948-dfc16100f840",
              "title": "Test the functionality of add address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Add address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of add address Add address",
                  "timedOut": null,
                  "duration": 18337,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  var _addressField, _addressField2;\n  addressField = response.body.result.find(fld => fld.prop === \"add\");\n  if (!addressField) {\n    this.skip();\n  }\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField = addressField) === null || _addressField === void 0 ? void 0 : _addressField.label}]`).should(\"contain.text\", (_addressField2 = addressField) === null || _addressField2 === void 0 ? void 0 : _addressField2.label).click();\n  cy.wait(\"@addressDeatail\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const addressView = response.body.result.view;\n    cyGet(`[data-testid=\"Add\"]`).click();\n    // twosecondWait()\n    propwiseFields(addressView, {}, [], true);\n    cyGet(`#clone`).check();\n    cyGet('[data-testid=\"buwrapper-box-2gkcmtrgi\"] > [data-testid=\"buttongroup-box-ell22p9ne\"] > [data-testid=\"buttongroup-dialogactions-fb25djtod\"] > * > [data-testid=\"Save\"]').click();\n    cyGet('.MuiSnackbarContent-message').should(\"contain.text\", messages.created);\n  });\n});",
                  "err": {},
                  "uuid": "0034f105-f7c0-4fb0-9b54-25f337a4929b",
                  "parentUUID": "eb809255-afdc-494b-b948-dfc16100f840",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0034f105-f7c0-4fb0-9b54-25f337a4929b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18337,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a1949b3b-1b46-4a0a-af1c-733d24cd1688",
              "title": "Test the functionality of edit address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Edit address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of edit address Edit address",
                  "timedOut": null,
                  "duration": 18075,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _addressField3, _addressField4;\nif (!addressField) {\n  this.skip();\n}\ncyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField3 = addressField) === null || _addressField3 === void 0 ? void 0 : _addressField3.label}]`).should(\"contain.text\", (_addressField4 = addressField) === null || _addressField4 === void 0 ? void 0 : _addressField4.label).click();\ncy.wait(\"@addressDeatail\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const addressView = response.body.result.view;\n  const billingAddress = response.body.result.billing;\n  const shippingAddress = response.body.result.shipping;\n  if (billingAddress || shippingAddress) {\n    const country = addressView.find(view => view.prop === \"cnt\");\n    const fieldValues = billingAddress ? billingAddress.values[0][country.id] : shippingAddress.values[0][country.id];\n    cyGet(`[data-testid=\"addresssection-box-ykc0hvq21\"] [data-testid=\"busimpledropdown-box-l5z1y823c\"]`).first().click();\n    cyGet(`#edit`).click();\n    propwiseFields(addressView, {}, fieldValues, true);\n    cyGet('[data-testid=\"buwrapper-box-2gkcmtrgi\"] > [data-testid=\"buttongroup-box-ell22p9ne\"] > [data-testid=\"buttongroup-dialogactions-fb25djtod\"] > * > [data-testid=\"Save\"]').click();\n    cyGet('.MuiSnackbarContent-message').should(\"contain.text\", messages.updated);\n  }\n});",
                  "err": {},
                  "uuid": "8431bd97-bc9e-43de-8d6d-22f0b4f14fb4",
                  "parentUUID": "a1949b3b-1b46-4a0a-af1c-733d24cd1688",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8431bd97-bc9e-43de-8d6d-22f0b4f14fb4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18075,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "92eeeb9d-eab4-4460-888d-e854096e6e3b",
              "title": "Test the functionality of delete address",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete address",
                  "fullTitle": "Test the functionality of Addresses Test the functionality of delete address Delete address",
                  "timedOut": null,
                  "duration": 7924,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _addressField5, _addressField6;\nif (!addressField) {\n  this.skip();\n}\ncyGet(`[aria-label=\"Simple Tab\"] [aria-label=${(_addressField5 = addressField) === null || _addressField5 === void 0 ? void 0 : _addressField5.label}]`).should(\"contain.text\", (_addressField6 = addressField) === null || _addressField6 === void 0 ? void 0 : _addressField6.label).click();\ncyGet(`[data-testid=\"addresssection-box-ykc0hvq21\"] [data-testid=\"busimpledropdown-box-l5z1y823c\"]`).first().click();\ncyGet(`#delete`).click();\ncyGet('#customized-dialog-title p').should(\"have.text\", \"Delete Address\");\ncyGet(`[role=\"dialog\"] [data-testid=\"buconfirmation-typography-9lgofl82d\"]`).should(\"contain.text\", \"Are you sure to delete this address?\");\ncyGet(`[data-testid=\"Delete\"]`).contains(\"Delete\").click();",
                  "err": {},
                  "uuid": "0e91c68a-95ba-46bc-a5ef-634c078d82de",
                  "parentUUID": "92eeeb9d-eab4-4460-888d-e854096e6e3b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0e91c68a-95ba-46bc-a5ef-634c078d82de"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7924,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ec9132f6-d249-43e1-b28c-27688b1368c2",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "37c68187-9ead-4e05-80fb-c45f157838df",
          "title": "Test the functionality of Association",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\association.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "91292b01-2d27-4ac6-b6b4-1fb998d1a5ba",
              "title": "Test the functionality of Association",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Associate the record",
                  "fullTitle": "Test the functionality of Association Test the functionality of Association Associate the record",
                  "timedOut": null,
                  "duration": 19399,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let associatonField = response.body.result.find(ele => ele.prop === \"asc\");\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${associatonField === null || associatonField === void 0 ? void 0 : associatonField.label}\"]`).should(\"contain.text\", associatonField === null || associatonField === void 0 ? void 0 : associatonField.label).click();\n  if ((associatonField === null || associatonField === void 0 ? void 0 : associatonField.selection) == \"single\") {\n    cy.wait(\"@associations\").then(({\n      response\n    }) => {\n      if (response.body.result.values.length == 0) {\n        cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1)`).click();\n        cy.wait(1500);\n      } else {\n        cy.log(\"Association alredy exist\");\n      }\n    });\n  } else {\n    cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n    cy.wait(\"@associable\").then(({\n      response\n    }) => {\n      if (response.body.result.values.length > 1) {\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n        cy.get(`${lead.selectAssociableRecord} :nth-child(2) input`).click();\n        cy.wait(1500);\n      } else if (response.body.result.values.length = 1) {\n        cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n        cy.wait(1500);\n      } else if (response.body.result.values.length = 0) {\n        expect(response.body.result.values).to.be.length.eq(0);\n      }\n      ;\n    });\n  }\n  ;\n});",
                  "err": {},
                  "uuid": "fc717b13-8c42-4faa-87ce-09e4f5a66380",
                  "parentUUID": "91292b01-2d27-4ac6-b6b4-1fb998d1a5ba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fc717b13-8c42-4faa-87ce-09e4f5a66380"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19399,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "3795b2b7-8e60-462e-8ff9-de84a1b8a09b",
              "title": "Test the functionality of Remove Association",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Remove associated record from association list",
                  "fullTitle": "Test the functionality of Association Test the functionality of Remove Association Remove associated record from association list",
                  "timedOut": null,
                  "duration": 10988,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@getBiztab\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let associatonField = response.body.result.find(ele => ele.prop === \"asc\");\n  // expect(associatonField).be.length.greaterThan(0)\n  // cy.get(lead.simpleTab).contains(associatonField[0].label).click()\n  cyGet(`[aria-label=\"Simple Tab\"] [aria-label=\"${associatonField === null || associatonField === void 0 ? void 0 : associatonField.label}\"]`).should(\"contain.text\", associatonField === null || associatonField === void 0 ? void 0 : associatonField.label).click();\n  cy.wait(\"@associations\").then(({\n    response\n  }) => {\n    if (response.body.result.values == 0) {\n      cy.get(lead.tabpanelBtn).contains(\"Add\").click();\n      cy.get(`${lead.selectAssociableRecord} :nth-child(1) input`).click();\n      cy.wait(1500);\n      cy.get('[data-testid=\"commoncard-box-ze66boaek\"]').first().click();\n      cy.get(\"#remove\").click();\n    } else {\n      cy.get('[data-testid=\"commoncard-box-ze66boaek\"]').first().click();\n      cy.get(\"#remove\").click();\n    }\n    ;\n    cy.wait(\"@deleteAssociation\").then(({\n      response\n    }) => {\n      expect(response.body).has.property(\"message\", \"Associations removed successfully.\");\n    });\n  });\n});",
                  "err": {},
                  "uuid": "e85778e6-aae4-4af3-8a5f-f69f43bb7d0d",
                  "parentUUID": "3795b2b7-8e60-462e-8ff9-de84a1b8a09b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e85778e6-aae4-4af3-8a5f-f69f43bb7d0d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10988,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "66d2e2e2-7573-4ef2-9468-84fa982f3a93",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
      "file": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ac7e013f-e671-466a-936b-d7b2d9b58c32",
          "title": "Test the functionality of Attachment",
          "fullFile": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
          "file": "cypress\\e2e\\lms\\lead\\5_biztab\\attachment.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Attach file",
              "fullTitle": "Test the functionality of Attachment Attach file",
              "timedOut": null,
              "duration": 10291,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(lead.simpleTab).contains(\"Attachment\").click();\ncy.get(lead.tabpanelBtn).contains(\"Add\").click();\ncy.get('input[type=\"file\"]').selectFile(\"cypress/fixtures/data.csv\", {\n  force: true\n});\ncy.get('[role=\"tabpanel\"] .MuiTypography-noWrap').first().dblclick();\n// cy.wait(1000)\n// cy.get(lead.dialogTitle).contains(\"data.csv\")\ncy.get(`#customized-dialog-title ${lead.typeBtn}`).contains(\"Download\");\ncy.get('#customized-dialog-title .MuiIconButton-root').click();",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[aria-label=\"Simple Tab\"] button`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[aria-label=\"Simple Tab\"] button`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/5_biztab/attachment.js:11:11)",
                "diff": null
              },
              "uuid": "9be47366-6fd2-41f2-b5ad-288ebd87d28e",
              "parentUUID": "ac7e013f-e671-466a-936b-d7b2d9b58c32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Download file",
              "fullTitle": "Test the functionality of Attachment Download file",
              "timedOut": null,
              "duration": 6765,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(lead.simpleTab).contains(\"Attachment\").click();\ncy.get('#attachment-action').click();\ncy.get('#download').click();",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[aria-label=\"Simple Tab\"] button`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[aria-label=\"Simple Tab\"] button`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/5_biztab/attachment.js:22:11)",
                "diff": null
              },
              "uuid": "77997d35-264d-4a5b-8f91-9aeb1633c6b4",
              "parentUUID": "ac7e013f-e671-466a-936b-d7b2d9b58c32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete attached file",
              "fullTitle": "Test the functionality of Attachment delete attached file",
              "timedOut": null,
              "duration": 6956,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let msg2 = \"Are you sure want to delete this file?\";\ncy.get(lead.simpleTab).contains(\"Attachment\").click();\ncy.get('#attachment-action').click();\ncy.get('#delete').click();\ncy.roleDialog(lead.dialogTitle, \"Confirmation\", lead.dialogDesc, msg2, `.MuiDialogActions-root ${lead.typeBtn}`, \"Delete\");",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[aria-label=\"Simple Tab\"] button`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[aria-label=\"Simple Tab\"] button`, but never found it.\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/5_biztab/attachment.js:29:11)",
                "diff": null
              },
              "uuid": "5eddd7c8-4909-4302-b91b-e640726a8594",
              "parentUUID": "ac7e013f-e671-466a-936b-d7b2d9b58c32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9be47366-6fd2-41f2-b5ad-288ebd87d28e",
            "77997d35-264d-4a5b-8f91-9aeb1633c6b4",
            "5eddd7c8-4909-4302-b91b-e640726a8594"
          ],
          "pending": [],
          "skipped": [],
          "duration": 24012,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "57090b68-afd7-47a5-93ad-d62851cf7fd4",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "748c20c1-945b-4936-9255-2c3c649375c5",
          "title": "Test the functionality of bulk edit",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\1_bulk_edit.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Bulk edit the record",
              "fullTitle": "Test the functionality of bulk edit Bulk edit the record",
              "timedOut": null,
              "duration": 12012,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncyGet('table > thead input').check();\ncyGet('#bulkActions [data-testid=\"Edit\"]').contains(\"Edit\").click();\ncyGet(lead.dialogTitle).should(\"have.text\", \"Bulk record update\");\ncyGet(`[aria-label=\"Select Field\"]`).click();\ncy.wait(\"@getbulkEdit\").then(({\n  response\n}) => {\n  const bulkeditValues = response.body.result.values;\n  const lengthgetbulkEdit = bulkeditValues.length;\n  let stageField = bulkeditValues.find(ele => ele.label === \"Stage\");\n  if (lengthgetbulkEdit > 5) {\n    buSearchbox(globalSel.search, stageField === null || stageField === void 0 ? void 0 : stageField.label);\n  }\n  budropdownOption(stageField === null || stageField === void 0 ? void 0 : stageField.label).first().click({\n    force: true\n  });\n  handleDropdownField(stageField, `[data-testid=\"fields-box-xhbyf34nj\"]`, `[data-testid=\"buchip-chip-5r51zm55o\"]`);\n  if (lengthgetbulkEdit > 1) {\n    const otherField = bulkeditValues.find(ele => ele.label !== \"Stage\");\n    cyGet(`[data-testid=\"staticfieldcard-iconbutton-u6zoboy9a\"]`).click();\n    cyGet(`[aria-label=\"Select Field\"]`).click();\n    if (lengthgetbulkEdit > 5) {\n      buSearchbox(globalSel.search, otherField === null || otherField === void 0 ? void 0 : otherField.label);\n    }\n    budropdownOption(otherField === null || otherField === void 0 ? void 0 : otherField.label).first().click({\n      force: true\n    });\n    handleDropdownField(otherField, `[data-testid=\"fields-box-xhbyf34nj\"]`);\n  }\n  buSaveButton().click();\n  cyGet('.MuiSnackbarContent-message').should(\"have.text\", messages.requestSuccess);\n});",
              "err": {
                "message": "TypeError: Cannot destructure property 'label' of 'profile' as it is undefined.",
                "estack": "TypeError: Cannot destructure property 'label' of 'profile' as it is undefined.\n    at handleDropdownField (webpack://bu-testing/./cypress/helpers/record.js:79:12)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/6_bulkAction/1_bulk_edit.js:30:12)",
                "diff": null
              },
              "uuid": "9bde6299-a205-4ebf-937e-ea4d182e4fef",
              "parentUUID": "748c20c1-945b-4936-9255-2c3c649375c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "9bde6299-a205-4ebf-937e-ea4d182e4fef"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12012,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "89e4c3b8-4840-4ce9-82cb-a07ffb71c4ab",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "35a7b9b8-2b6e-4783-bc06-222a922000af",
          "title": "Test the functionality of bulk Assign",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\2_bulk_assign.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Single owner assignment",
              "fullTitle": "Test the functionality of bulk Assign Single owner assignment",
              "timedOut": null,
              "duration": 16087,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  const totalOwner = response.body.result.values.length;\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (totalOwner > 5) {\n    buSearchbox(globalSel.search, subLabel[0]);\n  }\n  ownerIndex(ownerLabel[0], subLabel[0]);\n  cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n  buSaveButton().click({\n    force: true\n  });\n});",
              "err": {},
              "uuid": "dd79811d-f239-45ba-abdf-9a2448aa2028",
              "parentUUID": "35a7b9b8-2b6e-4783-bc06-222a922000af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assign lead equally",
              "fullTitle": "Test the functionality of bulk Assign Assign lead equally",
              "timedOut": null,
              "duration": 10258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  const totalOwner = response.body.result.values.length;\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (response.body.result.values.length > 1) {\n    if (totalOwner > 5) {\n      buSearchbox(globalSel.search, subLabel[0]);\n    }\n    ownerIndex(ownerLabel[0], subLabel[0]);\n    if (totalOwner > 5) {\n      buSearchbox(globalSel.search, subLabel[1]);\n    }\n    ownerIndex(ownerLabel[1], subLabel[1]);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"eq\"]').click();\n    cyGet('[aria-label=\"Assign lead equally\"]').should(\"have.text\", \"Assign lead equally\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label === ownerLabel[0]);\n      let ownerName_1 = response.body.result.values.filter(ele => ele[ownerFieldId][0].label === ownerLabel[1]);\n      let recordLength = response.body.result.values.length;\n      if (recordLength % 2 === 0) {\n        expect(ownerName).have.length(recordLength / 2);\n        expect(ownerName_1).have.length(recordLength / 2);\n      } else {\n        expect(ownerName).have.length((recordLength + 1) / 2);\n        expect(ownerName_1).have.length((recordLength - 1) / 2);\n      }\n    });\n  } else {\n    ownerIndex(ownerLabel[0], subLabel[0]);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n    });\n  }\n});",
              "err": {},
              "uuid": "d8d44423-921a-4412-ab2e-b68014af0333",
              "parentUUID": "35a7b9b8-2b6e-4783-bc06-222a922000af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Assign all lead",
              "fullTitle": "Test the functionality of bulk Assign Assign all lead",
              "timedOut": null,
              "duration": 10001,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "onnerDialogbox();\ncy.wait(\"@getOwner\").then(({\n  response\n}) => {\n  let ownerLabel = response.body.result.values.map(ele => ele.label);\n  let subLabel = response.body.result.values.map(ele => ele.subLabel);\n  if (response.body.result.values.length > 1) {\n    ownerIndex(ownerLabel[0], subLabel[0], 1);\n    ownerIndex(ownerLabel[1], subLabel[1], 2);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"all\"]').should(\"be.checked\");\n    cyGet('[aria-label=\"Assign all\"]').should(\"have.text\", \"Assign all\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let ownerName_1 = response.body.result.values.filter(ele => ele[ownerFieldId][1].label == ownerLabel[1]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n      expect(ownerName_1).have.length(recordLength);\n    });\n  } else {\n    ownerIndex(ownerLabel[0], subLabel[0], 1);\n    cyGet('[data-testid=\"buselect-iconbutton-h6iohitzp\"]').click();\n    cyGet('input[name=\"all\"]').should(\"be.checked\");\n    cyGet('[aria-label=\"Assign all\"]').should(\"have.text\", \"Assign all\");\n    buSaveButton().click({\n      force: true\n    });\n    cy.wait(\"@getRecord\");\n    cy.wait(\"@getRecord\", {\n      timeout: 10000\n    }).then(({\n      response\n    }) => {\n      let ownerView = response.body.result.view.columns.filter(ele => ele.label == \"Owner\");\n      let ownerFieldId = ownerView[0].id;\n      let ownerName = response.body.result.values.filter(ele => ele[ownerFieldId][0].label == ownerLabel[0]);\n      let recordLength = response.body.result.values.length;\n      expect(ownerName).have.length(recordLength);\n    });\n  }\n  ;\n});",
              "err": {},
              "uuid": "5b1788b7-2153-4c69-9439-513fe58d5d4b",
              "parentUUID": "35a7b9b8-2b6e-4783-bc06-222a922000af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dd79811d-f239-45ba-abdf-9a2448aa2028",
            "d8d44423-921a-4412-ab2e-b68014af0333",
            "5b1788b7-2153-4c69-9439-513fe58d5d4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 36346,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "de70ca82-c8d6-4fb6-9935-2c739abfa2a8",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
      "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c7dbce1d-b473-46de-bc5b-6b65f54cd93e",
          "title": "Test the functionality of bulk delete",
          "fullFile": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
          "file": "cypress\\e2e\\lms\\lead\\6_bulkAction\\3_bulk_delete.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Soft delete records",
              "fullTitle": "Test the functionality of bulk delete Soft delete records",
              "timedOut": null,
              "duration": 13692,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncy.wait(\"@getRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  if (recordLength === 0) {\n    cyGet('table > thead input').should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    bulkdeletedialogElements(recordLength, asset, \"soft\", remainsRecord);\n  }\n  ;\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '1529' within the element: <p.MuiTablePagination-displayedRows.css-11uxvns> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '1529' within the element: <p.MuiTablePagination-displayedRows.css-11uxvns> but never did.\n    at bulkdeletedialogElements (webpack://bu-testing/./cypress/e2e/lms/lead/6_bulkAction/3_bulk_delete.js:29:51)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/6_bulkAction/3_bulk_delete.js:42:16)",
                "diff": null
              },
              "uuid": "dec81991-31ca-4ff2-8d05-d2a95426379b",
              "parentUUID": "c7dbce1d-b473-46de-bc5b-6b65f54cd93e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Hard delete records",
              "fullTitle": "Test the functionality of bulk delete Hard delete records",
              "timedOut": null,
              "duration": 11051,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cyGet(lead.arealabelGrid).click();\ncy.wait(\"@getRecord\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  if (recordLength === 0) {\n    cyGet('table > thead input').should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    bulkdeletedialogElements(recordLength, asset, \"hard\", remainsRecord);\n  }\n  ;\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '1529' within the element: <p.MuiTablePagination-displayedRows.css-11uxvns> but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: '1529' within the element: <p.MuiTablePagination-displayedRows.css-11uxvns> but never did.\n    at bulkdeletedialogElements (webpack://bu-testing/./cypress/e2e/lms/lead/6_bulkAction/3_bulk_delete.js:29:51)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/6_bulkAction/3_bulk_delete.js:57:16)",
                "diff": null
              },
              "uuid": "4200c08b-7a75-47b4-8361-6616ce2213db",
              "parentUUID": "c7dbce1d-b473-46de-bc5b-6b65f54cd93e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "dec81991-31ca-4ff2-8d05-d2a95426379b",
            "4200c08b-7a75-47b4-8361-6616ce2213db"
          ],
          "pending": [],
          "skipped": [],
          "duration": 24743,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "06891163-2e7e-4689-9b37-d4751daee4e7",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
      "file": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e6d601c9-d061-4826-b4ef-3fa7c5757653",
          "title": "Navigate the lead page and test grid view component",
          "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
          "file": "cypress\\e2e\\lms\\lead\\7_views\\globalSearch.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "eb6ca57e-6c3f-4442-8a0a-b827c6bb93ef",
              "title": "Global search for grid view",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "search using mobile number",
                  "fullTitle": "Navigate the lead page and test grid view component Global search for grid view search using mobile number",
                  "timedOut": null,
                  "duration": 20741,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const {\n    label,\n    catId\n  } = response.body.result;\n  cy.wait(\"@recordGrid\", {\n    timeout: 15000\n  }).then(({\n    response\n  }) => {\n    var _response$body$result;\n    let systemPhnFieldId = (_response$body$result = response.body.result.view.columns.find(ele => ele.label === \"Mobile number\")) === null || _response$body$result === void 0 ? void 0 : _response$body$result.id;\n    if (!systemPhnFieldId) {\n      const reqQs = {\n        module,\n        asset,\n        catId\n      };\n      const reqHeader = {\n        Authorization: `Bearer ${Cypress.env(\"token\")}`\n      };\n      request(\"GET\", gridViewUrl, reqHeader, reqQs).then(({\n        body\n      }) => {\n        const mobField = body.result.values.find(ele => ele.label === \"Mobile number\");\n        const payload = {\n          fields: [mobField === null || mobField === void 0 ? void 0 : mobField.id]\n        };\n        request(\"PATCH\", gridViewUrl, reqHeader, reqQs, payload).then(({\n          body\n        }) => {\n          expect(body).to.have.property(\"success\", true);\n        });\n      });\n      cy.reload();\n      cy.wait(\"@recordGrid\", {\n        timeout: 15000\n      }).then(({\n        response\n      }) => {\n        var _response$body$result2;\n        systemPhnFieldId = (_response$body$result2 = response.body.result.view.columns.find(ele => ele.label === \"Mobile number\")) === null || _response$body$result2 === void 0 ? void 0 : _response$body$result2.id;\n        performSearch(systemPhnFieldId, response.body.result);\n      });\n    } else {\n      performSearch(systemPhnFieldId, response.body.result);\n    }\n  });\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"CU1553\"]`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 10000ms: Expected to find element: `[data-testid=\"CU1553\"]`, but never found it.\n    at budropdownOption (webpack://bu-testing/./cypress/helpers/global.js:72:14)\n    at performSearch (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/globalSearch.js:33:12)\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/globalSearch.js:70:24)",
                    "diff": null
                  },
                  "uuid": "0c0d6979-34d3-42b5-828b-d6d8ae2f96cf",
                  "parentUUID": "eb6ca57e-6c3f-4442-8a0a-b827c6bb93ef",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "0c0d6979-34d3-42b5-828b-d6d8ae2f96cf"
              ],
              "pending": [],
              "skipped": [],
              "duration": 20741,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "296ee5df-1c1a-472d-9f6a-b9aa1df43aa4",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
      "file": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "606ee7a6-69d6-476f-a82e-aa9ca77136dd",
          "title": "Nevigate the lead page and test grid view componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
          "file": "cypress\\e2e\\lms\\lead\\7_views\\grid.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add Field on grid view",
              "fullTitle": "Nevigate the lead page and test grid view componet Add Field on grid view",
              "timedOut": null,
              "duration": 10116,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const {\n    label,\n    catId\n  } = response.body.result;\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    const allGroup = response.body.result.values.filter(ele => ele.group === label);\n    const selectedField = response.body.result.selectedProperties;\n    const lastIndexfield = allGroup.slice(-1);\n    if (selectedField.length >= 20) {\n      const attachFieldOnView = selectedField.slice(0, 10);\n      const apiUrl = Cypress.env(\"apiurl\");\n      const gridViewUrl = `${apiUrl}/fms/views/grid`;\n      const reqQs = {\n        module,\n        asset,\n        \"catId\": catId\n      };\n      const reqHeader = {\n        Authorization: \"Bearer \" + Cypress.env(\"token\")\n      };\n      const payload = {\n        fields: [...attachFieldOnView]\n      };\n      request(\"PATCH\", gridViewUrl, reqHeader, reqQs, payload).then(({\n        body\n      }) => {\n        expect(body).to.have.property(\"success\", true);\n      });\n      cyGet(`[data-testid=\"cancel\"]`).click();\n      cyGet('#fields').click();\n      cyGet('#editCol').click();\n    }\n    setFieldOnViewConfig('[role=\"dialog\"] [type=\"text\"]', lastIndexfield[0].label, lead.chkbxOnfieldConfig);\n    cyGet(lead.typeBtn).contains(\"Apply\").click();\n    cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\").then(({\n      response\n    }) => {\n      let fieldView = response.body.result.view.columns.filter(ele => ele.label == lastIndexfield[0].label);\n      expect(fieldView[0].label).to.eq(lastIndexfield[0].label);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 4050ms: `cy.click()` could not be issued because this element is currently animating:\n\n`<li class=\"MuiButtonBase-root MuiMenuItem-root MuiMenuItem-gutters MuiMenuItem-root MuiMenuItem-gutters menuItem css-7tzua6\" tabindex=\"-1\" role=\"menuitem\" id=\"editCol\" data-testid=\"busimpledropdown-menuitem-78eqrxt4n\">...</li>`\n\nYou can fix this problem by:\n  - Passing `{force: true}` which disables all error checking\n  - Passing `{waitForAnimations: false}` which disables waiting on animations\n  - Passing `{animationDistanceThreshold: 20}` which decreases the sensitivity\n\nhttps://on.cypress.io/element-is-animating",
                "estack": "CypressError: Timed out retrying after 4050ms: `cy.click()` could not be issued because this element is currently animating:\n\n`<li class=\"MuiButtonBase-root MuiMenuItem-root MuiMenuItem-gutters MuiMenuItem-root MuiMenuItem-gutters menuItem css-7tzua6\" tabindex=\"-1\" role=\"menuitem\" id=\"editCol\" data-testid=\"busimpledropdown-menuitem-78eqrxt4n\">...</li>`\n\nYou can fix this problem by:\n  - Passing `{force: true}` which disables all error checking\n  - Passing `{waitForAnimations: false}` which disables waiting on animations\n  - Passing `{animationDistanceThreshold: 20}` which decreases the sensitivity\n\nhttps://on.cypress.io/element-is-animating\n    at ensureElIsNotAnimating (https://api.butest.tech/__cypress/runner/cypress_runner.js:112829:66)\n    at ensureNotAnimating (https://api.butest.tech/__cypress/runner/cypress_runner.js:113102:3)\n    at runAllChecks (https://api.butest.tech/__cypress/runner/cypress_runner.js:113241:9)\n    at retryActionability (https://api.butest.tech/__cypress/runner/cypress_runner.js:113285:16)\n    at tryCatcher (https://api.butest.tech/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise.attempt.Promise.try (https://api.butest.tech/__cypress/runner/cypress_runner.js:4315:29)\n    at whenStable (https://api.butest.tech/__cypress/runner/cypress_runner.js:144102:68)\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:144043:14)\n    at tryCatcher (https://api.butest.tech/__cypress/runner/cypress_runner.js:1807:23)\n    at Promise._settlePromiseFromHandler (https://api.butest.tech/__cypress/runner/cypress_runner.js:1519:31)\n    at Promise._settlePromise (https://api.butest.tech/__cypress/runner/cypress_runner.js:1576:18)\n    at Promise._settlePromise0 (https://api.butest.tech/__cypress/runner/cypress_runner.js:1621:10)\n    at Promise._settlePromises (https://api.butest.tech/__cypress/runner/cypress_runner.js:1701:18)\n    at Promise._fulfill (https://api.butest.tech/__cypress/runner/cypress_runner.js:1645:18)\n    at <unknown> (https://api.butest.tech/__cypress/runner/cypress_runner.js:5450:46)\nFrom Your Spec Code:\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/grid.js:29:30)",
                "diff": null
              },
              "uuid": "63f67fca-51ed-436a-9aac-b8b3e6d6fbda",
              "parentUUID": "606ee7a6-69d6-476f-a82e-aa9ca77136dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Field from grid view",
              "fullTitle": "Nevigate the lead page and test grid view componet Remove Field from grid view",
              "timedOut": null,
              "duration": 8873,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let pipName = response.body.result.label;\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let allGroup = response.body.result.values.filter(ele => ele.group == pipName);\n    let lstindexfield = allGroup.slice(-1);\n    cy.get('[role=\"dialog\"] [type=\"text\"]').clear().type(lstindexfield[0].label);\n    cy.get('.MuiBox-root > .MuiListItem-root input').first().then($ele => {\n      if ($ele.is(':checked')) {\n        cy.wrap($ele).first().click();\n      } else {\n        cy.wrap($ele).first().click(); //check then\n        cy.wrap($ele).first().click(); // uncheck\n      }\n    });\n    cy.get(lead.typeBtn).contains(\"Apply\").click();\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Updated successfully.\");\n    cy.wait(\"@recordGrid\");\n    cy.wait(\"@recordGrid\").then(({\n      response\n    }) => {\n      let fieldView = response.body.result.view.columns.map(ele => ele.label);\n      fieldView.forEach(ele => {\n        expect(ele).be.not.eq(lstindexfield[0].label);\n      });\n    });\n  });\n});",
              "err": {},
              "uuid": "2d168a6e-32c1-4788-aed5-1b8aef35c304",
              "parentUUID": "606ee7a6-69d6-476f-a82e-aa9ca77136dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Re-order field on grid view config page",
              "fullTitle": "Nevigate the lead page and test grid view componet Re-order field on grid view config page",
              "timedOut": null,
              "duration": 9228,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n}).then(() => {\n  cyGet('#fields').click();\n  cyGet('#editCol').click();\n  cy.wait(\"@gridViewConfig\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let selectedProp = response.body.result.selectedProperties;\n    if (selectedProp.length > 3) {\n      cy.dragAndDrop(`[data-rbd-draggable-id=\"${selectedProp[1]}\"]`, `[data-rbd-draggable-id=\"${selectedProp[2]}\"]`);\n      onesecondWait();\n      cyGet(lead.typeBtn).contains(\"Apply\").click();\n      cy.wait(\"@recordGrid\");\n      cy.wait(\"@recordGrid\").then(({\n        response\n      }) => {\n        expect(response.body.result.view.columns[1]).have.property(\"id\", selectedProp[2]);\n        expect(response.body.result.view.columns[2]).have.property(\"id\", selectedProp[1]);\n      });\n    } else {\n      this.skip();\n    }\n  });\n});",
              "err": {
                "message": "AssertionError: expected { Object (id, label, ...) } to have property 'id' of '65166fe89a2d3227fe64e0cf', but got '65166fe89a2d3227fe64e0c3'",
                "estack": "AssertionError: expected { Object (id, label, ...) } to have property 'id' of '65166fe89a2d3227fe64e0cf', but got '65166fe89a2d3227fe64e0c3'\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/lead/7_views/grid.js:103:74)",
                "diff": "- '65166fe89a2d3227fe64e0c3'\n+ '65166fe89a2d3227fe64e0cf'\n"
              },
              "uuid": "d115d9fa-a2cf-4ab3-b386-7f896c36e65e",
              "parentUUID": "606ee7a6-69d6-476f-a82e-aa9ca77136dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Redirect on field setting page after clicking on \"manage field\" button",
              "fullTitle": "Nevigate the lead page and test grid view componet Redirect on field setting page after clicking on \"manage field\" button",
              "timedOut": null,
              "duration": 2849,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cyGet('#fields').click();\ncyGet('#editCol').click();\ncyGet(`[data-testid=\"Manage fields\"]`).contains(\"Manage fields\").click();\ncy.url().should(\"eq\", `${updatedUrl}/setting/properties`);\ncyGet('.MuiTypography-caption').contains(`Fields store information about ${moduleName}.`);",
              "err": {},
              "uuid": "12e928d1-97ec-4745-aa97-b0f8aa0aba31",
              "parentUUID": "606ee7a6-69d6-476f-a82e-aa9ca77136dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the detail page",
              "fullTitle": "Nevigate the lead page and test grid view componet Should redirected to the detail page",
              "timedOut": null,
              "duration": 8529,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@recordGrid\").then(({\n  response\n}) => {\n  const recordId = response.body.result.values[0].id;\n  const uidField = response.body.result.view.columns.find(ele => ele.prop === \"uid\");\n  const uidFieldValue = response.body.result.values[0][uidField.id];\n  cy.contains(`tr`, uidFieldValue).find(`td`).contains(uidFieldValue).click({\n    force: true\n  });\n  cy.url().should(\"contain\", `${updatedUrl}/${asset}s/${recordId}`);\n});",
              "err": {},
              "uuid": "60ae56eb-03c3-4dca-b1d7-75911583be1d",
              "parentUUID": "606ee7a6-69d6-476f-a82e-aa9ca77136dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2d168a6e-32c1-4788-aed5-1b8aef35c304",
            "12e928d1-97ec-4745-aa97-b0f8aa0aba31",
            "60ae56eb-03c3-4dca-b1d7-75911583be1d"
          ],
          "failures": [
            "63f67fca-51ed-436a-9aac-b8b3e6d6fbda",
            "d115d9fa-a2cf-4ab3-b386-7f896c36e65e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39595,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5cf91f71-95f7-47aa-b53d-158452d4cece",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
      "file": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "488fa207-8ced-42ab-8222-9eff04dd68e7",
          "title": "Nevigate the lead page and test kanban view componet",
          "fullFile": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
          "file": "cypress\\e2e\\lms\\lead\\7_views\\kanban.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify uid field should be required and selected on kanban view",
              "fullTitle": "Nevigate the lead page and test kanban view componet Verify uid field should be required and selected on kanban view",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncy.wait(\"@kanbanViewConfig\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  getKanbanResult = response.body.result;\n  const uidField = getKanbanResult.values.find(ele => ele.required === true);\n  expect(uidField).has.property(\"label\", `${assetName} Id`);\n  expect(uidField).has.property(\"required\", true);\n  expect(uidField).has.property(\"selected\", true);\n  cyGet('[variant=\"standard\"] [type=\"search\"]').type(uidField === null || uidField === void 0 ? void 0 : uidField.label);\n  cyGet(lead.chkbxOnfieldConfig).first().should(\"be.checked\").and(\"be.disabled\");\n});",
              "err": {},
              "uuid": "6f494029-fdcf-430f-8852-e5e0b164a8c4",
              "parentUUID": "488fa207-8ced-42ab-8222-9eff04dd68e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Add Field on Kanban view if selected field less than 5",
              "fullTitle": "Nevigate the lead page and test kanban view componet Add Field on Kanban view if selected field less than 5",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\nconst selectedFields = getKanbanResult.selectedProperties;\nif (selectedFields.length < 5) {\n  const unselectedFields = getKanbanResult.values.find(ele => ele.selected === false);\n  cy.log(JSON.stringify(selectedFields));\n  cy.log(JSON.stringify(unselectedFields));\n  setFieldOnViewConfig('[variant=\"standard\"] [type=\"search\"]', unselectedFields === null || unselectedFields === void 0 ? void 0 : unselectedFields.label, lead.chkbxOnfieldConfig);\n  cyGet(lead.typeBtn).contains(\"Save\").click();\n} else {\n  cy.log(`5 field already selected`);\n}",
              "err": {},
              "uuid": "5041c376-1601-492b-bdfc-88b63e40e319",
              "parentUUID": "488fa207-8ced-42ab-8222-9eff04dd68e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Remove Field on Kanban view",
              "fullTitle": "Nevigate the lead page and test kanban view componet Remove Field on Kanban view",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet('[data-rbd-droppable-id=\"column\"]').children().then(childlength => {\n  let count = Cypress.$(childlength).length;\n  let nth = count - 1;\n  cy.log('option count: ', count);\n  cyGet(`[data-rbd-droppable-id=\"column\"] > :nth-child(${nth}) > :nth-child(1) > :nth-child(1) > :nth-child(2)`).click();\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();",
              "err": {},
              "uuid": "c979dc8b-8dbe-476e-a115-2aa9da913775",
              "parentUUID": "488fa207-8ced-42ab-8222-9eff04dd68e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Card style: Compact",
              "fullTitle": "Nevigate the lead page and test kanban view componet Card style: Compact",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet(`[name=\"compact\"]`).then($ele => {\n  if ($ele.is(':checked')) {\n    cy.log(`Compact already checked`);\n  } else {\n    cy.wrap($ele).check();\n  }\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\ncy.wait(\"@recordKanben\");\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.config).have.property(\"cardStyle\", \"compact\");\n});",
              "err": {},
              "uuid": "1929f31d-6b2e-43a1-b281-44479c68de3a",
              "parentUUID": "488fa207-8ced-42ab-8222-9eff04dd68e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Card style: Default",
              "fullTitle": "Nevigate the lead page and test kanban view componet Card style: Default",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncyGet(`[name=\"default\"]`).then($ele => {\n  if ($ele.is(':checked')) {\n    cy.log(`Default already checked`);\n  } else {\n    cy.wrap($ele).check();\n  }\n});\ncyGet(lead.typeBtn).contains(\"Save\").click();\ncy.wait(1000);\ncy.wait(\"@recordKanben\");\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.config).have.property(\"cardStyle\", \"default\");\n});",
              "err": {},
              "uuid": "fb160f70-fd7f-42e7-aa3b-6f0a1fae1345",
              "parentUUID": "488fa207-8ced-42ab-8222-9eff04dd68e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Re-order field on kanban view config page",
              "fullTitle": "Nevigate the lead page and test kanban view componet Re-order field on kanban view config page",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncyGet('#fields').click();\ncyGet('#editKanbanViewCard').click();\ncy.wait(\"@kanbanViewConfig\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let selectedProp = response.body.result.selectedProperties;\n  expect(response.body.result.selectedProperties).be.length.greaterThan(2);\n  cy.dragAndDrop(`[data-rbd-draggable-id=\"${selectedProp[1]}\"]`, `[data-rbd-draggable-id=\"${selectedProp[2]}\"]`);\n  onesecondWait();\n  cyGet(lead.typeBtn).contains(\"Save\").click();\n  cy.wait(\"@recordKanben\");\n  cy.wait(\"@recordKanben\").then(({\n    response\n  }) => {\n    expect(response.body.result.config.fields[0]).have.property(\"id\", selectedProp[2]);\n    expect(response.body.result.config.fields[1]).have.property(\"id\", selectedProp[1]);\n  });\n});",
              "err": {},
              "uuid": "4f8781d1-a60d-4ac9-a1a1-f5c16f7b71b8",
              "parentUUID": "488fa207-8ced-42ab-8222-9eff04dd68e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the create record form after clicking the \"Add Lead\" button",
              "fullTitle": "Nevigate the lead page and test kanban view componet Should redirected to the create record form after clicking the \"Add Lead\" button",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData = response.body.result.values[stageOnKanban[1]];\n  cyGet(`[data-rbd-draggable-id=\"${stageOnKanban[1]}\"] > :nth-child(1) > :nth-child(1)> :nth-child(1) > :nth-child(1)`).should(\"have.text\", stageData.label);\n  cyGet(`[data-rbd-draggable-id=\"${stageOnKanban[1]}\"] > :nth-child(1) > :nth-child(4) button`).click();\n  cy.componentLabel(lead.formLabel, \"Mobile number\", \"input\").type(faker.string.numeric(10));\n  cy.componentLabel(lead.formLabel, \"Stage\", \"span\").should(\"have.text\", stageData.label);\n  cyGet(lead.saveBtn).click();\n  cyGet('.MuiSnackbarContent-message').should(\"have.text\", \"Created successfully.\");\n});",
              "err": {},
              "uuid": "c3eb4016-02f6-461e-80c6-525d94a568e0",
              "parentUUID": "488fa207-8ced-42ab-8222-9eff04dd68e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Drag and drop an item one stage to another stage",
              "fullTitle": "Nevigate the lead page and test kanban view componet Drag and drop an item one stage to another stage",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[1]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cy.dragAndDrop(`[data-rbd-draggable-id=\"${itemId_1[0]}\"]`, `[data-rbd-draggable-id=\"${stageOnKanban[0]}\"]`);\n  cy.wait(1000);\n  cy.wait(\"@kanbanStage\").then(({\n    response\n  }) => {\n    expect(response.body).have.property(\"message\", \"Updated successfully.\");\n    expect(response.body.result.source).have.property(\"id\", stageOnKanban[1]);\n    expect(response.body.result.target).have.property(\"id\", stageOnKanban[0]);\n  });\n});",
              "err": {},
              "uuid": "4ba706f9-33f3-4263-99a0-4137934cc77a",
              "parentUUID": "488fa207-8ced-42ab-8222-9eff04dd68e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should redirected to the detail page after clicking the \"edit\" button",
              "fullTitle": "Nevigate the lead page and test kanban view componet Should redirected to the detail page after clicking the \"edit\" button",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[0]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cyGet(`[data-rbd-draggable-id=\"${itemId_1[0]}\"] [aria-controls=\"more\"]`).click();\n  cyGet('[role=\"menu\"] > :nth-child(1) > li').first().find(\"span\").contains(\"Edit\").click();\n  cy.url().should(\"contain\", `${updatedUrl}/${asset}s/${itemId_1[0]}`);\n});",
              "err": {},
              "uuid": "93fc6b03-f408-4b90-a7d8-a27e533926c8",
              "parentUUID": "488fa207-8ced-42ab-8222-9eff04dd68e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "delete record from kanban view page",
              "fullTitle": "Nevigate the lead page and test kanban view componet delete record from kanban view page",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "cy.wait(\"@existPipeline\", {\n  timeout: 10000\n});\ncy.wait(\"@recordKanben\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  let dialogDecs = `Are you sure you want to delete this ${asset}?`;\n  let stageOnKanban = response.body.result.displayOrder;\n  let stageData_1 = response.body.result.values[stageOnKanban[0]];\n  let itemId_1 = stageData_1.items.map(ele => ele.id);\n  cyGet(`[data-rbd-draggable-id=\"${itemId_1[0]}\"] [aria-controls=\"more\"]`).click();\n  cyGet('[role=\"menu\"] > :nth-child(1) > li').last().find(\"span\").contains(\"Delete\").click();\n  cy.roleDialog(lead.dialogTitle, `Delete ${asset}`, lead.dialogDesc, dialogDecs, '#delete', \"Delete\");\n  cy.wait(\"@deleteRecord\").then(({\n    response\n  }) => {\n    expect(response.body).have.property(\"message\", \"Deleted successfully.\");\n  });\n});",
              "err": {},
              "uuid": "f182f869-0e5e-41ef-9d2c-7268c224f5a7",
              "parentUUID": "488fa207-8ced-42ab-8222-9eff04dd68e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "6f494029-fdcf-430f-8852-e5e0b164a8c4",
            "5041c376-1601-492b-bdfc-88b63e40e319",
            "c979dc8b-8dbe-476e-a115-2aa9da913775",
            "1929f31d-6b2e-43a1-b281-44479c68de3a",
            "fb160f70-fd7f-42e7-aa3b-6f0a1fae1345",
            "4f8781d1-a60d-4ac9-a1a1-f5c16f7b71b8",
            "c3eb4016-02f6-461e-80c6-525d94a568e0",
            "4ba706f9-33f3-4263-99a0-4137934cc77a",
            "93fc6b03-f408-4b90-a7d8-a27e533926c8",
            "f182f869-0e5e-41ef-9d2c-7268c224f5a7"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "66f25ad8-8f7e-43e0-a7ab-5bec77e308f2",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
      "file": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9b21935d-c6f5-4d1d-83a9-79a3887b0a68",
          "title": "Nevigate the setting page and delete and restore field",
          "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
          "file": "cypress\\e2e\\lms\\setting\\9_bin\\field.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete or detach a field and verify that it is stored in the deleted field section",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete or detach a field and verify that it is stored in the deleted field section",
              "timedOut": null,
              "duration": 9000,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${updatedUrl}/setting/properties`);\n// cy.visit(`${Cypress.env(\"lmsUrl\")}/setting/properties`)\ncy.wait(\"@fieldGrid\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  const nonSystemFields = response.body.result.values.filter(field => field.system === false);\n  // cy.log(JSON.stringify(nonSystemFields))\n  let fieldData = nonSystemFields.slice(-1);\n  // cy.log(JSON.stringify(fieldData))\n  let attachedCount = nonSystemFields[0].attachedCount.count;\n  if (attachedCount <= 1) {\n    (0, _global.fieldSearchAndAct)(fieldData[0].label, \"#delete\");\n    cy.get(\"#delete\").click();\n  } else {\n    (0, _global.fieldSearchAndAct)(fieldData[0].label, \"#detach\");\n    cy.get(\"#detach\").click();\n  }\n  cy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n    timeout: 10000\n  }).contains(\"Deleted fields\").click();\n  cy.wait(\"@binList\", {\n    timeout: 10000\n  }).then(({\n    response\n  }) => {\n    let binField = response.body.result.values.map(ele => ele.label);\n    cy.log(JSON.stringify(binField));\n    // if (response.body.result.pages.totalNoOfPages == 1) {\n    //     expect(binField.slice(-1)).to.be.contains(fieldData[0].label)\n    // } else {\n    //     cy.get('[aria-label=\"pagination navigation\"] ul > :last').prev().click()\n    //     cy.wait(\"@binList\", { timeout: 10000 }).then(({ response }) => {\n    //         let binField = response.body.result.values.map(ele => ele.label)\n    //         expect(binField.slice(-1)).to.be.contains(fieldData[0].label)\n    //     })\n    // }\n  });\n});",
              "err": {},
              "uuid": "4db263e8-2ee1-441d-8a8b-e69bb9740855",
              "parentUUID": "9b21935d-c6f5-4d1d-83a9-79a3887b0a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore field from field tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Restore field from field tab",
              "timedOut": null,
              "duration": 2153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let title = \"Restore 1 field ?\";\nlet desc = \"Are you sure you want to  restore 1 field ?\";\ncy.visit(`${updatedUrl}/setting/properties`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Deleted fields\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#restore\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[data-testid=\"Restore\"]`, \"Restore\");\n});",
              "err": {},
              "uuid": "0b754299-7be0-4ac0-8f0c-4f237c7a86a0",
              "parentUUID": "9b21935d-c6f5-4d1d-83a9-79a3887b0a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete field from field tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete field from field tab",
              "timedOut": null,
              "duration": 1271,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Delete 1 field ?\";\nlet desc = \"Are you sure you want to  delete 1 field ?\";\ncy.visit(`${updatedUrl}/setting/properties`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Deleted fields\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#delete\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:90:58)",
                "diff": ""
              },
              "uuid": "fb875761-9ec3-45ee-ba06-50443ab6148b",
              "parentUUID": "9b21935d-c6f5-4d1d-83a9-79a3887b0a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Filter single line field and verify column with rows us",
              "fullTitle": "Nevigate the setting page and delete and restore field Filter single line field and verify column with rows us",
              "timedOut": null,
              "duration": 4548,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.recordCountOnPage(\"10\");\ncy.get('[aria-label=\"Select field type\"]').click();\nfieldTypeFilterSel(\"Multi line text\");\ncy.get('.MuiButton-endIcon').click();\ncy.wait(\"@binList\");\ncy.wait(\"@binList\");\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  let binFieldLabel = response.body.result.values.map(ele => ele.label);\n  let deletedType = response.body.result.values.map(ele => {\n    return ele.type.charAt(0).toUpperCase() + ele.type.slice(1);\n  });\n  let deletedBy = response.body.result.values.map(ele => ele.deletedBy);\n  let userName = deletedBy.map(key => {\n    let label = key.label;\n    return label;\n  });\n  let fieldTypeArray = Array(binFieldLabel.length).fill(\"Multi line text\");\n  verifyTablecolNrow(lead.thead, 2, \"Field name\", lead.tbody, binFieldLabel);\n  verifyTablecolNrow(lead.thead, 3, \"Field type\", lead.tbody, fieldTypeArray);\n  verifyTablecolNrow(lead.thead, 4, \"Deleted by\", lead.tbody, userName);\n  verifyTablecolNrow(lead.thead, 5, \"Deleted type\", lead.tbody, deletedType);\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:107:58)",
                "diff": ""
              },
              "uuid": "e975220a-82b6-4cc3-b0d3-d85c5d0a0f87",
              "parentUUID": "9b21935d-c6f5-4d1d-83a9-79a3887b0a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore field from bin tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Restore field from bin tab",
              "timedOut": null,
              "duration": 1048,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Restore 1 field ?\";\nlet desc = \"Are you sure you want to restore 1 field ? \";\ncy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#restore\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Restore\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:131:58)",
                "diff": ""
              },
              "uuid": "c9a6eed4-d1d8-4d2c-97b4-b5007c82766f",
              "parentUUID": "9b21935d-c6f5-4d1d-83a9-79a3887b0a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete field from bin tab",
              "fullTitle": "Nevigate the setting page and delete and restore field Delete field from bin tab",
              "timedOut": null,
              "duration": 1007,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let title = \"Delete 1  field ?\";\nlet desc = \"Are you sure you want to delete 1 field ? \";\ncy.visit(`${updatedUrl}/setting/bin`);\ncy.get('[data-testid=\"busimpletabs-tab-6lg4m8h6g\"]', {\n  timeout: 10000\n}).contains(\"Field\").click();\ncy.wait(\"@binList\", {\n  timeout: 10000\n}).then(({\n  response\n}) => {\n  expect(response.body.result.values).be.length.greaterThan(0);\n  cy.get('[data-testid=\"actions-box-it835w1xf\"] button').first().click();\n  cy.get(\"#delete\").click();\n  roleDialog(lead.dialogTitle, title, lead.dialogDesc, desc, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n});",
              "err": {
                "message": "AssertionError: expected [] to have a length above 0 but got 0",
                "estack": "AssertionError: expected [] to have a length above 0 but got 0\n    at Context.eval (webpack://bu-testing/./cypress/e2e/lms/setting/9_bin/field.js:144:58)",
                "diff": ""
              },
              "uuid": "7ab46ba1-bf11-4e5b-91e2-7e91ed9905e4",
              "parentUUID": "9b21935d-c6f5-4d1d-83a9-79a3887b0a68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4db263e8-2ee1-441d-8a8b-e69bb9740855",
            "0b754299-7be0-4ac0-8f0c-4f237c7a86a0"
          ],
          "failures": [
            "fb875761-9ec3-45ee-ba06-50443ab6148b",
            "e975220a-82b6-4cc3-b0d3-d85c5d0a0f87",
            "c9a6eed4-d1d8-4d2c-97b4-b5007c82766f",
            "7ab46ba1-bf11-4e5b-91e2-7e91ed9905e4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 19027,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "06277d64-52c2-4db2-b123-324859dab396",
      "title": "",
      "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
      "file": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4515e9bf-c180-4571-9d34-028b4f6bb951",
          "title": "Test the functionality of restore contact from bin",
          "fullFile": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
          "file": "cypress\\e2e\\lms\\setting\\9_bin\\record.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check if the Cancel button is working when restoring contact from bin",
              "fullTitle": "Test the functionality of restore contact from bin Check if the Cancel button is working when restoring contact from bin",
              "timedOut": null,
              "duration": 5914,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(lead.typeBtn).contains(\"Delete\").should(\"be.disabled\");\ncy.get(lead.typeBtn).contains(\"Restore\").should(\"be.disabled\");\ncy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  uidFeild = response.body.result.view.columns.find(fld => fld.prop === \"uid\");\n  const msg1 = `Restore ${recordLength} ${asset} ?`;\n  const msg2 = `Are you sure you want to restore ${recordLength} ${asset} ? `;\n  if (totalRecord === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(totalRecord).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Restore\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, lead.typeBtn, \"Cancel\");\n    cy.wait(500);\n    cy.get(lead.countOnGrid).contains(totalRecord);\n  }\n});",
              "err": {},
              "uuid": "6e421c12-7b06-45c2-b29a-21fc5ddc29fc",
              "parentUUID": "4515e9bf-c180-4571-9d34-028b4f6bb951",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Restore the contact from bin",
              "fullTitle": "Test the functionality of restore contact from bin Restore the contact from bin",
              "timedOut": null,
              "duration": 1543,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  let msg1 = `Restore ${recordLength} lead ?`;\n  let msg2 = `Are you sure you want to restore ${recordLength} lead ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Restore\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `.MuiDialogActions-root ${lead.typeBtn}`, \"Restore\");\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Request successful.\");\n    cy.get(lead.countOnGrid).contains(remainsRecord);\n  }\n});",
              "err": {},
              "uuid": "4a58d184-7bbb-436b-a8eb-d75b895367fe",
              "parentUUID": "4515e9bf-c180-4571-9d34-028b4f6bb951",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check if the Cancel button is working when deleting contact from bin",
              "fullTitle": "Test the functionality of restore contact from bin Check if the Cancel button is working when deleting contact from bin",
              "timedOut": null,
              "duration": 1764,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let msg1 = `Delete ${recordLength} ${asset} ?`;\n  let msg2 = `Are you sure you want to delete ${recordLength} ${asset} ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, lead.typeBtn, \"Cancel\");\n    cy.wait(500);\n    cy.get(lead.countOnGrid).contains(totalRecord);\n  }\n});",
              "err": {},
              "uuid": "20fef56b-88f2-4a4a-b980-b97be6c1af88",
              "parentUUID": "4515e9bf-c180-4571-9d34-028b4f6bb951",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete the contact from bin",
              "fullTitle": "Test the functionality of restore contact from bin Delete the contact from bin",
              "timedOut": null,
              "duration": 1465,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.wait(\"@binRecord\").then(({\n  response\n}) => {\n  let recordLength = response.body.result.values.length;\n  let totalRecord = response.body.result.pages.totalRecords;\n  let remainsRecord = totalRecord - recordLength;\n  let msg1 = `Delete ${recordLength} ${asset} ?`;\n  let msg2 = `Are you sure you want to delete ${recordLength} ${asset} ? `;\n  if (recordLength === 0) {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).should(\"be.disabled\");\n    expect(recordLength).to.be.eq(0);\n  } else {\n    cy.contains(`tr`, uidFeild.label).find(`input[type=\"checkbox\"]`).check();\n    cy.get(lead.typeBtn).contains(\"Delete\").click();\n    cy.roleDialog(lead.dialogTitle, msg1, lead.dialogDesc, msg2, `[role=\"dialog\"] ${lead.typeBtn}`, \"Delete\");\n    cy.get('.MuiSnackbarContent-message').should(\"have.text\", \"Deleted successfully.\");\n    cy.get(lead.countOnGrid).contains(remainsRecord);\n  }\n});",
              "err": {},
              "uuid": "24015a70-3a8a-4458-942f-e88a461bc777",
              "parentUUID": "4515e9bf-c180-4571-9d34-028b4f6bb951",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6e421c12-7b06-45c2-b29a-21fc5ddc29fc",
            "4a58d184-7bbb-436b-a8eb-d75b895367fe",
            "20fef56b-88f2-4a4a-b980-b97be6c1af88",
            "24015a70-3a8a-4458-942f-e88a461bc777"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10686,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[datetime]",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "reportPageTitle": "Buopso-UI-Report",
        "embeddedScreenshots": true,
        "inlineAssets": true,
        "saveAllAttempts": false,
        "overwrite": false,
        "reportFilename": "[datetime]",
        "timestamp": "isoDateTime",
        "html": false,
        "json": true,
        "reportDir": "cypress\\reports\\.jsons",
        "saveJson": true
      },
      "version": "6.2.0"
    }
  }
}